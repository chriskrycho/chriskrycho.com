<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.8" created="2014-01-15 20:46" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Designgineering</title>
	<link>http://2012-2013.chriskrycho.com/web</link>
	<description>web design &#38; development</description>
	<pubDate>Wed, 15 Jan 2014 20:46:19 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://2012-2013.chriskrycho.com/</wp:base_site_url>
	<wp:base_blog_url>http://2012-2013.chriskrycho.com/web</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>chriskrycho</wp:author_login><wp:author_email>chris@chriskrycho.com</wp:author_email><wp:author_display_name><![CDATA[Chris Krycho]]></wp:author_display_name><wp:author_first_name><![CDATA[Chris]]></wp:author_first_name><wp:author_last_name><![CDATA[Krycho]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>links</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Links]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>posts</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Posts]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>139</wp:term_id><wp:category_nicename>projects</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Projects]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>38</wp:term_id><wp:category_nicename>quotes</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Quotes]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>25</wp:term_id><wp:category_nicename>site-info</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Site info]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>tools-posts</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Tools]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>3d</wp:tag_slug><wp:tag_name><![CDATA[3D]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>abc</wp:tag_slug><wp:tag_name><![CDATA[ABC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>acquisitions</wp:tag_slug><wp:tag_name><![CDATA[acquisitions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>125</wp:term_id><wp:tag_slug>ad-placement</wp:tag_slug><wp:tag_name><![CDATA[ad placement]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>211</wp:term_id><wp:tag_slug>advertising</wp:tag_slug><wp:tag_name><![CDATA[advertising]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>aesthetics</wp:tag_slug><wp:tag_name><![CDATA[aesthetics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>amazon</wp:tag_slug><wp:tag_name><![CDATA[Amazon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>133</wp:term_id><wp:tag_slug>android</wp:tag_slug><wp:tag_name><![CDATA[Android]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>156</wp:term_id><wp:tag_slug>api</wp:tag_slug><wp:tag_name><![CDATA[API]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>186</wp:term_id><wp:tag_slug>app-net</wp:tag_slug><wp:tag_name><![CDATA[App.net]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>apple</wp:tag_slug><wp:tag_name><![CDATA[Apple]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>apps</wp:tag_slug><wp:tag_name><![CDATA[apps]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>arial</wp:tag_slug><wp:tag_name><![CDATA[Arial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>atlassian</wp:tag_slug><wp:tag_name><![CDATA[Atlassian]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>atom</wp:tag_slug><wp:tag_name><![CDATA[Atom]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>authentication</wp:tag_slug><wp:tag_name><![CDATA[authentication]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>avid</wp:tag_slug><wp:tag_name><![CDATA[Avid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>batch-files</wp:tag_slug><wp:tag_name><![CDATA[batch files]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>ben-and-jonathan-finn</wp:tag_slug><wp:tag_name><![CDATA[Ben and Jonathan Finn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>best-practices</wp:tag_slug><wp:tag_name><![CDATA[best practices]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>159</wp:term_id><wp:tag_slug>bitbucket</wp:tag_slug><wp:tag_name><![CDATA[Bitbucket]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>bookmarklet</wp:tag_slug><wp:tag_name><![CDATA[bookmarklet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>books</wp:tag_slug><wp:tag_name><![CDATA[books]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>browsers</wp:tag_slug><wp:tag_name><![CDATA[browsers]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>bugs</wp:tag_slug><wp:tag_name><![CDATA[bugs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>144</wp:term_id><wp:tag_slug>bundling</wp:tag_slug><wp:tag_name><![CDATA[bundling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>172</wp:term_id><wp:tag_slug>byword</wp:tag_slug><wp:tag_name><![CDATA[Byword]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>166</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[C]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>129</wp:term_id><wp:tag_slug>calibre</wp:tag_slug><wp:tag_name><![CDATA[Calibre]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>201</wp:term_id><wp:tag_slug>cameron-morgan</wp:tag_slug><wp:tag_name><![CDATA[Cameron Morgan]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>castle</wp:tag_slug><wp:tag_name><![CDATA[Castle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>cdt</wp:tag_slug><wp:tag_name><![CDATA[CDT]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>cell-phone</wp:tag_slug><wp:tag_name><![CDATA[cell phone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>cms</wp:tag_slug><wp:tag_name><![CDATA[CMS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>137</wp:term_id><wp:tag_slug>code</wp:tag_slug><wp:tag_name><![CDATA[code]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>198</wp:term_id><wp:tag_slug>coffeescript</wp:tag_slug><wp:tag_name><![CDATA[CoffeeScript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>167</wp:term_id><wp:tag_slug>command-line</wp:tag_slug><wp:tag_name><![CDATA[command line]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>commit-acceptance</wp:tag_slug><wp:tag_name><![CDATA[Commit Acceptance]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>confluence</wp:tag_slug><wp:tag_name><![CDATA[Confluence]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>connectors</wp:tag_slug><wp:tag_name><![CDATA[Connectors]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>cost</wp:tag_slug><wp:tag_name><![CDATA[cost]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>creativity</wp:tag_slug><wp:tag_name><![CDATA[creativity]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>css</wp:tag_slug><wp:tag_name><![CDATA[CSS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>css3</wp:tag_slug><wp:tag_name><![CDATA[CSS3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>customer-service</wp:tag_slug><wp:tag_name><![CDATA[customer service]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>data</wp:tag_slug><wp:tag_name><![CDATA[data]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>180</wp:term_id><wp:tag_slug>database</wp:tag_slug><wp:tag_name><![CDATA[database]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>215</wp:term_id><wp:tag_slug>decorators</wp:tag_slug><wp:tag_name><![CDATA[decorators]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>207</wp:term_id><wp:tag_slug>delight</wp:tag_slug><wp:tag_name><![CDATA[delight]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>design</wp:tag_slug><wp:tag_name><![CDATA[design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>development</wp:tag_slug><wp:tag_name><![CDATA[development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>disruption</wp:tag_slug><wp:tag_name><![CDATA[disruption]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>148</wp:term_id><wp:tag_slug>documentation</wp:tag_slug><wp:tag_name><![CDATA[documentation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>149</wp:term_id><wp:tag_slug>doxygen</wp:tag_slug><wp:tag_name><![CDATA[Doxygen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>dry</wp:tag_slug><wp:tag_name><![CDATA[DRY]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>ebooks</wp:tag_slug><wp:tag_name><![CDATA[ebooks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>eclipse</wp:tag_slug><wp:tag_name><![CDATA[Eclipse]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>economics</wp:tag_slug><wp:tag_name><![CDATA[economics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>188</wp:term_id><wp:tag_slug>ecosystems</wp:tag_slug><wp:tag_name><![CDATA[ecosystems]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>173</wp:term_id><wp:tag_slug>editor</wp:tag_slug><wp:tag_name><![CDATA[editor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>engineering</wp:tag_slug><wp:tag_name><![CDATA[engineering]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>ergonomics</wp:tag_slug><wp:tag_name><![CDATA[ergonomics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>164</wp:term_id><wp:tag_slug>facebook</wp:tag_slug><wp:tag_name><![CDATA[Facebook]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>family</wp:tag_slug><wp:tag_name><![CDATA[family]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>feed</wp:tag_slug><wp:tag_name><![CDATA[feed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>169</wp:term_id><wp:tag_slug>find</wp:tag_slug><wp:tag_name><![CDATA[find]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>firewall</wp:tag_slug><wp:tag_name><![CDATA[firewall]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>218</wp:term_id><wp:tag_slug>floating-point-math</wp:tag_slug><wp:tag_name><![CDATA[floating-point math]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>153</wp:term_id><wp:tag_slug>fonts</wp:tag_slug><wp:tag_name><![CDATA[fonts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>funny</wp:tag_slug><wp:tag_name><![CDATA[funny]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>future</wp:tag_slug><wp:tag_name><![CDATA[future]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>141</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[GitHub]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>213</wp:term_id><wp:tag_slug>global-variables</wp:tag_slug><wp:tag_name><![CDATA[global variables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[Google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>187</wp:term_id><wp:tag_slug>google-reader</wp:tag_slug><wp:tag_name><![CDATA[Google Reader]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>graceful-degradation</wp:tag_slug><wp:tag_name><![CDATA[graceful degradation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>168</wp:term_id><wp:tag_slug>grep</wp:tag_slug><wp:tag_name><![CDATA[grep]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>hard-work</wp:tag_slug><wp:tag_name><![CDATA[hard work]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>hardware</wp:tag_slug><wp:tag_name><![CDATA[hardware]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>134</wp:term_id><wp:tag_slug>hyphens</wp:tag_slug><wp:tag_name><![CDATA[hyphens]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>intellectual-property</wp:tag_slug><wp:tag_name><![CDATA[intellectual property]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>intranet</wp:tag_slug><wp:tag_name><![CDATA[intranet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>208</wp:term_id><wp:tag_slug>ios</wp:tag_slug><wp:tag_name><![CDATA[iOS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>209</wp:term_id><wp:tag_slug>iphone</wp:tag_slug><wp:tag_name><![CDATA[iPhone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>161</wp:term_id><wp:tag_slug>it</wp:tag_slug><wp:tag_name><![CDATA[IT]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>216</wp:term_id><wp:tag_slug>itunes</wp:tag_slug><wp:tag_name><![CDATA[iTunes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>178</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[Javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>jerk-moves</wp:tag_slug><wp:tag_name><![CDATA[jerk moves]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>jetpack</wp:tag_slug><wp:tag_name><![CDATA[jetpack]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>185</wp:term_id><wp:tag_slug>jinja2</wp:tag_slug><wp:tag_name><![CDATA[Jinja2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>jira</wp:tag_slug><wp:tag_name><![CDATA[JIRA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[jQuery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>128</wp:term_id><wp:tag_slug>kindle</wp:tag_slug><wp:tag_name><![CDATA[Kindle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>132</wp:term_id><wp:tag_slug>kindle-collections</wp:tag_slug><wp:tag_name><![CDATA[Kindle Collections]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>languages</wp:tag_slug><wp:tag_name><![CDATA[languages]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>laptop</wp:tag_slug><wp:tag_name><![CDATA[laptop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>147</wp:term_id><wp:tag_slug>latex</wp:tag_slug><wp:tag_name><![CDATA[LaTeX]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>layout</wp:tag_slug><wp:tag_name><![CDATA[layout]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>ligatures</wp:tag_slug><wp:tag_name><![CDATA[ligatures]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>195</wp:term_id><wp:tag_slug>link-structure</wp:tag_slug><wp:tag_name><![CDATA[link structure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>158</wp:term_id><wp:tag_slug>links-2</wp:tag_slug><wp:tag_name><![CDATA[links]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[Mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>maintenance</wp:tag_slug><wp:tag_name><![CDATA[maintenance]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>184</wp:term_id><wp:tag_slug>make</wp:tag_slug><wp:tag_name><![CDATA[Make]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>makefiles</wp:tag_slug><wp:tag_name><![CDATA[makefiles]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>174</wp:term_id><wp:tag_slug>markdown</wp:tag_slug><wp:tag_name><![CDATA[Markdown]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>145</wp:term_id><wp:tag_slug>market</wp:tag_slug><wp:tag_name><![CDATA[market]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>176</wp:term_id><wp:tag_slug>markup-languages</wp:tag_slug><wp:tag_name><![CDATA[markup languages]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>146</wp:term_id><wp:tag_slug>mathjax</wp:tag_slug><wp:tag_name><![CDATA[MathJax]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>160</wp:term_id><wp:tag_slug>mercurial</wp:tag_slug><wp:tag_name><![CDATA[Mercurial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>212</wp:term_id><wp:tag_slug>metaprogramming</wp:tag_slug><wp:tag_name><![CDATA[metaprogramming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>154</wp:term_id><wp:tag_slug>miscellanies</wp:tag_slug><wp:tag_name><![CDATA[miscellanies]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>143</wp:term_id><wp:tag_slug>mit-press</wp:tag_slug><wp:tag_name><![CDATA[MIT Press]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>mobile</wp:tag_slug><wp:tag_name><![CDATA[mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>202</wp:term_id><wp:tag_slug>modular-scale</wp:tag_slug><wp:tag_name><![CDATA[modular scale]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>165</wp:term_id><wp:tag_slug>monetization</wp:tag_slug><wp:tag_name><![CDATA[monetization]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>217</wp:term_id><wp:tag_slug>music</wp:tag_slug><wp:tag_name><![CDATA[music]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>new-media</wp:tag_slug><wp:tag_name><![CDATA[new media]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>155</wp:term_id><wp:tag_slug>no-segue</wp:tag_slug><wp:tag_name><![CDATA[No Segue]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>object-oriented</wp:tag_slug><wp:tag_name><![CDATA[object-oriented]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>open-data</wp:tag_slug><wp:tag_name><![CDATA[open data]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>219</wp:term_id><wp:tag_slug>order-of-operations</wp:tag_slug><wp:tag_name><![CDATA[order of operations]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>210</wp:term_id><wp:tag_slug>payment</wp:tag_slug><wp:tag_name><![CDATA[payment]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[PHP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>135</wp:term_id><wp:tag_slug>php-typography</wp:tag_slug><wp:tag_name><![CDATA[PHP Typography]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>151</wp:term_id><wp:tag_slug>physicality</wp:tag_slug><wp:tag_name><![CDATA[physicality]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>pipa</wp:tag_slug><wp:tag_name><![CDATA[PIPA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>piracy</wp:tag_slug><wp:tag_name><![CDATA[piracy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>pleasure</wp:tag_slug><wp:tag_name><![CDATA[pleasure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>plugin</wp:tag_slug><wp:tag_name><![CDATA[plugin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>206</wp:term_id><wp:tag_slug>polytonic-greek</wp:tag_slug><wp:tag_name><![CDATA[polytonic Greek]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>port-access</wp:tag_slug><wp:tag_name><![CDATA[port access]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>programming</wp:tag_slug><wp:tag_name><![CDATA[programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>progressive-enhancement</wp:tag_slug><wp:tag_name><![CDATA[progressive enhancement]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>public-policy</wp:tag_slug><wp:tag_name><![CDATA[public policy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>public-service-announcements</wp:tag_slug><wp:tag_name><![CDATA[Public Service Announcements]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>100</wp:term_id><wp:tag_slug>publishing</wp:tag_slug><wp:tag_name><![CDATA[publishing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>183</wp:term_id><wp:tag_slug>pyramid</wp:tag_slug><wp:tag_name><![CDATA[Pyramid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>python</wp:tag_slug><wp:tag_name><![CDATA[Python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>191</wp:term_id><wp:tag_slug>queries</wp:tag_slug><wp:tag_name><![CDATA[queries]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>readability</wp:tag_slug><wp:tag_name><![CDATA[readability]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>150</wp:term_id><wp:tag_slug>reading</wp:tag_slug><wp:tag_name><![CDATA[reading]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>214</wp:term_id><wp:tag_slug>refactoring</wp:tag_slug><wp:tag_name><![CDATA[refactoring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>responsive-design</wp:tag_slug><wp:tag_name><![CDATA[responsive design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>rss</wp:tag_slug><wp:tag_name><![CDATA[RSS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>140</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[Ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>204</wp:term_id><wp:tag_slug>sarah-warren</wp:tag_slug><wp:tag_name><![CDATA[Sarah Warren]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>200</wp:term_id><wp:tag_slug>sass</wp:tag_slug><wp:tag_name><![CDATA[SASS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>savesibelius</wp:tag_slug><wp:tag_name><![CDATA[SaveSibelius]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>93</wp:term_id><wp:tag_slug>scripts</wp:tag_slug><wp:tag_name><![CDATA[scripts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>search-engine-optimization</wp:tag_slug><wp:tag_name><![CDATA[search engine optimization]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>secrecy</wp:tag_slug><wp:tag_name><![CDATA[secrecy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>157</wp:term_id><wp:tag_slug>semantics</wp:tag_slug><wp:tag_name><![CDATA[semantics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>194</wp:term_id><wp:tag_slug>sharing</wp:tag_slug><wp:tag_name><![CDATA[sharing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>sibelius</wp:tag_slug><wp:tag_name><![CDATA[Sibelius]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>site-news</wp:tag_slug><wp:tag_name><![CDATA[site news]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>sites-i-built</wp:tag_slug><wp:tag_name><![CDATA[sites I built]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>sites-i-designed</wp:tag_slug><wp:tag_name><![CDATA[sites I designed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>193</wp:term_id><wp:tag_slug>social-media</wp:tag_slug><wp:tag_name><![CDATA[social media]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>software</wp:tag_slug><wp:tag_name><![CDATA[software]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>163</wp:term_id><wp:tag_slug>software-development</wp:tag_slug><wp:tag_name><![CDATA[software development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>sopa</wp:tag_slug><wp:tag_name><![CDATA[SOPA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>source-structure</wp:tag_slug><wp:tag_name><![CDATA[source structure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>spacex</wp:tag_slug><wp:tag_name><![CDATA[SpaceX]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>standards</wp:tag_slug><wp:tag_name><![CDATA[standards]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>182</wp:term_id><wp:tag_slug>static-site-generator</wp:tag_slug><wp:tag_name><![CDATA[static site generator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>196</wp:term_id><wp:tag_slug>step-stool</wp:tag_slug><wp:tag_name><![CDATA[Step Stool]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>197</wp:term_id><wp:tag_slug>step-stool-io</wp:tag_slug><wp:tag_name><![CDATA[step-stool.io]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>142</wp:term_id><wp:tag_slug>structure-and-interpretation-of-computer-programs</wp:tag_slug><wp:tag_name><![CDATA[Structure and Interpretation of Computer Programs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>171</wp:term_id><wp:tag_slug>sublime-text-2</wp:tag_slug><wp:tag_name><![CDATA[Sublime Text 2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>subversion</wp:tag_slug><wp:tag_name><![CDATA[Subversion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>subversive</wp:tag_slug><wp:tag_name><![CDATA[Subversive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>svn</wp:tag_slug><wp:tag_name><![CDATA[SVN]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>203</wp:term_id><wp:tag_slug>swoon-design</wp:tag_slug><wp:tag_name><![CDATA[Swoon Design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>technology</wp:tag_slug><wp:tag_name><![CDATA[technology]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>terrafugia</wp:tag_slug><wp:tag_name><![CDATA[Terrafugia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>175</wp:term_id><wp:tag_slug>textile</wp:tag_slug><wp:tag_name><![CDATA[Textile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>205</wp:term_id><wp:tag_slug>the-accidental-okie</wp:tag_slug><wp:tag_name><![CDATA[The Accidental Okie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>tomcat</wp:tag_slug><wp:tag_name><![CDATA[Tomcat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>162</wp:term_id><wp:tag_slug>tools</wp:tag_slug><wp:tag_name><![CDATA[tools]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>transforms</wp:tag_slug><wp:tag_name><![CDATA[transforms]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>192</wp:term_id><wp:tag_slug>tricks</wp:tag_slug><wp:tag_name><![CDATA[tricks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>189</wp:term_id><wp:tag_slug>trust</wp:tag_slug><wp:tag_name><![CDATA[trust]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>152</wp:term_id><wp:tag_slug>tumblr</wp:tag_slug><wp:tag_name><![CDATA[tumblr]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>130</wp:term_id><wp:tag_slug>tutorial</wp:tag_slug><wp:tag_name><![CDATA[tutorial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>typography</wp:tag_slug><wp:tag_name><![CDATA[typography]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>177</wp:term_id><wp:tag_slug>updates</wp:tag_slug><wp:tag_name><![CDATA[updates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>vendor-prefixes</wp:tag_slug><wp:tag_name><![CDATA[vendor prefixes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>131</wp:term_id><wp:tag_slug>walkthrough</wp:tag_slug><wp:tag_name><![CDATA[walkthrough]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>web-applications</wp:tag_slug><wp:tag_name><![CDATA[web applications]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>web-design</wp:tag_slug><wp:tag_name><![CDATA[web design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>windows-7</wp:tag_slug><wp:tag_name><![CDATA[Windows 7]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[WordPress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>wordpress-plugins</wp:tag_slug><wp:tag_name><![CDATA[WordPress plugins]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>wordpress-themes</wp:tag_slug><wp:tag_name><![CDATA[WordPress themes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>work</wp:tag_slug><wp:tag_name><![CDATA[work]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>181</wp:term_id><wp:tag_slug>workflow</wp:tag_slug><wp:tag_name><![CDATA[workflow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>138</wp:term_id><wp:tag_slug>worst-practices</wp:tag_slug><wp:tag_name><![CDATA[worst practices]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>136</wp:term_id><wp:tag_slug>wp-typography</wp:tag_slug><wp:tag_name><![CDATA[wp-typography]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>writing</wp:tag_slug><wp:tag_name><![CDATA[writing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>170</wp:term_id><wp:tag_slug>xargs</wp:tag_slug><wp:tag_name><![CDATA[xargs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>179</wp:term_id><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[XML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>190</wp:term_id><wp:tag_slug>youtube</wp:tag_slug><wp:tag_name><![CDATA[YouTube]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>199</wp:term_id><wp:tag_slug>zepto-js</wp:tag_slug><wp:tag_name><![CDATA[zepto.js]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>3</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>main-nav</wp:term_slug><wp:term_name><![CDATA[Main Nav]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.8</generator>

	<item>
				<title>Work</title>
		<link>http://2012-2013.chriskrycho.com/web/work/</link>
		<pubDate>Tue, 03 Jan 2012 03:02:42 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=4</guid>
		<description></description>
		<content:encoded><![CDATA[Here are an assortment of the many sites I have designed – some of them built from scratch, others using existing frameworks.

<h2>From scratch</h2>
<ul class="portfolio tight">
   <li><a href="http://jaimiekrycho.com/" target="_blank">JaimieKrycho.com</a> - the home of Jaimie Krycho's writing career</li>
   <li><a href="http://www.independentclauses.com/" target="_blank">Independent Clauses</a> - the independent music blog of Stephen Carradini</li>
   <li><a href="http://www.theinvitedbirth.com/" target="_blank">The Invited Birth</a> - the professional website for Michelle Roper, a doula in Richmond, Virginia</li>
</ul>

<h2>Rejiggered themes</h2>
<ul class="portfolio tight">
   <li><a href="http://swoondesigns.net">Swoon Designs</a> - the home of Sarah Warren's custom invitations, personal stationery, and branding business. We designed the site together, and built it as a child theme on the <a href="http://themeforest.net/item/reason-wp-smart-responsive-customizable/2274642" rel="nofollow">Reason 2.0</a> template.</li>
   <li><a href="http://theaccidentalokie.com" target="_blank">The Accidental Okie</a> - Sarah Warren's personal blog, a customized version of the <a href="http://www.restored316designs.com/product/simply-luxe-theme/" target='_blank' rel='nofollow'>Simply Luxe</a> theme.</li>
   <li><a href="http://gospelized.com/" target='_blank'>Gospelized</a> - the art blog of <a href="http://stephencarradini.com/">Stephen Carradini</a>, with a few subtle tweaks to color and typography from the original "Clear" theme (no longer accessible).</li>
</ul>

<h2>Historically meaningful</h2>
<ul class="portfolio tight">
   <li><a href="http://www.adoptedbytheking.com/" target="_blank">Adopted by the King</a> - template customizations and header image design for a friend's blog.</li>
   <li><a href="http://52verses.chriskrycho.com/" target="_blank">52 Verses</a> - a poetry blog I maintained (for not quite long enough).</li>
   <li><a href="http://www.pillarontherock.com" target="_blank">Pillar on the Rock</a> - a group blog on church practice that I edit and to which I contribute. Custom Blogger template, built from scratch.</li>
   <li><a href="http://blog.chriskrycho.com/" target="_blank">Thoughts; A Flame</a> - my 2005-2010 era blog, ultimately replaced by this very site.</li>
   <li><a href="http://2010.archives.chriskrycho.com/" target="_blank">chriskrycho.com [2010]</a> - my landing page throughout 2010.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2012-01-03 03:02:42</wp:post_date>
		<wp:post_date_gmt>2012-01-03 03:02:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>work</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Process</title>
		<link>http://2012-2013.chriskrycho.com/web/process/</link>
		<pubDate>Tue, 03 Jan 2012 03:04:09 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=6</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2012-01-03 03:04:09</wp:post_date>
		<wp:post_date_gmt>2012-01-03 03:04:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>process</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Web Professionals</title>
		<link>http://2012-2013.chriskrycho.com/web/web-professionals/</link>
		<pubDate>Tue, 03 Jan 2012 03:10:37 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Everything I know about web design and development, I learned from the largesse of those who have shared their own knowledge along the way. These are some of the best. (If they don't write often, it's because they're too busy changing the web.)</p>

<div class="column left donthyphenate">
<h3>Design</h3>
<ul class="tight">
   <li><a href="http://www.alistapart.com/articles/" target="_blank">A List Apart</a> - <i>pushing the web in the right direction one issue at a time for over a decade.</i></li>
   <li><a href="http://www.andymangold.com/" target="_blank">Andy Mangold</a> - <i>I only just discovered him, but I'm a fan of where he's going.</i></li>
   <li><a href="http://csswizardry.com/" target="_blank">CSS Wizardry</a> - <i>I normally loathe tips-and-tricks sites. Harry Roberts' site is <em>the</em> exception.</i></li>
   <li><a href="http://jasonsantamaria.com/" target="_blank">Jason Santa Maria</a> - <i>a designer whose work I admire immensely.</i></li>
   <li><a href="http://www.markboulton.co.uk/" target="_blank">Mark Boulton</a> - <i>a Welsh fellow intent on betting web design practice and standards.</i></li>
   <li><a href="http://simplebits.com/" target="_blank">Simple Bits</a> - <i>Dan Cederholm does some really elegant visual design work.</i></li>
   <li><a href="http://unstoppablerobotninja.com/">Unstoppable Robot Ninja</a> - <i>Ethan Marcotte is one of the real luminaries of web design, always advancing best practices.</i></li>
</ul>
</div>

<div class="column right donthyphenate">
<h3>Development</h3>
<ul class="tight">
   <li><a href="http://johndyer.name/" target="_blank">John Dyer's Code</a> - <i>works for a seminary, wrote a book on media ecology, and makes things like <a href="http://mediaelementjs.com/" target="_blank">MediaElement.js</a>. Impressive.</i></li>
   <li><a href="http://www.google.com/reader/view/#" target="_blank">O'Reilly Radar</a> - <i>the daily <span style="text-decoration: underline">Four short links</span> posts are worth their weight in gold.</i></li>
   <li><a href="http://perishablepress.com/" target="_blank">Perishable Press</a> - <i>Jeff Starr on Javascript, PHP, CSS, Apache and Wordpress. Fantastically helpful.</i></li>
   <li><a href="http://trentwalton.com/" target="_blank">Trent Walton</a> - <i>makes Javascript do amazing and wonderful things.</i></li>
   <li><a href="http://www.thegridsystem.org/" target="_blank">The Grid System</a> - <i>exactly what it says on the label.</i></li>
</ul>

<h3>Typography</h3>
<ul class="tight">
   <li><a href="http://ilovetypography.com/" target="_blank">I Love Typography</a> - <i>a phrase I've said aloud several times since I started reading this site.</i></li>
   <li><a href="http://nicetype.blogspot.com/" target="_blank">nicetype</a> - <i>a blog about fonts, typography, and graphic design.</i></li>
</ul>
</div>

<br class="clear" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2012-01-03 03:10:37</wp:post_date>
		<wp:post_date_gmt>2012-01-03 03:10:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-professionals</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://2012-2013.chriskrycho.com/web/10/</link>
		<pubDate>Tue, 03 Jan 2012 03:14:39 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2012-01-03 03:14:39</wp:post_date>
		<wp:post_date_gmt>2012-01-03 03:14:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="main-nav"><![CDATA[Main Nav]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:7:"level-1";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://2012-2013.chriskrycho.com/web/11/</link>
		<pubDate>Tue, 03 Jan 2012 03:14:39 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2012-01-03 03:14:39</wp:post_date>
		<wp:post_date_gmt>2012-01-03 03:14:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>11</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="main-nav"><![CDATA[Main Nav]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:7:"level-1";i:1;s:4:"hide";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://2012-2013.chriskrycho.com/web/12/</link>
		<pubDate>Tue, 03 Jan 2012 03:14:39 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=12</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2012-01-03 03:14:39</wp:post_date>
		<wp:post_date_gmt>2012-01-03 03:14:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>12</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="main-nav"><![CDATA[Main Nav]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:7:"level-1";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Tools</title>
		<link>http://2012-2013.chriskrycho.com/web/tools/</link>
		<pubDate>Tue, 07 Feb 2012 14:46:46 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=209</guid>
		<description></description>
		<content:encoded><![CDATA[Like any developer, I occasionally run into little corner cases for which there isn't a good fix, or common problems in need of a common solution. If I can come up with something that works, I share.

<div class="column left dont-hyphenate">
<h3>Javascript</h3>
<h4><a href="http://v4.chriskrycho.com/web/tools/ligatures-plus-js/">ligatures-plus.js &rarr;</a></h4>
I noticed in late 2011 that while there were a few Javascript tools out there that would substitute ligatures on a web page, none of them could test whether the fonts being rendered actually supported those ligatures. <a href="http://v4.chriskrycho.com/web/projects/ligatures-plus-js/" title="Ligatures-plus.js">This script</a> provides a solution.

<h3>Bookmarklets</h3>
<h4><a href="http://v4.chriskrycho.com/web/tools/typekitify/">Typekitify! &rarr;</a></h4>
You want better fonts, and not just on the websites that already care about better fonts. Typekit makes better fonts happen. This <a href="http://v4.chriskrycho.com/web/projects/typekitify/" title="Typekitify!">bookmarklet generator</a> makes Typekit happen anywhere. <em>Awesome.</em>
</div>

<div class="column right dont-hyphenate">
<h3>Python</h3>
<h4><a href="http://v4.chriskrycho.com/web/tools/jira-commit-acceptance-plugin-tweaks/">JIRA Commit Acceptance Plugin Tweaks</a> &rarr;</h4>
JIRA's Commit Acceptance Plugin is great, but years out of date - I took the liberty of <a href="http://v4.chriskrycho.com/web/tools/jira-commit-acceptance-plugin-tweaks/" title="JIRA Commit Acceptance Plugin Tweaks">updating the Python script</a> used by the <code>pre-commit.bat</code> repository hook. You'll also find some notes on using the pre-commit hook when you don't have a guarantee that your users have Python installed.

<h3>Windows Batch Files</h3>
<h4><a href="http://v4.chriskrycho.com/web/tools/run-executable-on-a-network-drive-batch-file/">Run Executables on a Network Drive &rarr;</a></h4>
You may need to run an executable remotely. This isn't particularly difficult to pull of on Linux or Unix systems, of course. It's much more involved on Windows, because you can't count on everyone having the network location mapped. This short batch file <a href="http://v4.chriskrycho.com/web/tools/run-executable-on-a-network-drive-batch-file/" title="Run Executable on a Network Drive – Batch File">fixes that problem</a> quite handily.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2012-02-07 08:46:46</wp:post_date>
		<wp:post_date_gmt>2012-02-07 14:46:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[tools]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[I sometimes run into little corner cases with no known fix or common problems in need of a solution. If I come up with tools or improvements, I share.
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[tools, javascript, python, batch files, bookmarklet, Typekit, ligatures, typography, JIRA]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://2012-2013.chriskrycho.com/web/219/</link>
		<pubDate>Tue, 07 Feb 2012 14:46:46 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/uncategorized/219/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2012-02-07 08:46:46</wp:post_date>
		<wp:post_date_gmt>2012-02-07 14:46:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>219</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="main-nav"><![CDATA[Main Nav]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[209]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:7:"level-1";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Typekitify!</title>
		<link>http://2012-2013.chriskrycho.com/web/tools/typekitify/</link>
		<pubDate>Thu, 09 Feb 2012 03:21:32 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=303</guid>
		<description></description>
		<content:encoded><![CDATA[<p>To generate a Typekitify bookmarklet, you need to have a <a href="https://typekit.com/" target="_blank">Typekit</a> account and create a kit with the fonts you want and the domain(s) you want to use. (If you're on a free account, you can only point at one website at a time.) Grab the Embed Code snipped from the Kit Editor and copy the part that looks like this:</p>

<pre lang="html4strict">http://use.typekit.com/[characters].js</pre>

Then click the "Using fonts in CSS" link in your Kit and copy the name it supplies for the font family field (you can add fallback fonts, if you so desire). Add font size and list the elements you want to apply the font to (you can be as specific as you like), and away you go!
<form class="generator" style="padding-top: 1.333em;" action="http://v4.chriskrycho.com/utilities/typekitify-generator.php">
   <fieldset>
      <legend><span class="italic">Generate Typekitify! bookmarklet</span></legend>
      <div>
         <label for="typekit_src">Typekit source:</label>
         <input id="typekit_src" name="typekit_src" type="text" placeholder="http://use.typekit.com/[characters].js"/>
      </div>
      <div>
         <label for="font_family">Font family:</label>
         <input id="font_family" name="font_family" type="text" placeholder="Athelas"/>
      </div>
      <div>
         <label for="font_size">Font size:</label>
         <input id="font_size" name="font_size" type="text" placeholder="18px" />
      </div>
      <div>
         <label for="dom_elements">Elements:</label>
         <input id="dom_elements" name="dom_elements" type="text" placeholder="p"/>
      </div>
      <div>
         <input id="submit" name="submit" type="submit" value="Typekitify!" />
      </div>
   </fieldset>
</form>

<p>While the bookmarklet does not currently support attaching unique styles to different kinds of elements, you can generate multiple bookmarklets to achieve the same effect, and rename them to differentiate them. For example, if you wanted header elements to be in FF Meta Serif and paragraphs to be in Myriad, you might make an FFMetafy! and a Myriadify!.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2012-02-08 21:21:32</wp:post_date>
		<wp:post_date_gmt>2012-02-09 03:21:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>typekitify</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>209</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Introducing Typekitify! &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/projects/introducing-typekitify/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-02-13 10:54:31</wp:comment_date>
			<wp:comment_date_gmt>2012-02-13 16:54:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] From the permanent project landing page: [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Ligatures Plus (jQuery)</title>
		<link>http://2012-2013.chriskrycho.com/web/tools/ligatures-plus-js/</link>
		<pubDate>Fri, 10 Feb 2012 01:56:52 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=314</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="toc">
<h4>Table of Contents (<a href="#" class="toc-toggle" style="display: none">show</a><a href="#" class="toc-toggle">hide</a>)</h4>
<ol id="table-of-contents">
   <li><a href="#overview">Overview</a></li>
   <li><a href="#get">Get the script</a></li>
   <li><a href="#use">Using the script</a>
      <ul>
         <li><a href="#basics">Basics</a></li>
         <li><a href="#typekit">Typekit</a></li>
      </ul>
   </li>
   <li><a href="known-issues">Known issues</a>
      <ul>
         <li><a href="flash">Flash when text restyles</a></li>
         <li><a href="internals">Changing HTML internals</a></li>
         <li><a href="system-fonts">Default system fonts</a></li>
         <li><a href="IE">Internet Explorer</a></li>
         <li><a href="size">Font faces</a></li>
         <li><a href="reporting">Reporting issues</a></li>
      </ul>
   </li>
   <li><a href="#improvements">Planned improvements</a>
      <ul>
         <li><a href="jquerify">Proper jQuery style</a></li>
         <li><a href="plugins">Plugins</a></li>
         <li><a href="font-events">Font events</a></li>
      </ul>
   </li>
   <li><a href="#background">Background</a></li>
</ol>
</div>

<div class="content hyphenate">
<h3 id="overview">ligatures-plus.js</h3>
Extending the work done by <a href="http://chipcullen.com/" target="_blank">Chip Cullen</a> for his <a href="http://chipcullen.com/ligatures/" target="_blank">ligatures.js</a> and relying on some of the code from <a href="http://chengyinliu.com/whatfont.html" target="_blank">whatfont.js</a> by <a href="http://chengyinliu.com/index.html" target="_blank">Chengyin Liu</a>, this script identifies which of the standard Unicode ligature characters are available in the displayed font, and activates only those ligatures.

Since not all fonts support all ligatures (in fact, almost no fonts support all the available ligatures), and CSS3 support for automatic use of OpenType characters is (at the time of initial release) limited to Firefox 4+, this allows typography-sensitive designers to implement some or all of the common ligatures on their site, with the assurance that the ligatures will continue to display correctly even if fallback fonts come into play.

This page is kept up to date with the latest version and corresponding notes.

<h3 id="get">Getting the script</h3>
Enabling the script on your site is straightforward. You'll need jQuery running; you can download it <a href="http://jquery.com/" title="jQuery.com" target="_blank">here</a> or use one of several <a href="http://docs.jquery.com/Downloading_jQuery#CDN_Hosted_jQuery" title="Downloading jQuery - CDN Hosted jQuery" target="_blank">content delivery networks</a> if you'd prefer not to host it on your own site.

Once you have jQuery running, include the ligatures-plus.js file. You can get it here:

<ul>
<li><a href="http://v4.chriskrycho.com/downloads/lig/ligatures-plus.js" target="_blank">Development version</a></li>
<li><a href="http://v4.chriskrycho.com/downloads/lig/ligatures-plus.min.js" target="_blank">Minified version</a></li>
<li><a href="http://code.google.com/p/ligatures-plus/" target="_blank">Google Code</a> (with SVN <a href="http://code.google.com/p/ligatures-plus/source/checkout" target="_blank">repository</a>)</li>
</ul>

<h3 id="use">Using the script</h3>
<h4 id="basics">Basics</h4>
Once you have included the file, you'll just need to call the new jQuery function, presumably after the page has loaded. A typical usage might be as follows:

<pre lang="javascript">$(document).ready() function({
   $().ligatureTest();
});</pre>

Note that by default, the script checks against <em>all</em> available unicode ligatures. If you want to check against a subset, you can change the value of <code>var WHICH_LIGATURES</code>. Available options are <code>COMMON</code> (ff, fi, fl), <code>RARE</code> (fff, ffi, ffl, ij, IJ, st), and <code>ALL</code> (all of the above). 

You'll also want to set the elements to run against. In the same section, set <code>var ELEMENT = '[comma-separated list]'</code> for the elements you want to use ligatures on.

<h4 id="typekit">Typekit</h4>
Because the content may be loaded before Typekit or Google Fonts finish loading the fonts, it's in your best interests to delay running the test until all your fonts have loaded. Gladly, Typekit and Google <a href="http://blog.typekit.com/2010/11/11/font-events-using-javascript-callbacks/" title="Font events: Using JavaScript callbacks @Typekit blog" target="_blank">have made it easy</a> to trigger functions on a webfont load event. Just run the ligature function in the handler for the Typekit font active event (as well as inactive, if you want), like so:

<pre lang="javascript">try {
   Typekit.load({
      active: function() {
         $().ligatureTest();
      },
      inactive: function() { ... }
   });
} catch(e) {}
</pre>

<h3 id="known-issues">Known issues</h3>
<h4 id="flash">Flash when text restyles</h4>
Because the script is replacing HTML content, there is a flash similar to the one that occurs when loading a web-font (so you may actually get two flashes).

<h4 id="internals">Changing HTML internals</h4>
If your selectors are too broad, you can mess up the internals of HTML. For example, if you run the script to include paragraph content, any link is subject to revision. For example, if you have a link like <code>&lt;a href="#first"&gt;link&lt;/a&gt;</code>, the "f<span style="display:inline-block;width:0;visibility:hidden;">&nbsp;</span>i" in first may get converted to "&filig;" instead. The workaround now is to only use elements that do not have internal links or other HTML content that will get broken by the substitutions. Also, you can wrap your anchors around the tags to which you wish to add ligature support.

Obviously neither of these are optimal; I hope to use some pattern matching to prevent this issue in the future, but it's a bit tricky because of some of the limitations in Javascript's regular expression set. The lack of lookbehinds is particularly vexing in situations like this; it forces you to use negative lookaheads instead.

<h4 id="system-fonts">Default system fonts</h4>
By dint of the way the script works, you will <em>not</em> be able to render ligatures in the system default serif or sans-serif fonts. Unfortunately, I have yet to figure out a good way around this, because the system default fonts vary widely - they're different on Windows, Mac, and Linux. Without doing some sort of additional processing involving OS sniffing (something I'd prefer to stay far away from), I have not yet discovered any good way to render ligatures in those fonts reliably.

<h4 id="IE">Internet Explorer</h4>
Internet Explorer support is lacking at this point for all versions before IE9. Unfortunately, there will never be a solution for this one. No older version of IE supports the canvas element, and the one project that aimed to deliver canvas support stalled or got stuck on some of the problems, one of the biggest being rendering fonts in the generated canvas elements. The function degrades gracefully, however: it simply won't display <em>any</em> ligatures, so the page will look normal to the user.

<h4 id="size">Font faces</h4>
The last potential stumbling block is <em>size</em>. The ligatures file itself is small, but font sets that actually include ligatures are <em>not</em>. Many of the fonts supplied by Typekit include two versions of their character set - one usually has ligatures and alternate glyphs; the other is the basic set. The extended set is often five to ten times larger than the other. The same will be true if you're using @font-face embedding.

For that reason, you'll want to be quite particular about which fonts and which elements you actually care about. On this site, for example, I'd love to have <em>all</em> the text supported, and I could: the fonts I've chosen all support ligatures. Unfortunately, if I included the extra character sets for all the headings and paragraphs, the font files would be over 2.5Mb, and that's just much too large. I'm probably pushing it as is with support for just the headings.

<h4 id="reporting">Reporting issues</h4>
If you find a bug, please let me know by sending me an email: <a class="email-link web" title="web|@|chriskrycho.com">chriskrycho.com @ web</a>.

<h3 id="improvements">Planned improvements</h3>
<h4 id="jquerify">Proper jQuery style</h4>
The first thing I want to do is fix this so that whatever tags are passed to the jQuery object are the tags used to pick ligatures. I may also add an optional parameter to the function to allow users to specify which ligatures to test for more easily. The other high-priority goal is to regular expressions to prevent the script from dealing with the internals of html tags.

<h4 id="plugins">Plugins</h4>
Once I have those things done, I'll think about turning into a full-on jQuery plugin, as well as potentially creating Wordpress and Blogger plugins for other, less technically savvy people to use.

<h4 id="font-events">Font events</h4>
At some point, I hope to add create some events that will prevent a flash from substituting the text, similar to the way <a href="http://blog.typekit.com/2010/10/29/font-events-controlling-the-fout/" target="_blank">Typekit does</a> for loading webfonts. (As an aside, you can skip this problem if you <em>are</em> using Typekit's events; the code I supplied above shouldn't have this issue.)

<h3 id="background">Background</h3>
I borrowed heavily from Chengyin Liu's work on <a href="http://chengyinliu.com/whatfont.html" target="_blank">whatfont.js</a>. The script creates a canvas, renders the ligatures in both the user-specified font and the default system serif/sans-serif font and compares them. If the system font ligature does <em>not</em> match the user-specified font, the ligature is rendered; otherwise it is ignored. At the end of the test, the canvas is removed.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2012-02-09 19:56:52</wp:post_date>
		<wp:post_date_gmt>2012-02-10 01:56:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ligatures-plus-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>209</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[project-with-toc.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[ligatures]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Ligatures Plus (jQuery)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A jQuery-based script that displays only the ligatures supported by each font. Inspired by Chip Cullen (ligatures.js) and Chengyin Liu (WhatFont).]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[ligatures, typography, web design, jQuery]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[91]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Challenges, blessings, and transitions &raquo; From the Hearth &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/family/updates/challenges-blessings-and-transitions/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-02-11 22:35:49</wp:comment_date>
			<wp:comment_date_gmt>2012-02-12 04:35:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] are also opportunities for anyone to contribute tools that everyone else can find useful. (I made one of those already in my spare time, and have a couple more in the pipe. Some of them even normal, [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Fontify!</title>
		<link>http://2012-2013.chriskrycho.com/web/tools/fontify/</link>
		<pubDate>Thu, 16 Feb 2012 20:08:38 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=357</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This bookmarklet generator will allow you to create a tool for your bookmarks bar that will replace the fonts of any element on the page with your specified font, as long as that font already resides on your computer. For example, let's say you're a big fan of Book Antiqua (as I am), and it's sitting there happily on your computer, but you can't put it to use on the internet, because everyone specifies their own fonts. Well, now you <em>can</em>, even if you're not technical. Use this bookmarklet, supply the font you'd like to use (in quotes if it's more than one word), the font size, and the parts of the page you want the font-change applied to (usually just 'p'), and drag the resulting bookmarklet to your bookmarks bar. Enjoy!</p>

<form class="generator" style="padding-top: 1.333em;" action="http://v4.chriskrycho.com/utilities/fontify-generator.php">
   <fieldset>
      <legend><span class="italic">Generate Fontify! bookmarklet</span></legend>
      <div>
         <label for="font_family">Font family:</label>
         <input id="font_family" name="font_family" type="text" placeholder="&ldquo;Times New Roman&rdquo;"/>
      </div>
      <div>
         <label for="font_size">Font size:</label>
         <input id="font_size" name="font_size" type="text" placeholder="18px" />
      </div>
      <div>
         <label for="dom_elements">Elements:</label>
         <input id="dom_elements" name="dom_elements" type="text" placeholder="p"/>
      </div>
      <div>
         <input id="submit" name="submit" type="submit" value="Fontify!" />
      </div>
   </fieldset>
</form>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date>2012-02-16 14:08:38</wp:post_date>
		<wp:post_date_gmt>2012-02-16 20:08:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fontify</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>209</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bandwidth and Responsive Design</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=399</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=399</guid>
		<description></description>
		<content:encoded><![CDATA[What we really need is to be able to test against browser bandwidth, something like so:

<pre lang="CSS">@media (max-bandwidth: 1000kbps) {
   background: transparent url('path-to-image.png') top center no-repeat;
}</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date>2012-02-21 14:47:17</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>On ebooks and ownership</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=492</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=492</guid>
		<description></description>
		<content:encoded><![CDATA[I am hopeful (and somewhat persuaded) that the future will not be pure ebooks, but actually a <em>de facto</em> standard of getting the ebook for free or small increased cost ($1) when purchasing a physical book. I, too, want physical copies, though perhaps for different reasons than you. I underline and notate a little, but less than most seem to think is necessary; it's just not how I study. The legacy of a library that can benefit others, though? That's huge. That's huge even in the present; I lend books to others all the time <em>now</em> with my (relatively) small but quickly growing library. If a friend doesn't have a Kindle, I simply can't do that with an ebook. That's a problem. I'd prefer in every case to have <em>both</em> a physical and an electronic copy. The ebook is convenient and helpful for travel especially, but I love the physicality of a book and having full shelves, too.

One point often overlooked that I talked about with Matt Anderson when my wife and I had the pleasure of breakfast with him was how much difference there is in growing up in a house full of books versus growing up in a house with a single ereader sitting on a table. One of them communicates on multiple levels that books are valuable and reading worthwhile - especially when the parents are often reading, lending those books, etc. And I often just grabbed books off the shelves in my parents' home growing up; I want my children to be able to do the same, and that, too, is impossible with a purely virtual shelf. There are a lot of goods with electronic books, but there are some losses as well, and I think the best outcome having <em>both</em> available. Hopefully the publishers will realize that as well....
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>492</wp:post_id>
		<wp:post_date>2012-05-26 16:31:12</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>JIRA Commit Acceptance Plugin Tweaks</title>
		<link>http://2012-2013.chriskrycho.com/web/tools/jira-commit-acceptance-plugin-tweaks/</link>
		<pubDate>Sat, 09 Jun 2012 06:53:20 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=544</guid>
		<description></description>
		<content:encoded><![CDATA["JIRA":http://www.atlassian.com/software/jira/ is a great tool, with a great set of plugin support. Unfortunately, the plugins are not always kept up to date, and they don't always play as nicely with Windows as one might hope. The "JIRA Commit Acceptance Plugin":https://studio.plugins.atlassian.com/wiki/display/CMMT/JIRA+Commit+Acceptance is a perfect example: the functionality is excellent; the documentation is okay; and it hasn't been updated in quite some time.

The plugin provides Perl and Python scripts tied to Subversion pre-commit hooks. I can't speak for the Perl script, but the Python one hasn't been touched since 2009. It relies on functions that have been deprecated since at least Python 2.7 (which was released in 2010). To modernize the script, I pulled the references to @os.popen()@ and replaced them with the modern (and more helpful) @subprocess.check_output()@. I also added some more helpful (read: verbose) error messages. As of 6/8/2012, it's confirmed to be working with JIRA 5.05.

Note that the path for @svnlook@ must be "local" to the machine that calls the script, that is to say _not the server the pre-commit hook is hosted on_ if you are connecting to the repository using @file:///@ rather than @svn://@ or @http(s)://@ (see "this discussion Stack Overflow":http://stackoverflow.com/questions/32598/any-disadvantages-in-accessing-subversion-repositories-through-file-for-a-sol for why you should always use the server rather than network shares when possible). See the "note":#note below.

* Download: "click":http://dl.chriskrycho.com/scripts/jira-client.py
* Source:

<pre lang="python">#!/usr/bin/python

# JIRA commit acceptance python client for SVN
# Author: istvan.vamosi@midori.hu
# $Id: jira-client.py 20980 2009-07-23 06:16:03Z dchui $

# Updated by Chris Krycho 2012-06-09                                                                                                
# v4.chriskrycho.com / web@chriskrycho.com 

try:
    import subprocess
    import sys
    import urlparse
    import xmlrpclib
except ImportError:
    exit(1)

# configure JIRA access
# ("projectKey" can contain multiple comma-separated JIRA project keys like "projectKey = 'TST,ARP'".
# If you specify multiple keys, the commit will be accepted if at least one project listed accepts it.
# Or you can specify "projectKey = '*'" to force using the global commit acceptance settings if you don't
# want to specify any exact project key.)
jiraBaseURL = '<url of server>'
jiraLogin = '<administrative user login>'
jiraPassword = '<password>'
projectKey = '*'

# configure svnlook path (e.g. C:/Program Files/TortoiseSVN/bin/svnlook or /usr/bin/svnlook)
svnlookPath = '<path to svnlook>'

# get committer
try:
    author = subprocess.check_output([svnlookPath, 'author', sys.argv[1], '-t', sys.argv[2]])
except:
    errorMessage = "Unable to get commit author with svnlook."
    errorMessage += ("\n\tRepository:\t"  + sys.argv[1])
    errorMessage += ("\n\tTransaction:\t" + sys.argv[2])
    errorMessage += ("\n\tsvnlook path:\t" + svnlookPath)
    print >> sys.stderr, errorMessage
    sys.exit(1)

# get commit message
try:
    message = subprocess.check_output([svnlookPath, 'log', sys.argv[1], '-t', sys.argv[2]])
except:
    errorMessage = "Unable to get commit message with svnlook."
    errorMessage += ("\n\tRepository:\t"  + sys.argv[1])
    errorMessage += ("\n\tTransaction:\t" + sys.argv[2])
    errorMessage += ("\n\tsvnlook path:\t" + svnlookPath)
    print >> sys.stderr, errorMessage
    sys.exit(1)

# print arguments
print >> sys.stderr, 'Author: ' + author
print >> sys.stderr, 'Commit message: "' + message + '"'

# invoke JIRA web service
xmlrpcUrl = jiraBaseURL + '/rpc/xmlrpc'
try:
    s = xmlrpclib.ServerProxy(xmlrpcUrl)
    acceptance, comment = s.commitacc.acceptCommit(jiraLogin, jiraPassword, author, projectKey, message).split('|');
except:
    acceptance, comment = ['false', 'Unable to connect to the JIRA server at "' + jiraBaseURL + '".']

if acceptance == 'true':
    print >> sys.stderr, 'Commit accepted.'
    sys.exit(0)
else:
    print >> sys.stderr, 'Commit rejected: ' + comment
    sys.exit(1)
</pre>

Note that I've provided examples for the Windows condition as well as the standard *nix approaches. If you have to use network shares instead of the server approach, you'll need to go one step further: you won't be able to easily have @svnlook@ in a common location (i.e. a shared network location), so you'll need to make sure everyone has their @svnlook.exe@ file in the same location or take advantage of the functionality in my "Network Share Executable batchfile":http://v4.chriskrycho.com/web/tools/run-python-on-a-network-drive-batch-file or something similar. In our case, I just had everyone install TortoiseSVN with the command line tools to the default location and pointed to that. (Note that if the remote installation directories for svnlook are the same as those on the server, the script will run without modification regardless of whether users connecting using Network Shares or @svn:@ or @http:@ &ndash; a particularly helpful turn if your users are used to doing everything via network share (as mine are).

If you find yourself in the strange position I did &ndash; having to do all this on Windows without Python necessarily being installed &ndash; you can make use of the "batch file":http://v4.chriskrycho.com/web/tools/run-python-on-a-network-drive-batch-file I put together to account for that situation. Getting it working right _requires_ two tweaks:

* Rename the file to pre-commit.bat so that Subversion knows to run the file. (If you're not familiar with pre-commit hooks, start "here":http://svnbook.red-bean.com/en/1.7/svn.ref.reposhooks.html with an introduction to repository hooks and then read "this page":http://svnbook.red-bean.com/en/1.7/svn.ref.reposhooks.pre-commit.html specific to pre-commit hooks.
* Where you run the executable, you'll need to explicitly reference the @jira-client.py@ file, as here, where we use the first argument, <code>%1</code>, to get the repository location:

One optional but highly recommended further tweak:

* You'll almost certainly want to uncomment the @exit %errorlevel%@ command, because otherwise you may have trouble getting the error reporting back from the Python script if things aren't working right &ndash; Subversion pre-commit hooks "eat their @stdout@":http://stackoverflow.com/a/3331889/564181.

<pre lang="winbatch">:: Run commands with the network drive mapped
%NETDRIVE%\<path-to-python>\python.exe %1\hooks\jira-client.py %1 %2

:: Uncomment this if you want to catch errors from the executable
if %errorlevel% GTR 0 exit %errorlevel%
</pre>

* Finally, you should be aware that these paths have to be full; you can't rely on the presence of @PATH@ because Subversion hooks work in an empty environment context.

p(#note). Note that if you have problems with users' copies of @svnlook@ not being in the same location on each machine (as they need to be for the Python script to work properly), you can apply the same trick I did with Python itself: put it in a network-shared location and map the drive for the duration of the script's execution.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date>2012-06-09 01:53:20</wp:post_date>
		<wp:post_date_gmt>2012-06-09 06:53:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jira-commit-acceptance-plugin-tweaks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>209</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[jira commit acceptance plugin]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[An update to and modernization of the Python jira-client part of the JIRA Commit Acceptance plugin pre-commit hook.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[Python, Subversion, pre-commit hook, JIRA Commit Acceptance plugin, JIRA 5.05]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[82]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>228</wp:comment_id>
			<wp:comment_author><![CDATA[Introducing: JIRA Commit Acceptance Plugin Tweaks (Python, Batch) &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/tools/introducing-jira-commit-acceptance-plugin-tweaks-python-batch/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-06-25 22:28:47</wp:comment_date>
			<wp:comment_date_gmt>2012-06-26 03:28:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Download the tweaked file here. See a detailed writeup of what I did, how and why here. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Run Executable on a Network Drive - Batch File</title>
		<link>http://2012-2013.chriskrycho.com/web/tools/run-executable-on-a-network-drive-batch-file/</link>
		<pubDate>Sat, 09 Jun 2012 05:32:06 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?page_id=545</guid>
		<description></description>
		<content:encoded><![CDATA[You may find you need to run an executable (in my case it was Python) remotely for some reason or another. This isn't particularly difficult to pull of on Linux or Unix systems, of course - it's trivial, actually. It's much more involved on Windows, not least because you can't count on everyone having the network location mapped the same way, even if they do have it mapped. However, some fairly straightforward work in a batch file will make your life much easier.

All you need is the executable installed in a shared location on the network, and this batch file, and you can basically get the same functionality you would have with a *nix network location.

* Download: "click":http://dl.chriskrycho.com/scripts/remote-executable.bat
* Source:

<pre lang="winbatch">@ECHO OFF

setlocal

:: Store working directory to return to after finished
set WORKDIR=%CD%

:: Map and switch to a network drive and give it an arbitrary, unmapped drive letter
pushd \\<machine-name>\<directory>

:: Store the name of network drive so it can be unmapped when finished
set NETDRIVE=%CD%
set NETDRIVE=%NETDRIVE:\=%

:: Change back to the original directory
cd /d %WORKDIR%

:: Run commands with the network drive mapped
%NETDRIVE%\<path to executable>

:: Uncomment this if you want to catch errors from the executable
:: if %errorlevel% GTR 0 exit %errorlevel%

:: Unmap the network drive
net use %NETDRIVE% /delete /y

endlocal</pre>

h4. Notes:

* The big one: you may have trouble with this because Windows can't find DLLs it relies on. There is often a simple way around this, though: just copy the DLLs to the same folder as the executable you want to run. In the case of Python, that's a single DLL (@python27.dll@). Not too bad!
* I'm using @pushd@ rather than @net use *@ in the beginning of the script because it automatically changes to the new location. This makes it trivial to get the name of the newly mapped drive using @%CD%@ - something that is much more difficult otherwise. (I never actually found an _easy_ way to do it, though there _are_ ways out there.)
* You can of course also (generally) do as you like with @stdout@ and @stderr@.
* If you want to leave the new drive mapped, you can just drop the @/delete@ command at the end.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>545</wp:post_id>
		<wp:post_date>2012-06-09 00:32:06</wp:post_date>
		<wp:post_date_gmt>2012-06-09 05:32:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>run-executable-on-a-network-drive-batch-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>209</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[With this simple batch file, you can get close to the same functionality you would have in a *nix network location with a Windows network drive.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[Windows, batch file, Python, executable, network drive]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>801</wp:comment_id>
			<wp:comment_author><![CDATA[Introducing: JIRA Commit Acceptance Plugin Tweaks (Python, Batch) &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/tools/introducing-jira-commit-acceptance-plugin-tweaks-python-batch/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-08-29 15:02:26</wp:comment_date>
			<wp:comment_date_gmt>2012-08-29 20:02:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] the batch file here. See a detailed writeup on dealing with shared network drives and executables here. I included some detailed notes on dynamically mapping directories, if you&#039;re [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Introducing: Run Executables on a Network Drive - Batch File</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=550</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=550</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>550</wp:post_id>
		<wp:post_date>2012-06-09 00:02:16</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-run-executables-on-a-network-drive-batch-file</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tools-posts"><![CDATA[Tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>All The Options, Please</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=630</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=630</guid>
		<description></description>
		<content:encoded><![CDATA[Every time I use a mobile-specific site, I love responsive design more. Web devs: _please_ expose all the same functionality to all devices. You don't have to expose it the same _way_, but keeping me from getting at some of your content or functionality just because I'm on a different size of device or a different browser doesn't help your cause. I just makes me dislike your site.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>630</wp:post_id>
		<wp:post_date>2012-06-24 08:05:31</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>all-the-options-please</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="graceful-degradation"><![CDATA[graceful degradation]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="progressive-enhancement"><![CDATA[progressive enhancement]]></category>
		<category domain="post_tag" nicename="responsive-design"><![CDATA[responsive design]]></category>
		<category domain="post_tag" nicename="web-applications"><![CDATA[web applications]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sanity or Death:An Open Letter to the Publishing Houses</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=675</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=675</guid>
		<description></description>
		<content:encoded><![CDATA[Dear publishing houses,

From a fan, a sincere warning: Ebooks are coming for you. Your choices are to adapt - to embrace sane options that include a substantial reconsideration of historical truisms in your industry - or die.

Here's the simple reality you must face: everyone knows that distribution costs for ebooks are essentially zero. With the exception of special-case books (some textbooks, others heavy on images or graphics), most books are very, very small, because they're just text. Even most major publishing houses could store every book they publish on a single server and have room left over.

This is wonderful for everyone, but it means that you can't sell ebooks for more than you sell paperbacks. You're trying, and that's insane. The public may not understand the intricacies of publishing, but people understand that it costs less to distribute a book digitally than it does to print a paper copy. You make them feel ripped off, and you're going to lose to other channels, including piracy. That may not be right, but it's reality. Deal with it, or die.

Many pundits have compared the music and publishing industries in the past few years, and not without good reason. The production of music and the production of a book have much in common. Both require enormous amounts of up-front work: creativity, editing, preparation for publication, marketing, and so forth. In both cases, distribution is one of the smallest costs in the project.

Many book-readers aren't aware of this, so you need to educate them: the cost of a book mostly involves paying back the people who made it come into being, not the cost of the paper or the bits sent over the internet. Equally importantly, though, you need to recognize that you can leverage those relatively small distribution costs - especially on the internet - to your advantage, as long as you're willing to rethink your model.

In the world of publishers' dreams, you'd sell a physical copy <em>and</em> an electronic copy, so people could read your book with their ereader and the old fashioned way. Barring that, you've opted for ebook prices somewhere between standard paperback prices and the full hardcover price. No doubt you have reasons for this, but again: it's simply unsustainable, because everyone already knows that it costs you less to send some bits over the internet than it does to stock shelves in a bookstore. 

And here's the trick: you can sell a vastly higher volume of ebooks with two, very simple changes. Consumers will love it, and you'll make more money.

First, drop the price point of ebooks to a couple dollars less than the print books. I know: you have lots of overhead costs you're trying to meet. But ebooks will sell better if they're closer to customers' perceived value, which is lower than for physical copies - and not just because of the distribution costs. You can't put an ebook on your library, you can't lend it to a friend (at least, not in the same way), you can't pass it down to your grandchildren. It's just bits; it has no physicality. Price according to value, not according to what you wish the value were.

Second, with every physical book you sell, give a coupon for the ebook at $0.99 - yes, you heard me: every single book. You want to sell both. You don't, right now: you can't. (Especially with the aforementioned overly high price points.) And you won't, ever, because no one is going to buy a book twice. I've bought multiple copies of exactly 7 books in my life, to date: the Bible, the three volumes of <cite>The Lord of the Rings</cite>, and the first three volumes of <cite>The Wheel of Time</cite>. I'd pick up an ebook in a heartbeat if it were $0.99 on top of the regular book. In the long run, that means an enormous increase in sales of both.

Amazon <em>will</em> kill you if you don't get this figured out. I'm not persuaded Amazon has the customer's good in mind in publishing (or anything else): they just want to be able to maximize their centrality to the customer, and that means being publisher and producer as well as distributor. You beat this by gutting their strategy: make your ebooks (1) cheaper than paperback, (2) available in every possible format - and it might do you good to push ePub, and (3) available at steeply discounted rates whenever a physical book is purchased.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>675</wp:post_id>
		<wp:post_date>2012-07-27 06:48:52</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sanity-or-deathan-open-letter-to-the-publishing-houses</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="amazon"><![CDATA[Amazon]]></category>
		<category domain="post_tag" nicename="books"><![CDATA[books]]></category>
		<category domain="post_tag" nicename="disruption"><![CDATA[disruption]]></category>
		<category domain="post_tag" nicename="ebooks"><![CDATA[ebooks]]></category>
		<category domain="post_tag" nicename="intellectual-property"><![CDATA[intellectual property]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="publishing"><![CDATA[publishing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Sanity or Death: An Open Letter to the Publishing Houses]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>sibelius-7</title>
		<link>http://2012-2013.chriskrycho.com/web/dont-sell-out/sibelius-7/</link>
		<pubDate>Wed, 22 Aug 2012 04:23:26 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/files/2012/08/sibelius-7.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>696</wp:post_id>
		<wp:post_date>2012-08-21 23:23:26</wp:post_date>
		<wp:post_date_gmt>2012-08-22 04:23:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sibelius-7</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>690</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://2012-2013.chriskrycho.com/web/files/2012/08/sibelius-7.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/sibelius-7.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"567";s:6:"height";s:3:"689";s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:23:"2012/08/sibelius-7.jpeg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"sibelius-7-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"sibelius-7-246x300.jpeg";s:5:"width";s:3:"246";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://2012-2013.chriskrycho.com/web/858/</link>
		<pubDate>Wed, 21 Nov 2012 18:55:17 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=858</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date>2012-11-21 12:55:17</wp:post_date>
		<wp:post_date_gmt>2012-11-21 18:55:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>858</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="main-nav"><![CDATA[Main Nav]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[139]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:7:"level-1";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Version 3.0</title>
		<link>http://2012-2013.chriskrycho.com/web/version-3-0/</link>
		<pubDate>Thu, 12 Jan 2012 18:49:40 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[This is chriskrycho.com, Version 3.0. I'm a little sad that I deleted Version 1, because seeing how far my sense of design has come over time would be worth it, the inevitable laughter notwithstanding. You can see the (much less dynamic) version 2 <a href="http://2010.chriskrycho.com" title="chriskrycho.com 2010" target="_blank">here</a>. The amount I've learned about web design and development in the last year alone amazes me; I can't wait to see how much better I can do a year from now.<!--more-->

<h3>Introductory aside</h3>
Designgineering is a silly made-up word, but it's the closest I could come to describing my approach to web design and development. I think like a man who studied both physics and music composition in college (because I did), and that is reflected in my approach to design in general and this site in particular. I apply every ounce of creativity I can, but approach challenges systematically and carefully, working iteratively toward a solution. I design, and I engineer.

A confession is in order though: this first post is a bit more haphazard than the engineering side of me would prefer. My first posts are always, of a necessity, somewhat introductory, and also somewhat scattered. Introductions may not be the best way to launch a site (I've heard lots of opinions on this over the years), and a lack of extremely careful organization <em>certainly</em> isn't (I've heard even more opinions on this).

The glorious thing about personal websites, though - especially blogs - is that they are in fact <em>personal</em>. They lend themselves to (thoughtful) rule-breaking and self-expression. If, like me, you find it strange to simply jump in writing about a topic without having laid some groundwork first, you'll be sympathetic to my need to get this post out. If you're not like me, you have my heartfelt congratulations for being undoubtedly much less weird, and I hope this post doesn't bore you too much.

<h3>Down to business</h3>
The goals I had for this site design were fairly simple: it needed to be modern, have some personality, and be flexible enough to support a variety of kinds of content. The sorts of posts that will be coming down the line on From the Hearth, my family site, will be substantially different than those here (for one, there won't be nearly as many pictures here, and for another, if I ever put a snippet of code up over there, I'm doing something terribly wrong).

From the getgo, I envisioned this site as being clean and somewhat minimalistic, using different color schemes and typography to differentiate the various parts of the site, and as up to date as I could manage with web technologies appropriate to this sort of site.

The biggest highlights for me with this relaunch are in the typography - an area I'm increasingly passionate about, and an area of the web which is finally coming into its own. Thanks to <a href="http://www.typekit.com/" target="_blank">Typekit</a>, it is now possible for me to supply every single font you see here to match my vision - not constrained by the vagaries of font installation or even browser support. (Go Typekit!) Of course, being a firm believer in both progressive enhancement and graceful degradation, the site still looks just fine if you have Javascript disabled and the fonts can't display.

In addition, I made sure that the layout fits with best practices in terms of readability - the line lengths are not too long. I'm increasingly sensitive to line-length on the web personally, finding that sites where this isn't taken into account put a much greater strain on me mentally. The last thing I wanted was to have that experience with my own site.

Responsive design was a requirement from the start; I absolutely <em>love</em> the ability the make the browser reflow properly for various screen sizes. In terms of implementation, I approached this from a mobile-first point of view, which at least in principle makes the issue of older versions of IE more tractable as well. In practice, they still proved difficult, but that's no surprise. Media queries allowed me to make the site a bit friendlier for people with particularly large resolutions, as well. I hope that we're entering into another era of screen resolution increases, in which case having sites that respond to larger screens will be increasingly important: who wants two thirds or more of their screen to be uselessly empty? Beyond just increasing the text size, we'll need to continue thinking of ways to make better use of the space, including remembering that white space is good and valuable.

Visually, I'm quite pleased with how the site has turned out. There are a number of things on the back end that still require some tweaking - some of the newer features Wordpress has implemented for tumblr style blogging in particular - but enough of the framework is solidly in place that I have no qualms about getting this ball rolling.

Here's hoping the years ahead are both as intellectually challenging and as rewarding as the last one has been!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2012-01-12 18:49:40</wp:post_date>
		<wp:post_date_gmt>2012-01-12 18:49:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>version-3-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="creativity"><![CDATA[creativity]]></category>
		<category domain="post_tag" nicename="engineering"><![CDATA[engineering]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="responsive-design"><![CDATA[responsive design]]></category>
		<category domain="post_tag" nicename="site-news"><![CDATA[site news]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.228.221.6</wp:comment_author_IP>
			<wp:comment_date>2012-01-19 17:43:00</wp:comment_date>
			<wp:comment_date_gmt>2012-01-19 23:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I must say, I do like the website. Simple, but not bland, streamlined and very mobile-friendly, interesting and/or entertaining and/or thought provoking with fairly frequent updates. Plus your clever names for, well, everything, particularly the buttons/links keep me mildly amused. You get the Cyer Nibrod seal of approval. Yay!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.228.221.6</wp:comment_author_IP>
			<wp:comment_date>2012-01-19 17:46:38</wp:comment_date>
			<wp:comment_date_gmt>2012-01-19 23:46:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I would be cool in the future to see the addition of more color/ornamentation/decoration/pictures of the relatively subtle variety to make the place a little prettier. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-01-19 20:25:13</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 02:25:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm glad to have the Cyer Nibrod seal of approval! I'm inclined to keep the page itself to a minimum of color (relying on what I have) so that as I include formatted code (on this sub-site), pictures (on the family or art) sites, etc., they can stand out. I'm also a big fan of keeping the color scheme restrained so it stays out of the way of the content. Too often, the decoration can end up distracting from the content itself, and that's LAME.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>8</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Keyboard quality matters</title>
		<link>http://2012-2013.chriskrycho.com/web/keyboard-quality-matters/</link>
		<pubDate>Sat, 14 Jan 2012 03:57:26 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[I spent much of the day today working on a slightly older model HP Compac laptop.

To be as plain as I can: the keyboard was utterly atrocious. To say the keys are mushy is an understatement. To say the designers lacked a sense of aesthetic pleasure would only be slightly less obvious than to say that they had no concept of the value of ergonomics.<!--more-->

When I returned home and started typing on my 2007-era Macbook Pro, I experienced an immediate (although not immediately conscious) sense of tactile pleasure. Within a very brief time, the consciousness of this pleasure had risen to the forefront of my mind - the experience of typing was no longer a source of frustration, and this was a <em>notable</em> difference from my experience earlier in the day.

Keyboard quality matters. There is a reason Apple products continue to sell well, and it is not (as so many have intimated) some cultish phenomenon. Rather, the phenomenon is a response to well-designed machines that put the user's experience at the forefront.

There is a lesson here for all designers, including web designers. It is possible that people will not consciously notice if we do our jobs badly. It is even possible that they will not consciously notice if we do our jobs well. However, the reality is that the pleasure inherent in using something well-designed and well-crafted <em>does</em> make a difference in our productivity.

Pleasure, as it turns out, is not an incidental component of good design. It is essential.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2012-01-14 03:57:26</wp:post_date>
		<wp:post_date_gmt>2012-01-14 03:57:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>keyboard-quality-matters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aesthetics"><![CDATA[aesthetics]]></category>
		<category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
		<category domain="post_tag" nicename="ergonomics"><![CDATA[ergonomics]]></category>
		<category domain="post_tag" nicename="pleasure"><![CDATA[pleasure]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>first CMS</title>
		<link>http://2012-2013.chriskrycho.com/web/first-cms/</link>
		<pubDate>Sat, 14 Jan 2012 13:53:52 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[About to start implementing my first CMS. Database is ready, now just (just!) have to do the front end.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2012-01-14 13:53:52</wp:post_date>
		<wp:post_date_gmt>2012-01-14 13:53:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>first-cms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>the only Mac</title>
		<link>http://2012-2013.chriskrycho.com/web/the-only-mac/</link>
		<pubDate>Sun, 15 Jan 2012 00:13:08 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[I'm pleasantly surprised: sitting at a coffee shop working, and of the 7 notebooks in here, only mine is a Mac. It's a little strange, though...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2012-01-15 00:13:08</wp:post_date>
		<wp:post_date_gmt>2012-01-15 00:13:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-only-mac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>CSS3 and 3D text</title>
		<link>http://2012-2013.chriskrycho.com/web/css3-and-3d-text/</link>
		<pubDate>Tue, 17 Jan 2012 17:03:08 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[Okay, now <a href="http://acko.net/blog/making-love-to-webkit/" title="Making Love to Webkit" target="_blank">this</a> is just fantastic - CSS3, 3D transforms of divs, and a Javascript editor to make it all easier to manage. I love seeing people really push the limits of what browsers can do. Doing it in a way that degrades elegantly? All the more excellent. <a href="http://acko.net/blog/making-love-to-webkit/" target="_blank">Making Love to Webkit (@acko.net)&rarr;</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2012-01-17 17:03:08</wp:post_date>
		<wp:post_date_gmt>2012-01-17 17:03:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css3-and-3d-text</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[CSS3]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="transforms"><![CDATA[transforms]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>subscription info</title>
		<link>http://2012-2013.chriskrycho.com/web/subscription-info/</link>
		<pubDate>Wed, 18 Jan 2012 15:55:10 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[A few people have let me know that they would like to get all of my feeds - not having to subscribe separately to each blog. Gladly for you, I thought of this eventuality; you can use the <a href="http://v4.chriskrycho.com#connect" title="&ldquo;Connect&rdquo; at chriskrycho.com" target="_blank">subscription links</a> at the bottom of the <a href="http://v4.chriskrycho.com/" title="Home page" target="_blank">main page</a> - then you will get a combined feed of all of my blogs in one.

I hope at some point in the future to set up a system that lets you subscribe easily to whichever of the feeds you like - at the moment I only have individual feeds for the sites or a globally unified feed. Eventually, I want to set up the feed subscriptions so that you can just check a box for the blogs you want to follow, which will then deliver those as a single combined feed for your convenience. Alas, I'm pretty well swamped at the moment, so it'll be a while before I get there.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2012-01-18 15:55:10</wp:post_date>
		<wp:post_date_gmt>2012-01-18 15:55:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>subscription-info</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="atom"><![CDATA[Atom]]></category>
		<category domain="post_tag" nicename="feed"><![CDATA[feed]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="post_tag" nicename="rss"><![CDATA[RSS]]></category>
		<category domain="category" nicename="site-info"><![CDATA[Site info]]></category>
		<category domain="post_tag" nicename="site-news"><![CDATA[site news]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[subscription info &raquo; Ardent Fidelity &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/theology/2012/01/18/subscription-info/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-01-18 16:00:37</wp:comment_date>
			<wp:comment_date_gmt>2012-01-18 16:00:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Readers interested in subscribing to more than one of my blogs should take a look at my post over at Designgineering: subscription info&rarr; [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>The problems with SOPA and PIPA</title>
		<link>http://2012-2013.chriskrycho.com/web/problems-with-sopa-pipa/</link>
		<pubDate>Wed, 18 Jan 2012 18:06:31 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The following is adapted and expanded from some comments I left on <a href="http://www.geneveith.com/" target="_blank" title="Cranach: The Blog of Veith">Dr. Gene Veith's</a> <a href="http://www.geneveith.com/2012/01/18/wikipedia-is-on-strike-today/" title="Wikipedia is on strike today" target="_blank">post</a> on Wikipedia going dark today.</i>

Congress is considering two acts - the House's <a href="http://www.opencongress.org/bill/112-h3261/show" target="_blank">Stop Online Piracy Act</a> and the Senate's <a href="http://www.opencongress.org/bill/112-s968/show" target="_blank">Protect Intellectual Property Act (PIPA)</a> - which have as their stated goals the elimination of online piracy. This is a notable goal, and one I can get behind. The problem is, these acts do far more than just stop online piracy.<!--more-->

As a result, a broad group of companies and organizations and sites are protesting these acts today. Wikipedia has gone completely dark. Reddit has shut down. Google has blacked out their title and linked to a discussion of the downsides of these acts. Content producers ranging from tech sites and writers like Ars Technica and Tim O'Reilly to musicians like Peter Gabriel are deeply opposed to the acts. Why, you ask, would the people these acts purportedly aim to protect, opposed to them?

Put plainly, because these acts attack piracy the way one might try to kill termites... with a nuclear warhead. The amount of power granted to copyright owners by these acts is vastly out of proportion to the actual threat posted to them. More than that, the power granted to rights-holders is mind-bogglingly short on respect for the rights of anyone <em>else</em>.

Let me explain: if, in this post, I linked to a site (for non-piratical purposes) that also included pirated content (even if that content were posted by users and not by the site itself), a content-owner could <em>take this site down</em>, with no short-term legal recourse available to me. I'm not exaggerating here.

I could eventually get my site back up and running, but the burden of proof would be on me, rather than the accuser. Name another point in our legal system where the burden of proof is on the accused! This prospect alone should horrify every sensible person out there.

I'm all in favor of stopping piracy, but content owners should actually have to make their case in a court, <em>the same as everyone else in every other circumstance</em>. If I publish libel in a paper, you can and should sue me - but you don't have the right to summarily demand, before a trial and without having presented any evidence, that all copies of the paper be burned <em>and my printing press seized</em>. You have to actually sue me and prove it in court. Likewise, a record company can't walk into a record store and say, "We <em>believe</em> you are <em>encouraging</em> the illegal sale of stolen copies of our CDs; we're shutting you down." They have to go through the existing legal channels. By contrast, under PIPA and SOPA a rights-holder can block this site from search results, prevent me from receiving payments via Paypal, Mastercard, Visa, etc., and lock me out of all advertising channels - and all this without a trial.

Even the existing legal channels (e.g., the Digital Millennium Copyright Act) are arguably too lenient in terms of the power they grant to rights-holders - at least one company eventually won their case in court against the rights-holders but lost so much money to litigation they had to shut down anyway - but in any case, <em>there are already legal channels by which rights-holders can have infringing content taken down.</em> They just don't want to have to actually do the legal work.

I'm not anti-business by any means, and as someone who does a fair amount of creative work on the side, I see the value in protecting intellectual property. However, I do not <em>trust</em> big business not to abuse power when it's given to them. I don't trust <em>any</em> large institution not to abuse power when it's given to them. The temptation is simply too great, and human nature too predictable.

Given this, I urge everyone to call their congressmen and -women and urge them to vote against PIPA and SOPA. The easiest way to get that contact information for today is simply to go to <a href="http://en.wikipedia.org/wiki/Main_Page" title="English Wikipedia home page" target="_blank">Wikipedia</a> and enter your zip code in the form present on the main page. In the future, you can find contact information for your Representative <a href="http://www.house.gov/representatives/" title="US House of Representatives - list of representatives" target="_blank">here</a>, and for your Senators <a href="http://www.senate.gov/general/contact_information/senators_cfm.cfm" title="US Senate - list of Senators" target="_blank">here</a>.

Tomorrow I'll have a note on defeating piracy. For further reading, see the following:
<ul>
<li><a href="http://arstechnica.com/staff/palatine/2012/01/sopa-resistance-day-begins-at-ars.ars">SOPA Resistance Day Begins at Ars</a> - Ars Technica</li>
<li><a href="https://www.google.com/landing/takeaction/" target="_blank">End Piracy, Not Liberty</a> - Google</li>
<li><a href="http://en.wikipedia.org/wiki/Wikipedia:SOPA_initiative/Learn_more">SOPA and PIPA - Learn more</a> - Wikipedia</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2012-01-18 18:06:31</wp:post_date>
		<wp:post_date_gmt>2012-01-18 18:06:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>problems-with-sopa-pipa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="intellectual-property"><![CDATA[intellectual property]]></category>
		<category domain="post_tag" nicename="pipa"><![CDATA[PIPA]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="public-policy"><![CDATA[public policy]]></category>
		<category domain="post_tag" nicename="sopa"><![CDATA[SOPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sopa-pipa-and-real-solutions-to-piracy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>A note on defeating piracy</title>
		<link>http://2012-2013.chriskrycho.com/web/a-note-on-defeating-piracy/</link>
		<pubDate>Thu, 19 Jan 2012 08:00:11 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The following is adapted and expanded from some comments I left on <a href="http://www.geneveith.com/" target="_blank">Cranach: The Blog of Veith</a>'s <a href="http://www.geneveith.com/2012/01/18/wikipedia-is-on-strike-today/" title="Wikipedia is on strike today" target="_blank">post</a> on Wikipedia going dark yesterday.</i>

As many others have pointed out, there are many better solutions to piracy than those proposed by PIPA and SOPA. One of these solutions is to address the root issues of much of the piracy that goes on: the absolutely backwards systems that the content-publishers themselves have created, systems that inconvenience only the people who actually care about copyright.<!--more--> The only people who respect the inane digital rights management systems present on most DVDs, Blu-rays, and CDs are people who already care about copyright laws. The people who intend to pirate <em>will do so</em>. The real question is whether a media publisher's policies make it so difficult to use the content one has purchased that piracy begins to appear a reasonable alternative.

Consider: music piracy dropped <em>significantly</em> after the launch of the iTunes store. Why? Because people could get the music they wanted in digital form easily and inexpensively. It didn't need to be free; it just needed to be convenient, relatively inexpensive, and follow the distribution model - digital downloads - that now ruled the day. The same is true of movies. Digital copy protection on disks, a half dozen <em>unskippable</em> commercials before the content actually plays, etc... these don't actually stop pirates or significantly increase the profits of the publishers, but they <em>do</em> frustrate people to the point that many people are tempted to "pirate" content they would not otherwise. Why in the world should I not be able to copy a movie I purchased from the DVD to my computer? Yet that is the case with most video content out there. (One number nobody on the content side wants to publish or even think about is this: how many "pirated" copies are just people downloading a copy of something they already own because they don't want to have to deal with the enormous hassles involved in dealing with the copy they do own? The number is higher than you'd think.)

So one of the best ways to defeat piracy - and publishers who have embraced this mentality have already reaped the rewards - is to make content relatively inexpensive and readily available in the channels people want. If I buy a Blu-ray, give me the digital copy. Some publishers have started doing this, but most of them have <em>still</em> imposed absurd restrictions that make it difficult to access that content, including arcane registration and management systems, time limits on the availability of the digital download, etc. Take that away, and people will see far more value in your product. Leave it there, and people are far more likely to think, "Look, I already bought this. I'm just going to download it from somewhere that's less of a hassle."

Similarly, many content producers are trying frantically to limit access to their content - but this again has the exact opposite effect intended. When a major broadcast network delays the availability of its shows on its website for a week, piracy skyrockets. They want to push people to watch the show on their televisions when it airs - but this is no longer how people interact with content. When, instead, the content is readily available immediately, piracy drops. People don't want to pirate, generally speaking. They just want to watch the content - so give it to them!

Look: I'll pay for Hulu Plus <em>if</em> I can get the content I want on it. That money then goes back to the people making it. But I'm not going to pay for it if you refuse to publish your content there because you can't imagine most of your money on a TV show not coming from DVD sales. But wait - ten years ago, you didn't want to sell DVDs because you thought you'd never make money on them, and you worried that people would watch them instead of watching whatever your current show on television is. In another decade, digital distribution is going to be far and away the primary means by which people get their content. The only question is who will be profiting from those downloads.

The <em>reality</em> is that old ways of protecting content are dead. Digital distribution is in. Your content <em>will</em> be distributed digitally. If you don't do it, someone else will - they'll digitize it, and they'll make it available for others. The best way to make money off your product is to beat them to the punch. Get your product out there, and make it easy for people to get to. Then ask them to pay a bit so you can keep giving it to them. Guess what? They will!

<i>For more reading, see "<a href="http://arstechnica.com/tech-policy/news/2012/01/internet-regulation-and-the-economics-of-piracy.ars" target="_blank">SOPA, Internet regulation, and the economics of piracy</a>" at <a href="http://arstechnica.com/" target="_blank">Ars Technica</a>.</i>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2012-01-19 08:00:11</wp:post_date>
		<wp:post_date_gmt>2012-01-19 08:00:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-note-on-defeating-piracy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="new-media"><![CDATA[new media]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="public-policy"><![CDATA[public policy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.228.221.6</wp:comment_author_IP>
			<wp:comment_date>2012-01-19 09:28:23</wp:comment_date>
			<wp:comment_date_gmt>2012-01-19 15:28:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[But that would be the smart way to do it, and what would the world come to if people started being smart?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.201</wp:comment_author_IP>
			<wp:comment_date>2012-01-19 09:49:47</wp:comment_date>
			<wp:comment_date_gmt>2012-01-19 15:49:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A terrible, terrible place where all content producers were better rewarded for their efforts. Oh, the tragedy that would be!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[No Castle for you! &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/2012/01/20/no-castle-for-yo/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 10:39:48</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 16:39:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] up on yesterday&#8217;s thoughts on piracy: I ran across an example that perfectly illustrates the ways that the big content industries are [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>No Castle for you!</title>
		<link>http://2012-2013.chriskrycho.com/web/no-castle-for-you/</link>
		<pubDate>Fri, 20 Jan 2012 16:39:43 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[Following up on <a href="http://v4.chriskrycho.com/web/2012/01/19/a-note-on-defeating-piracy/" title="A note on defeating piracy" target="_blank">yesterday's thoughts on piracy</a>: I ran across an example that perfectly illustrates the ways that the big content industries are shooting themselves in the foot when it comes to profit and piracy.

<a href="http://jaimiedawn.blogspot.com/" title="Refining Process" target="_blank">Jaimie</a> and I are big fans of <a href="http://beta.abc.go.com/shows/castle" title="Castle @ABC.com" target="_blank"><cite>Castle</cite></a>; it's the only ongoing television show we actually watch. I was reading some discussion on this week's episode this morning, and discovered that while ABC puts the video up on the website for streaming (good move!), they limit access to people in the United States (horrible move!).<!--more-->

Presumably, they have lots of reasons for this - deals with networks in other countries and so on. But the result is that lots of people overseas pirate it, because they just want to watch the episode. This is particularly true of countries where they don't get the content for a year or more afterward. Even Canada doesn't get the content immediately. The result? Lots of complaints about the policy, and several (now deleted) comments saying, "Just download it from [file-sharing site]."

ABC could make themselves a tidy little profit by opening the views up to everyone. Instead, they're <em>causing</em> people to pirate by preventing them any legitimate access to the content. Yes, I recognize that people are still responsible for their own illegal behavior, but ABC is blind not to recognize that they could stop most of this piracy <em>and</em> increase their own profits all in one fell swoop.

The moment the old media companies realize that the internet is on their side - that it's a vast, still largely untapped source of profit, if only they'll adapt to it - is the moment that most piracy dies on the vine. As I said yesterday: <em>most people don't want to pirate; they just want access to the content</em>. Most people will pay for it - through advertising or reasonable subscriptions - if you let them. The two main problems are:

<ol>
<li>Big content won't let people pay.</li>
<li>Big content is trying to charge too much.</li>
</ol>

On the first problem, see above. The solution to the second problem is also fairly simply to grasp. As a <a href="http://www.independentclauses.com/" title="Stephen Carradini | Independent Clauses" target="_blank">friend of mine</a> put it in a discussion on Facebook yesterday:

<blockquote><p>The difference between one person paying ten while three people pay nothing and four people paying five is positive ten on the latter side.</p></blockquote>

This is why the Apple App Store has made some people enormous profits, despite the fact that most apps sell for $0.99. Put simply: it's easier to convince one hundred people to spend one dollar than to convince ten people to spend ten dollars, especially for an app for their phones. (There are other problems with that model, but those have to do with the saturation of the market and the resulting difficulty of discovery and differentiation, rather than the economics.)

Lower prices sometimes mean higher profits - sometimes <em>much</em> higher profits. This isn't always the case, and everyone has to <a href="http://www.informationarchitects.jp/en/ia-writer-on-prices-and-features/" title="iA Writer: On Prices and Features" target="_blank">consider the various messages that prices send</a>, but in general, you want to shoot for the price point that maximizes profits. Generally speaking, that's not the maximum price you can get a <em>few</em> people to pay, it's the maximum price you can get <em>many</em> people to pay.

The easiest way to kill piracy is to dry up the demand for it from the vast majority of the population. ABC should make Castle available all over the world in two forms: ad-supported but free, and at some low price point without advertising. Moreover, it should do this immediately after it airs, or - better yet - concurrent with its airing. Everyone wins.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2012-01-20 10:39:43</wp:post_date>
		<wp:post_date_gmt>2012-01-20 16:39:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>no-castle-for-you</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="abc"><![CDATA[ABC]]></category>
		<category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
		<category domain="post_tag" nicename="castle"><![CDATA[Castle]]></category>
		<category domain="post_tag" nicename="economics"><![CDATA[economics]]></category>
		<category domain="post_tag" nicename="intellectual-property"><![CDATA[intellectual property]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[no-castle-for-yo]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[for the record &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/2012/01/for-the-record/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-01-22 08:03:04</wp:comment_date>
			<wp:comment_date_gmt>2012-01-22 14:03:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] in terms of posting frequency. Between launching the site and the unusually provocative points for discussion prompted by PIPA/SOPA, there was a lot of extra content last. I generally hope to have around one [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.228.223.45</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 15:41:45</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 21:41:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Seriously. It's mandatory for engineers, but not necessarily CEOs and politicians? There's a disconnect there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>15</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.228.223.45</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 11:26:05</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 17:26:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Part of the reason networks may be reluctantis just how much money goes into TV advertising. Also, what you're saying about price and digitization i definitely agree with, it's why Steam has made so much money. Why pay $50 for a game in a store that is $30 to download on Steam, and you don't have to hassle with disks or registration or confirmation codes most of the time. Add in perpetual ridiculous daily, midweek, weekend, event, and holiday sales and people are way more likely to buy from you. Btw, if you can't tell, I'd recommend if you ever want to get a game on your computer, go to Steam.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.200</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 11:40:31</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 17:40:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, you're absolutely right. Unfortunately, though, that's just another example of thinking, "Well, we've always done it this way, so that's how we have to continue doing it." The reality, of course, is that a great deal of money can be made by charging $1.99 for an ad-free episode, and a great deal of money can also be made by advertising in the same fashion as on a TV show but in a streaming context. The problem isn't affordability for the networks; it's <em>perceived</em> affordability.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>11</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Abi Krycho]]></wp:comment_author>
			<wp:comment_author_email>akrycho@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>138.67.177.88</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 12:33:05</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 18:33:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, it sounds like you were paying attention in my Econ class last semester...oh wait. But no in reality, it's the same thing I've been saying about a variety of industries for a very long time. Wherever that equilibrium point falls is where people can maximize the sold price and the amount of sales. Now if only some of these companies and corporations could see that...maybe THEY should come to my Econ class...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Jaimie Krycho]]></wp:comment_author>
			<wp:comment_author_email>jaimie.krycho@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jaimiedawn.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 13:45:12</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 19:45:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Preach it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.200</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 13:49:50</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 19:49:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm actually of the mindset that econ classes should be mandatory for everyone who wants to run a company <em>and</em> everyone who wants to participate in the government. Unfortunately, no one is listening to me on that suggestion.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>13</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[for the record &raquo; Ars Artis &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/art/2012/01/for-the-record/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 14:45:25</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 20:45:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] of the sections of this site. Between launching the site and the unusually provocative points for discussion prompted by PIPA/SOPA, there was a lot of extra content last. Things should be calmer and slower [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[for the record &raquo; From the Hearth &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/family/2012/01/for-the-record/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 14:45:57</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 20:45:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] of the sections of this site. Between launching the site and the unusually provocative points for discussion prompted by PIPA/SOPA, there was a lot of extra content last. Things should be calmer and slower [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[for the record &raquo; Ardent Fidelity &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/theology/2012/01/for-the-record-2/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-01-20 14:46:25</wp:comment_date>
			<wp:comment_date_gmt>2012-01-20 20:46:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] in terms of posting frequency. Between launching the site and the unusually provocative points for discussion prompted by PIPA/SOPA, there was a lot of extra content last. I generally hope to have around one [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1191</wp:comment_id>
			<wp:comment_author><![CDATA[Bundling! &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://2012-2013.chriskrycho.com/web/bundling</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-12-09 21:53:48</wp:comment_date>
			<wp:comment_date_gmt>2012-12-10 03:53:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] they sell at all, of course. I&#8217;ve written about this problem before: piracy explodes when there is demand without supply. It also tends to grow at a higher rate when [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Best comment on SOPA/PIPA</title>
		<link>http://2012-2013.chriskrycho.com/web/best-comment-on-sopapipa/</link>
		<pubDate>Fri, 20 Jan 2012 17:01:10 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote class="quote"><p>Best comment on #SOPA by far: "The internet is not owned by the US, thus they should not censor it."</p></blockquote>
<div class="attribution">&mdash;via Sami Niemelä (@samin on Twitter)</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2012-01-20 11:01:10</wp:post_date>
		<wp:post_date_gmt>2012-01-20 17:01:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>best-comment-on-sopapipa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pipa"><![CDATA[PIPA]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="post_format" nicename="post-format-quote"><![CDATA[Quote]]></category>
		<category domain="category" nicename="quotes"><![CDATA[Quotes]]></category>
		<category domain="post_tag" nicename="sopa"><![CDATA[SOPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>measure matters</title>
		<link>http://2012-2013.chriskrycho.com/web/measure-matters/</link>
		<pubDate>Sat, 21 Jan 2012 14:00:59 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[The more time I spend reading things on the internet, the more obvious it is to me that <a href="http://webtypography.net/Rhythm_and_Proportion/Horizontal_Motion/2.1.2/" title="Choose a comfortable measure | The Elements of Typographic Style Applied to the Web" target="_blank">measure matters</a>. Too many sites still have lines running to well over 100 characters. (I saw one recently that runs to 135, and many online technical manuals still run to the full width of the page!) It's just hard to read.

I locked this site in at between 66 and 72 characters, and it makes a difference. I hope, eventually, that <em>everyone</em> gets this right. In the meantime, <a href="http://www.instapaper.com/" title="Instapaper" target="_blank">Instapaper</a> and <a href="http://www.readability.com/" title="Readability: A Free Web & Mobile App for Reading Comfortably" target="_blank">Readability</a> carry the day!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date>2012-01-21 08:00:59</wp:post_date>
		<wp:post_date_gmt>2012-01-21 14:00:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>measure-matters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ergonomics"><![CDATA[ergonomics]]></category>
		<category domain="post_tag" nicename="pleasure"><![CDATA[pleasure]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="readability"><![CDATA[readability]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Clay Shirky: Pick up the pitchforks</title>
		<link>http://2012-2013.chriskrycho.com/web/clay-shirky-pick-up-the-pitchforks/</link>
		<pubDate>Fri, 20 Jan 2012 20:39:14 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[Clay Shirky is a consistently solid thinker on media and policy. No surprise, then, that <a href="http://www.shirky.com/weblog/2012/01/pick-up-the-pitchforks-david-pogue-underestimates-hollywood/" target="_blank">his thoughts</a> on PIPA/SOPA (now <a href="http://mashable.com/2012/01/20/sopa-is-dead-smith-pulls-bill/" title="SOPA is Dead: Smith Pulls Bill @ Mashable" target="_blank">dead</a>, thankfully) and the approach of the old media conglomerates in general:

<blockquote><p>Traditional American media firms are implacably opposed to any increase in citizens’ ability to create, copy, save, alter, or share media on our own. They fought against cassette audio tapes, and photocopiers. They swore the VCR would destroy Hollywood. They tried to kill Tivo. They tried to kill MiniDisc. They tried to kill <em>player pianos</em>. They do this whenever a technology increases user freedom over media. Every time. Every single time.</p></blockquote>

<p class="right"><a href="http://www.shirky.com/weblog/2012/01/pick-up-the-pitchforks-david-pogue-underestimates-hollywood/" target="_blank">Pick up the pitchforks: David Pogue underestimates Hollywood&rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2012-01-20 14:39:14</wp:post_date>
		<wp:post_date_gmt>2012-01-20 20:39:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clay-shirky-pick-up-the-pitchforks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="intellectual-property"><![CDATA[intellectual property]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_tag" nicename="pipa"><![CDATA[PIPA]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="public-policy"><![CDATA[public policy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>for the record</title>
		<link>http://2012-2013.chriskrycho.com/web/for-the-record/</link>
		<pubDate>Sun, 22 Jan 2012 14:00:46 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[For the record, last week was an extremely unusual week in terms of posting frequency. Between launching the site and the unusually provocative points for <a href="http://v4.chriskrycho.com/web/2012/01/no-castle-for-you/" title="No Castle for you!" target="_blank">discussion</a> prompted by PIPA/SOPA, there was a lot of extra content last. I generally hope to have around one post a day up on <em>one</em> of the sections of this site, so each section will get a post only every three or four days on average.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2012-01-22 08:00:46</wp:post_date>
		<wp:post_date_gmt>2012-01-22 14:00:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>for-the-record</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="site-info"><![CDATA[Site info]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>diamond_broadcast_blogs</wp:meta_key>
			<wp:meta_value><![CDATA[5;4;2;5;4;2;5;4;2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>12.5 hours of work</title>
		<link>http://2012-2013.chriskrycho.com/web/12-5-hours-of-work/</link>
		<pubDate>Sun, 22 Jan 2012 06:01:31 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=149</guid>
		<description></description>
		<content:encoded><![CDATA[12.5 hours of work so far today. The result? The public-facing side of my first CMS is largely done. Awesome!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2012-01-22 00:01:31</wp:post_date>
		<wp:post_date_gmt>2012-01-22 06:01:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>12-5-hours-of-work</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cms"><![CDATA[CMS]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Cookiee?</title>
		<link>http://2012-2013.chriskrycho.com/web/cookiee/</link>
		<pubDate>Tue, 24 Jan 2012 00:37:39 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[Point of minor hilarity: wherever I type "cookie" for web dev, I want to spell it with an extra e, because that's how you spell Wookiee.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2012-01-23 18:37:39</wp:post_date>
		<wp:post_date_gmt>2012-01-24 00:37:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cookiee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="funny"><![CDATA[funny]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
	</item>
	<item>
				<title>Senator Wyden: A Congressional Wakeup Call</title>
		<link>http://2012-2013.chriskrycho.com/web/senator-wyden-a-congressional-wakeup-call/</link>
		<pubDate>Tue, 24 Jan 2012 22:42:41 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[It is even rarer for me to gush with praise for Democrat politicians than for Republicans (rare enough already). But Senator Ron Wyden (D-Oregon) deserves serious praise for being one of the few voices on Capitol Hill who consistently opposed SOPA and PIPA on principle. <a href="http://www.wired.com/epicenter/2012/01/wyden-pipa-sopa-wake-up/" target="_blank" title="Sen. Ron Wyden: PIPA/SOPA is a Congressional Wake-up Call">This editorial</a> at Wired is yet another example of his being right on target:

<blockquote>While some have derided the events of last week as a departure from the way we do things in Washington, I believe last week is an example of the way Washington can change for the better. If more Americans took the time to be informed and call Congress when something matters to them lobbyist and special interest power would be greatly diminished.

So the question is, did Congress learn anything? Will Washington lament last week like it was a bad review that cost it business or will it recognize what happened as an opportunity to learn and do better?</blockquote>

<p class="right"><a href="http://www.wired.com/epicenter/2012/01/wyden-pipa-sopa-wake-up/" target="_blank">Sen. Ron Wyden: PIPA/SOPA is a Congressional Wake-up Call&rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2012-01-24 16:42:41</wp:post_date>
		<wp:post_date_gmt>2012-01-24 22:42:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>senator-wyden-a-congressional-wakeup-call</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_tag" nicename="pipa"><![CDATA[PIPA]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="public-policy"><![CDATA[public policy]]></category>
		<category domain="post_tag" nicename="sopa"><![CDATA[SOPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>A bit of a bear</title>
		<link>http://2012-2013.chriskrycho.com/web/a-bit-of-a-bear/</link>
		<pubDate>Sat, 28 Jan 2012 06:20:47 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[Turns out that authentication can be a bit of a bear in web applications... especially when you're dealing with two different database backends, and all the more so when the functionality you're adding on wasn't even a glimmer in someone's eye when they built the first chunk of the application. I have a headache, thanks to this particular implementation challenge.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2012-01-28 00:20:47</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:20:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-bit-of-a-bear</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="authentication"><![CDATA[authentication]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="web-applications"><![CDATA[web applications]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Upvotes and Downvotes—signalling and real communication</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=833</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=833</guid>
		<description></description>
		<content:encoded><![CDATA[- disqus
- Ars Technica
- reddit]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date>2012-11-06 09:14:20</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upvotes-and-downvotes-signalling-and-real-communication</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bundling: On Release Dates</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=949</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=949</guid>
		<description></description>
		<content:encoded><![CDATA[One detail I neglected to cover in my recent writeup on what I think is a very sensible pricing strategy for ebooks in the current market is <em>release dates</em>.

In the old model - before ebooks - fiction publishers usually decided whether to launch any given book in hardcover or mass market paperback. If they launched the book as a hardcover, a mass market paperback version usually followed about a year later. This is still the case for these two components, but now we've tossed a third into the mix: the ebook.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>949</wp:post_id>
		<wp:post_date>2013-01-02 16:50:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bundling-on-release-dates</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Trust, Payment, Value, and Ecosystems</title>
		<link>http://2012-2013.chriskrycho.com/web/?p=1050</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1050</guid>
		<description></description>
		<content:encoded><![CDATA[Early this year, Google announced that it was planning to shut down Google Reader. The reaction in the tech sector was split between the twin poles of "Eh, whatever, I don't use RSS anymore; go use Twitter, you whiners!" and "Dangit, Google! Now what am I going to use?" But what quickly became fairly settled territory, whichever side of that fence one ended up on, was the recognition that Google was never particularly incentivized to keep Reader around, because it wasn't making them much (if any) money directly, and it doesn't fit with a lot of other pieces of Google's plans going forward. As a result, and as App.net has started picking up steam at the same time, there has been a good bit of discussion about paying for the services one uses.

While paying for a service isn't a surefire guarantee that it won't go away, it certainly helps: <!--more-->paying customers are a much stronger and more dependable base on which to build a business than advertising dollars. A business can, in theory, get by on even relatively small customer bases if they're regular and reliable---it doesn't <em>necessarily</em> need all the network effects that create the large user bases required for advertising to work. (A social network like App.net<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> still needs <em>some</em> network effects, but <a href="https://alpha.app.net/dalton" title="Dalton Caldwell on App.net">@Dalton</a> and co. can get along just fine with 100,000 users. Twitter and Facebook would both be dead in the water with those kinds of numbers.) So lots of people have been thinking more about this, in large part because Google is forcing them to. This is a good thing---though not necessarily for Google, which has services you can pay for, but is largely driven by advertising money and acts accordingly, even on Android.

What is only  now starting to become obvious are some of the <em>other</em> effects of Google's decision to kill Reader. In particular, I'm intrigued by some of the ways that killing Reader may have a chilling effect on Google's ecosystem in general, especially since it's part of a broader pattern. Reader <a href="http://en.wikipedia.org/wiki/List_of_Google_products#Discontinued_products_and_services">isn't the first thing</a> Google has killed in the last couple years, and it won't be the last---if Feedburner survives the year, I'll be surprised; if it makes it to the end of 2014, I'll eat my hat.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> Add in the way it half-way releases products (<a href="http://en.wikipedia.org/wiki/Nexus_Q">Nexus Q</a>, I'm looking at <em>you</em>), and Google is starting to build a reputation of releasing or partially releasing projects and then killing them.

This isn't hurting Android, or mainstream usage of Google, or anything like that. It is, however, starting to make some folks in the early adopter crowd hesitate a bit when it comes to embracing Google. I'm seeing it crop up in <a href="http://arstechnica.com/gadgets/2013/05/android-4-3-google-babel-and-the-nexus-7-whats-in-store-for-google-io/?comments=1&amp;post=24476131#comment-24476131">comments</a> here and there on the web; I'm seeing it in conversations with people in person; I'm seeing it in the way everyone reacted to the announcement of Google Keep.<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> In short: people are starting to mistrust Google's long-term support of their non-top tier projects. Android isn't going anywhere, and neither is search. Android@Home, Google's home automation program? You know, the one theoretically associated with the Nexus Q? I'm going to call that a great big ::shrug:: and move on; I wouldn't invest in one until it had at least a couple years of solid history and looked like a solid bet for Google to keep supporting.

In other words, Google's actions in one area---even its free/advertising-supported services area---can have an impact on how folks view the company as a whole. This lesson deserves to be taken to heart by folks across the tech industry, not just Google or other massive players. (The other big players, i.e. Apple, Microsoft, Samsung, Facebook, Twitter, etc. certainly need to get this point. But it's applicable to <em>anyone</em> playing in this market space, and really in <em>any</em> market space.) We live in a world in which it is difficult for brands to make people forget the past. Every action is indelibly recorded in Wikipedia history, not to mention the hundreds or thousands of little pieces scattered across the web---pieces like this one---that fit into someone somewhere's narrative about what a company is like.

If too many early adopters start thinking, "You know, I don't trust Google's new product announcments,"<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> the result is that those early adopters stop picking up those new products. They start behaving like other, more ordinary consumers for that company: waiting and seeing till they hear from other users of the product whether it's worth their time. The problem, for tech companies, is that without the early adopter base, there usually aren't any other users to give that feedback. If you're Google or Apple or someone else that size, you can float through quite a few of these, because your sheer scale and popularity give you the financial and social capital to get through some mistakes. If you're a smaller company, you probably don't have the financial capital, and you certainly don't have the social capital.

As a result, you have to be much more prepared to back up your services. Don't launch things you're not really committed to supporting. Don't launch things that you can't pay for. If you launch a free service, you'd better have a good reason to do so, and you'd better not be planning on supporting it with ad revenues. Building interest and goodwill is great. But ask <a href="http://www.theverge.com/2013/3/4/4054634/musics-pay-what-you-want-pioneers-sour-on-giving-away-songs">Radiohead</a> what it's like to give away things for free, hoping people will like it enough to support you financially. Have a viable financial model in place (read: let people pay you for something valuable), and then back your product to the hilt. Doing anything else is a recipe for distrust, and while Google can afford it---at least for now---you can't.

Oh, and if you actually are Google, would you <em>please</em> stop killing things people like, even if that means letting them pay for those services?

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Yes, I know ADN is more than a social network. It is, however, not <em>less</em>, and most of its users---me included---primarily use it as such, at least at the moment.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
I don't wear hats. But if you make me a chocolate hat, I'll eat that.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

<li id="fn:3">
This is not---just for the record, because people <em>will</em> misunderstand me if I don't say it---any sort of doom and gloom piece on Google. It's just some observations about how these kinds of decisions ripple through people's perceptions of a company. Google is and will presumably continue to be doing just fine.&#160;<a href="#fnref:3" rev="footnote">&#8617;</a>
</li>

<li id="fn:4">
I repeat: this is <em>not</em> a prediction. It's an example.&#160;<a href="#fnref:4" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1050</wp:post_id>
		<wp:post_date>2013-05-13 10:22:52</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>trust-payment-value-and-ecosystems</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="app-net"><![CDATA[App.net]]></category>
		<category domain="post_tag" nicename="ecosystems"><![CDATA[ecosystems]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="post_tag" nicename="google-reader"><![CDATA[Google Reader]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="trust"><![CDATA[trust]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-05-13 14:22:52]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Adventures in CSS3 &amp; Typography</title>
		<link>http://2012-2013.chriskrycho.com/web/adventures-in-css3-typography/</link>
		<pubDate>Sat, 28 Jan 2012 15:00:16 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://trentwalton.com/" target="_blank">Trent Walton</a> is one of my favorite developer/designer types. In a class he taught at a recent conference, he challenged people to make good use of the best CSS3 and modern Javascript tools to reproduce movie poster titling with nothing but web interface tools. You'll have to see the results to believe them. My favorite? Toy Story. <a href="http://trentwalton.com/2012/01/27/new-adventures-2012/" target="_blank">New Adventures 2012&rarr;</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2012-01-28 09:00:16</wp:post_date>
		<wp:post_date_gmt>2012-01-28 15:00:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-css3-typography</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css3"><![CDATA[CSS3]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>On pirates and piracy</title>
		<link>http://2012-2013.chriskrycho.com/web/on-pirates-and-piracy/</link>
		<pubDate>Tue, 31 Jan 2012 21:43:40 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[Mike Loukides hits <a href="http://radar.oreilly.com/2012/01/on-pirates-and-piracy.html" title="On pirates and piracy @O'Reilly Rader" target="_blank">most of the right notes</a> (pun intended) over at O'Reilly Radar, even if his ending goes a little wide of the mark:

<blockquote>So the notion that creativity can be owned, and that any use of someone else's ideas requires compensation, is nothing but an attempt to steal all of creativity. Whoever can pay their lawyers the most wins. Anyone smell pirates in the room? I am not willing to sacrifice this generation's great artists on the altar of Hollywood. I'm not willing to have the next Bach, Beethoven, or Shakespeare post their work online, only to have it taken down because they haven't paid off a bunch of executives who think they own creativity.</blockquote>

<p class="right"><a href="http://radar.oreilly.com/2012/01/on-pirates-and-piracy.html" target="_blank">On pirates and piracy&rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2012-01-31 15:43:40</wp:post_date>
		<wp:post_date_gmt>2012-01-31 21:43:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>on-pirates-and-piracy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="economics"><![CDATA[economics]]></category>
		<category domain="post_tag" nicename="intellectual-property"><![CDATA[intellectual property]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_tag" nicename="pipa"><![CDATA[PIPA]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="public-policy"><![CDATA[public policy]]></category>
		<category domain="post_tag" nicename="sopa"><![CDATA[SOPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Syntax is easy. Languages are a bit harder...</title>
		<link>http://2012-2013.chriskrycho.com/web/syntax-is-easy-languages-are-a-bit-harder/</link>
		<pubDate>Tue, 31 Jan 2012 22:23:26 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="editorial">(A note to would-be designers and developers, and to myself.)</p>

You don't really know a language till you know the library and the tools. Syntax is easy.

<!--more-->Look: any trained C/C++/Java developer can pick up the syntax of Javascript or PHP in no time flat. They're just not that different; the hardest adjustments are to using an interpreted language instead of a compiled language, and to dynamic typing instead of static typing. Even with a language a bit further out - Python or Ruby, for example - the syntax remains relatively straightforward to learn.

But here's the trick: a language is more than syntax. Think about it: English is more than its grammar, and indeed more than merely its vocabulary. Learning English requires first learning its vocabulary and its grammatical rules. Mastering English, however, requires learning far more than simply words and the basics of how they fit together. It involves gaining a knowledge of connotation as well as denotation. It requires understanding of culture. It demands grasping the ways that different words and phrases and approaches are appropriate (or not) in various contexts.

The same is true for a programming language. It is one thing to know how to construct a <code>foreach</code> statement in PHP. It is another thing entirely to recognize that sometimes you're better using a library function that does the same thing you want your loop to do, only faster and better. You have to learn the libraries, and in some cases you have to learn the standard tool sets.

Learning Ruby is one thing. Putting it in practice in the web development community means learning more than Ruby or even its standard library though; the vast majority of Ruby web development these days seems to be using the Rails framework. Similarly, you can have a good handle on PHP and even know its library well - but you'll be much more employable if you also know the Zend framework, because while it's not quite an industry standard, it's close.

Even back in the world of static software, this is true. Good luck becoming a top-notch C++ programmer in a short time. Learning the way C++ approaches object-oriented development is simple. Learning the enormous library will take longer. Getting a good handle on templates? You'll be at that for a <em>while</em>.

This is the thing so many people fail to understand: software engineering (and even programming, which is only a subset of engineering) is more than knowing some syntax or the basics of logic. Being a really good developer - being the kind of developer I hope to be someday - requires having a good handle on the language and its library, its strengths and its quirks, the primary tool kits and the corner cases. It is not enough to be able to regurgitate the syntactical rules for the language; best practices come to be over time as people discover both the benefits and the costs of various approaches. The most obvious solution may also end up being the <em>wrong</em> solution.

The only way to gain this knowledge is by immersing yourself in using it <em>and</em> by studying. You can either repeat the same mistakes everyone else has already made, or you can put forth the effort to educate yourself so you can avoid them. You can either content yourself with a superficial understanding of the language, or you can dive in and really get a handle on how it works and what really makes it tick.

Shockingly, these are the same realities that apply to learning <em>any</em> new subject. No one ever mastered the piano, or became a skillful tennis player, or really succeeded at gaining any skill without putting in significant time and effort. If one of the major benefits of the modern web design and development is that just anyone can jump in and start doing it, one of the problems is the same reality - because most of the people who jump in and start are not willing to do the hard work to actually become <em>good</em> at their field. They don't want to study, they don't want to dig in to the <em>hows</em> and <em>whys</em> as well as the whats of any given discipline. And accordingly, they just aren't very good.

If you're not prepared to work hard, be prepared to always be a third-rater. If you want to do well, be prepared to work hard. Stop thinking you know a language because you know the syntax. Stop thinking you know design principles because you've read a few articles. Stop thinking you don't need to study any more. You <em>always</em> need to study more.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2012-01-31 16:23:26</wp:post_date>
		<wp:post_date_gmt>2012-01-31 22:23:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>syntax-is-easy-languages-are-a-bit-harder</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="engineering"><![CDATA[engineering]]></category>
		<category domain="post_tag" nicename="hard-work"><![CDATA[hard work]]></category>
		<category domain="post_tag" nicename="languages"><![CDATA[languages]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="web-applications"><![CDATA[web applications]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Jerrad Genson]]></wp:comment_author>
			<wp:comment_author_email>jerradgenson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.181.149.24</wp:comment_author_IP>
			<wp:comment_date>2012-02-01 12:12:11</wp:comment_date>
			<wp:comment_date_gmt>2012-02-01 18:12:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Like most skills worth knowing, software development takes time and dedication to master. Indeed, Peter Norvig wrote in <a href="http://norvig.com/21-days.html" title="Teach Yourself Programming in Ten Years" rel="nofollow">Teach Yourself Programming in Ten Years</a>, about the "How to Learn Language X in N Days" fad, that "There are no books on how to learn Beethoven, or Quantum Physics, or even Dog Grooming in a few days", and "the book can only be talking about a superficial familiarity, not a deep understanding. As Alexander Pope said, a little learning is a dangerous thing."

And so it is. I know people in managerial positions at software companies who make key development decisions, without the experience of having ever written a program of any significance in their life (but they took a class over C in college! ...or was it C++?).  Need I even mention what usually becomes of the projects these people manage? As the software industry has taught us, time and time again, there are no shortcuts worth taking here.

But there are a few points to which I digress.

"You don’t really know a language till you know the library and the tools. Syntax is easy."

Certainly, vague familiarity of a language's syntax does not constitute a genuine understanding of the language. But what does it mean to know the library and tools? Must one memorize every class in the standard library to know Java? Are Tkinter, wxPython, Django, etc. all required to know Python? 

Not really. In fact, Eric Raymond said that "web application frameworks like RubyOnRails, CakePHP, Django may make it too easy to reach a superficial sort of understanding that will leave you without resources when you have to tackle a hard problem, or even just debug the solution to an easy one" (<a href="http://www.catb.org/~esr/faqs/hacker-howto.html#skills1" title="How To Become A Hacker" rel="nofollow">How to Become a Hacker</a>). Now, Ramond wasn't advocating that software developers should forgo web application frameworks, or reinvent the wheel all the time; he was talking specifically about learning to program. "A hacker", he wrote, "cannot approach problem-solving like a plumber in a hardware store; you have to know what the components actually do". 

What separates excellent programmers from mediocre programmers is not the number of tools they know, or library functions they've memorized. Perhaps the most relevant quote from Raymond's essay is this: "You need to learn how to think about programming problems in a general way, independent of any one language. To be a real hacker, you need to get to the point where you can learn a new language in days by relating what's in the manual to what you already know." This is an interesting assertion; maybe it's languages that are easy, and programming that's a bit harder. Mastering the core programming concepts - the language paradigms, idioms, algorithms, data structures, and design patterns - is much more important than mastering the languages themselves. 

The most recent language I learned was OCaml. When I developed my first non-trivial program in OCaml, I found myself reaching for the library quite often. I didn't think anything of it at the time, but I hadn't studied OCaml's library enough to even become familiar with what was in it. I've learned enough languages that I know what functions and classes I can expect to find in a standard library. In other words, I know when it's appropriate to reach for a language's library, and when it isn't. The hard part about learning OCaml wasn't how to make good use of the library, it was the concepts the language employed that I wasn't familiar with - pattern matching and the Hindley-Milner type system. The same thing applied when I was learning ANTLR; since I was already familiar with similar tools, and had written a top-down recursive descent parser by hand, learning another LL parser generator wasn't too difficult.  

Don't misunderstand me, language is important, and mastering every detail can be valuable. I program much faster in Python than I do in OCaml, largely because I rarely have to use the reference manual in Python. But programmer productivity is not nearly as important as knowing how to write reliable, maintainable code, and I learned neither skill from studying Python's library.

Regardless, your main point about studying the skills you use was spot on, and very well-stated. The software industry is massive. There are many ways to apply programming knowledge, and my digressions may partially be a result of that - the specific niche that I cater to may be very different from what you do (for instance, I have never done much web development), and I enjoyed reading about your perspective.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328119931.1138";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.200</wp:comment_author_IP>
			<wp:comment_date>2012-02-01 12:29:20</wp:comment_date>
			<wp:comment_date_gmt>2012-02-01 18:29:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jerrad, thanks for the comment and the pushback. You're a far more seasoned and experienced developer than me, and your comments here have me thinking, which is good. I think you're absolutely right that the real skill is knowing when to pull out a library reference and when to just plain do it the hard way, because the hard way is sometimes the best (and sometimes the only) way to get it done.

I'll have to take a look at Raymond's essay, as it seems helpful and on point, as well.

I think you're absolutely right: being a good <em>programmer</em> has very little to memorizing library functions; speed and efficiency are not everything, and in fact may be very secondary concerns when put up against doing something <em>right</em>. Productivity isn't and shouldn't be our only concern. My point was more that seeing yourself as (much less selling yourself as) a really solid PHP developer when you don't know the library at all, but can turn out tons of toy scripts - this kind of knowing the syntax but not the <em>language</em> - is dishonest to yourself and to your customers. It's something I'm particularly sensitive to because I'm picking up freelancing and I'm trying very hard to be very honest about my strengths and my weaknesses with potential customers along the way. Really top-notch PHP developers know the libraries, tools, and frameworks. But, and this is where your point is essential, they also know when those are appropriate parts of the solution to a given problem, and <em>when they aren't</em>.

In that sense, then, there's a hierarchy at play here: syntax &rarr; language &rarr; programming. You really can't program without knowing <em>some</em> language. (A clarification is in order even there: you can certainly practice the logical and problem-solving aspects. I'm a tolerably decent developer not because of the depth of my software background but because my degree in physics taught me how to think and how to solve problems I didn't even understand when I first looked at them.) And to become skilled in a single language requires getting a handle on more than the syntax. But being a good programmer - being a good engineer - requires mastery of much more fundamental skills, skills that have far more to do with thinking about problems than about the knowledge set.

Thanks for commenting. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>35</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328120960.7078";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Jerrad Genson]]></wp:comment_author>
			<wp:comment_author_email>jerradgenson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.181.149.24</wp:comment_author_IP>
			<wp:comment_date>2012-02-01 13:52:22</wp:comment_date>
			<wp:comment_date_gmt>2012-02-01 19:52:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chris, I appreciate your response, and thank you for fixing my links. Eric Raymond and Paul Graham's programming essays have strongly contributed towards my growth as a software developer. I highly recommend them. 

I can understand and sympathize with your frustration; as an honest person, competing with dishonest people for development contracts (or jobs) is a sobering experience. When I was a hiring manager for my company,  I interviewed all kinds of experts who couldn't pass a basic programming exam, in any language. More often than not, their code wouldn't even compile. I imagine the problem is worse with contract jobs.  Knowing the tools you work with is very important - I don't mean to imply that it's not. There is something to be said for the rare programmer who has truly mastered the language he's coding in. Incidentally, I know the syntax of many languages, but I only list languages on my resume that I know really well. For example, I used PHP in a CS class when I was an undergrad, but I don't feel that I'm proficient enough with PHP to say that I know it. For the languages I do list, I indicate my level of proficiency, and briefly describe the projects I've worked on with them.

You summarized my point well with your hierarchy. That is the spirit of what I was getting at. I think programming is a lot like playing the piano; a lot of people can do it, but not many do it well. And on a final note: I've learned that there is very little correlation between skilled programmers and degreed programmers. One of the highest scores on my programming exam was achieved by someone who didn't have a CS degree. So if that bothers you, it really shouldn't.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328125942.7553";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.200</wp:comment_author_IP>
			<wp:comment_date>2012-02-01 14:32:01</wp:comment_date>
			<wp:comment_date_gmt>2012-02-01 20:32:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I read one while on a break (and a few other articles linked from it and related to it), and will read the other this afternoon. Very good stuff.

Because of the enormous amount of work out there for web developers, there is an equally large number of people trying to get work in that area. Some of them are like me - hard working and dedicated to learning their craft well. Others are basically con artists, who know little more than the letters they put on their resum&eacute;. When you have lots of experience, that distinguishes you from the masses, but when you don't, well... my standing assumption at this point is that my honesty about my comparative newness will pay off, especially when combined with the effort to actually keep getting better. The trick, though, is getting those jobs in the first place. I've done a fair bit of personal, free, and low-cost work over the last year to just be in a position where I honestly feel like I can put Javascript and PHP on my resum&eacute;... but then I immediately need to clarify my skill level. It's a catch 22, unfortunately, although one that the next 6 months should help eliminate, as I now have contract work that is improving my skill and knowledge dramatically.

It doesn't bother me being an outsider. It does mean I have had to work harder to get up to speed since getting out of college, but I actually am very glad that I have a physics degree and not a CS/CE degree. The training in thinking I got there is invaluable, and I'm certainly not pigeonholed into any particular role. Costs and benefits. In my case, I wouldn't trade that physics degree for anything. (But I do learn an awful lot from my degreed colleagues!)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328128321.9077";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Jerrad Genson]]></wp:comment_author>
			<wp:comment_author_email>jerradgenson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.181.149.24</wp:comment_author_IP>
			<wp:comment_date>2012-02-01 14:50:33</wp:comment_date>
			<wp:comment_date_gmt>2012-02-01 20:50:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really meant something more along the lines of "don't let it discourage you from pursuing a career in software". Of course, there is no reason a physics degree should bother you. In fact, having knowledge of other industries may help you apply your software skills, and many techniques in computer science were inspired by solutions to problems in non-CS fields. My degree wasn't solely in computer science, and I'm glad it wasn't. Diversity is definitely a good thing here. 

If you enjoyed Raymond's essays, you may want to take a look at these as well: http://www.paulgraham.com/articles.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328129433.8963";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.201</wp:comment_author_IP>
			<wp:comment_date>2012-02-01 14:51:31</wp:comment_date>
			<wp:comment_date_gmt>2012-02-01 20:51:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the encouragement. I'll definitely take a look at that essay later!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>39</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1328129491.048";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Giving up</title>
		<link>http://2012-2013.chriskrycho.com/web/giving-up/</link>
		<pubDate>Tue, 07 Feb 2012 13:19:42 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[I finally gave up on my work laptop's default keyboard and brought my low-profile Apple keyboard from home. So much happier this way. Seriously: I can't even type correctly on the HP Compaq keyboard, the response is so mushy. I end up capitalizing the second letter of each capitalized word almost without exception. This is simply not a problem on any quality keyboard. If you want to know the differences between a cheap laptop and a good laptop, this is one of the big ones. Right up there with trackpad quality (and size!), and whether the edged of computer attempt to kill you by slitting your wrists. Ugh.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2012-02-07 07:19:42</wp:post_date>
		<wp:post_date_gmt>2012-02-07 13:19:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>giving-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
		<category domain="post_tag" nicename="ergonomics"><![CDATA[ergonomics]]></category>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Introducing: Ligatures-plus.js</title>
		<link>http://2012-2013.chriskrycho.com/web/introducing-ligatures-plus-js/</link>
		<pubDate>Tue, 07 Feb 2012 14:39:17 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[A few months ago I ran across Chip Cullen's absolutely fantastic <a href="http://chipcullen.com/ligatures/" target="_blank">ligatures.js</a> - a very simple jQuery function that manually replaces character pairs or triplets with their corresponding unicode ligature. There was just one problem: to use the function, you had to manually test each of the characters you wanted to use against the target font. This is potentially a <em>lot</em> of work, especially if you have multiple custom fonts on your page. <!--more-->

So I built a wrapper that tests each of a user-selected set of ligatures against the font in a user-specified set of elements!

<h3>Get it & use it</h3>
Enabling the script on your site is straightforward. You'll need jQuery running; you can download it <a href="http://jquery.com/" title="jQuery.com" target="_blank">here</a> or use one of several content delivery networks - <a href="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" target="_blank">Google</a> (<a href="http://code.google.com/apis/ajaxlibs/documentation/index.html#jquery" target="_blank">Documentation</a>), <a href="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.1.min.js" target="_blank">Microsoft</a> (<a href="http://www.asp.net/ajaxlibrary/cdn.ashx" target="_blank">Documentation</a>), or <a href="http://code.jquery.com/jquery-1.7.1.min.js" target="_blank">jQuery CDN</a> - if you'd prefer not to host it on your own site.

Once you have jQuery running, include the ligatures-plus.js file. You can get it here:

<ul>
<li><a href="http://v4.chriskrycho.com/downloads/lig/ligatures-plus.js" target="_blank">Development version</a></li>
<li><a href="http://v4.chriskrycho.com/downloads/lig/ligatures-plus.min.js" target="_blank">Minified version</a></li>
<li><a href="http://code.google.com/p/ligatures-plus/" target="_blank">Google Code</a> (with SVN <a href="http://code.google.com/p/ligatures-plus/source/checkout" target="_blank">repository</a>)</li>
</ul>

<h4>General usage</h4>
Once you have included the file, you'll just need to call the new jQuery function, presumably after the page has loaded. A typical usage might be as follows:

<pre lang="javascript">$(document).ready() function({
   $().ligatureTest();
});</pre>

Note that by default, the script checks against <em>all</em> available unicode ligatures. If you want to check against a subset, you can change the value of <code>var WHICH_LIGATURES</code>. Available options are <code>COMMON</code> (ff, fi, fl), <code>RARE</code> (fff, ffi, ffl, ij, IJ, st), and <code>ALL</code> (all of the above). 

You'll also want to set the elements to run against. In the same section, set <code>var ELEMENT = '[comma-separated list]'</code> for the elements you want to use ligatures on.

<h4>Typekit</h4>
Because the content may be loaded before Typekit or Google Fonts finish loading the fonts, it's in your best interests to delay running the test until all your fonts have loaded. Gladly, Typekit and Google <a href="http://blog.typekit.com/2010/11/11/font-events-using-javascript-callbacks/" title="Font events: Using JavaScript callbacks @Typekit blog" target="_blank">have made it easy</a> to trigger functions on a webfont load event. Just run the ligature function in the handler for the Typekit font active event (as well as inactive, if you want), like so:

<pre lang="javascript">try {
   Typekit.load({
      active: function() {
         $().ligatureTest();
      },
      inactive: function() { ... }
   });
} catch(e) {}
</pre>

<h3>How it works</h3>
I borrowed heavily from Chengyin Liu's work on <a href="http://chengyinliu.com/whatfont.html" target="_blank">whatfont.js</a>. The script creates a canvas, renders the ligatures in both the user-specified font and the default system serif/sans-serif font and compares them. If the system font ligature does <em>not</em> match the user-specified font, the ligature is rendered; otherwise it is ignored. At the end of the test, the canvas is removed.

<h3>Known issues</h3>
<h4>Flash when text restyles</h4>
Because the script is replacing HTML content, there is a flash similar to the one that occurs when loading a web-font (so you may actually get two flashes).

<h4>Changing HTML internals</h4>
If your selectors are too broad, you can mess up the internals of HTML. For example, if you run the script to include paragraph content, any link is subject to revision. For example, if you have a link like <code>&lt;a href="#first"&gt;link&lt;/a&gt;</code>, the "f<span style="display:inline-block;width:0;visibility:hidden;">&nbsp;</span>i" in first may get converted to "&filig;" instead. The workaround now is to only use elements that do not have internal links or other HTML content that will get broken by the substitutions. Also, you can wrap your anchors around the tags to which you wish to add ligature support.

Obviously neither of these are optimal; I hope to use some pattern matching to prevent this issue in the future, but it's a bit tricky because of some of the limitations in Javascript's regular expression set. The lack of lookbehinds is particularly vexing in situations like this; it forces you to use negative lookaheads instead.

<h4>Default system fonts</h4>
By dint of the way the script works, you will <em>not</em> be able to render ligatures in the system default serif or sans-serif fonts. Unfortunately, I have yet to figure out a good way around this, because the system default fonts vary widely - they're different on Windows, Mac, and Linux. Without doing some sort of additional processing involving OS sniffing (something I'd prefer to stay far away from), I have not yet discovered any good way to render ligatures in those fonts reliably.

<h4>Internet Explorer</h4>
Internet Explorer support is lacking at this point for all versions before IE9. Unfortunately, it doesn't look like there will ever be a solution for this one. No older version of IE supports the canvas element, and the one project that aimed to deliver canvas support stalled or got stuck on some of the problems, one of the biggest being rendering fonts in the generated canvas elements. The function degrades gracefully, however: it simply won't display <em>any</em> ligatures, so the page will look normal to the user.

<h4>Font families</h4>
The last potential stumbling block is <em>size</em>. The ligatures file itself is small, but font sets that actually include ligatures are <em>not</em>. Many of the fonts supplied by Typekit include two versions of their character set - one usually has ligatures and alternate glyphs; the other is the basic set. The extended set is often five to ten times larger than the other. The same will be true if you're using @font-face embedding.

For that reason, you'll want to be quite particular about which fonts and which elements you actually care about. On this site, for example, I'd love to have <em>all</em> the text supported, and I could: the fonts I've chosen all support ligatures. Unfortunately, if I included the extra character sets for all the headings and paragraphs, the font files would be over 2.5Mb, and that's just much too large. I'm probably pushing it as is with support for just the headings.

<h4>Reporting issues</h4>
If you find a bug, please let me know by sending me an email: <a class="email-link web" title="web|@|chriskrycho.com">chriskrycho.com @ web</a>.

<h3>The future</h3>
<h4>My work</h4>
The first thing I want to do is fix this so that whatever tags are passed to the jQuery object are the tags used to pick ligatures. I may also add an optional parameter to the function to allow users to specify which ligatures to test for more easily. Once I have those things done, I'll think about turning into a full-on jQuery plugin, as well as potentially creating Wordpress and Blogger plugins for other, less technically savvy people to use.

At some point, I hope to add create some events that will prevent a flash from substituting the text, similar to the way <a href="http://blog.typekit.com/2010/10/29/font-events-controlling-the-fout/" target="_blank">Typekit does</a> for loading webfonts. (As an aside, you can skip this problem if you <em>are</em> using Typekit's events; the code I supplied above shouldn't have this issue.)

<h4>Browser updates</h4>
Within the next two to three years, I hope to see the need for this script largely disappear. Firefox 4 and later already have some basic support to render OpenType font variants including ligatures (using <a href="https://developer.mozilla.org/en/CSS/-moz-font-feature-settings" target="_blank"><code>-moz-font-feature-settings</code></a>). Hopefully Webkit (both Safari and Chrome), IE, and Opera will all add support in the near future as well, at which point this tool can be happily retired.

Regardless of how the rendering technology develops, size constraints will still be an issue. I hoped that over the next few years, font providers will start enabling finer-grained control over which characters are included in the set. In my case, the <em>only</em> additional characters I am interested in right now are ligatures... but I get nearly a full megabyte worth of extra characters beyond that just to get them. Hopefully Typekit, Google Fonts, FontFont, and other font CDNs will take note, as will publishers of web font families. Optimally, web designers and developers should have fine-grained control - right down to the individual character.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2012-02-07 08:39:17</wp:post_date>
		<wp:post_date_gmt>2012-02-07 14:39:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-ligatures-plus-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="ligatures"><![CDATA[ligatures]]></category>
		<category domain="category" nicename="tools-posts"><![CDATA[Tools]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ligatures-plus-js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Introducing: Ligatures-plus.js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[ligatures]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Introducing a jQuery script that tests each font on your site and displays the supported ligatures. Inspired by Chip Cullen and Chengyin Liu.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>success at the cost of my children is not success</title>
		<link>http://2012-2013.chriskrycho.com/web/success-at-the-cost-of-my-children-is-not-success/</link>
		<pubDate>Thu, 09 Feb 2012 14:00:16 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=225</guid>
		<description></description>
		<content:encoded><![CDATA[I read Jeff Atwood's blog regularly. He's a great developer, has some great insights into technology, and he's an interesting writer. Of everything I've seen of his, though, I think <a href="http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html" target="_blank" title="Farewell Stack Exchange">this post</a> of his yesterday is the most important he's ever written.
<blockquote>You may have more discipline than I do. But for me, the mission is everything; I'm downright religious about it. Stack Overflow and Stack Exchange have been wildly successful, but I finally realized that success at the cost of my children is not success. It is failure.</blockquote>

He's right. Too many business and engineering types - especially men - think they'll find lasting satisfaction in their jobs. Too many answers to deathbed questions point the other way, though. No one ever says, "I wish I had worked more and spent less time with my family."
<span class="right"><a href="http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html" target="_blank">Farewell Stack Exchange &rarr;</a></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2012-02-09 08:00:16</wp:post_date>
		<wp:post_date_gmt>2012-02-09 14:00:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>success-at-the-cost-of-my-children-is-not-success</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[family]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="work"><![CDATA[work]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Death to vendor prefixes!</title>
		<link>http://2012-2013.chriskrycho.com/web/death-to-vendor-prefixes/</link>
		<pubDate>Wed, 08 Feb 2012 14:00:37 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=241</guid>
		<description></description>
		<content:encoded><![CDATA[In the last few years, there has been an explosion of development in the HTML and CSS specs, much of it driven by browser innovation. As early as 2007, Apple began pushing out vendor-specific prefixes to support CSS properties not yet in the open specification. Other browser developers have followed suit, so that there are now each of <code>-o</code> (Opera), <code>-ms</code> (IE9+), <code>-moz</code> (Mozilla/Gecko rendering engine), and <code>-webkit</code> (Safari and Chrome). <!--more-->

Early on, a number of commentators suggested that this was a bad idea, that it would lead back down a nightmarish path that web design has been down once before. In the late 1990s, websites were designed specifically for Netscape or Internet Explorer. Then, after IE took over and had 95% market share, it had an implementation that did not honor the ultimate form of the CSS2 and CSS2.1 specs. The result was another "solution" that proved to be less than helpful: Quirks Mode.

In both cases, many users chose to design the website to work as effectively as possible for one specific audience, or relying on quirks to achieve specific ends. In the case of Quirks Mode specifically, a feature that was designed to allow graceful degradation ended up being used in exactly the opposite fashion. The result was that all other browsers then had to make a choice between the actual standard (in which case these sites are left in a ghetto) and the <i class="language">de facto</i> standard created by widespread usage of these particular implementations.

Thankfully, aggressive evangelism for conformity with the specs over the last few years has finally started to put a dent in these practices. And then <code>-webkit</code> happened.

When these vendor-specific prefixes were proposed, the intent was to allow browsers to implement proposed elements of the new CSS3 specification, or experimental features that might someday become a part of a spec if they were successful. Historically minded thinkers suggested - rightly, as it turns out, though I disagreed at the time - that the result would be people relying on these for basic behavior of their sites. The responsible designers all protested that the implementations were explicitly created in a way that would encourage using them only for <a href="http://www.alistapart.com/articles/understandingprogressiveenhancement" title="read about it @A List Apart" target="_blank">progressive enhancement</a> or <a href="http://webtips.dan.info/graceful.html" title="read about it @Dan's Web Tips" target="_blank">graceful degradation</a>. (The age of that second link should make it clear: this is not a new battle.)

The skeptics just pointed back at Quirks Mode. The good designers carried the day. Fast forward a few years, and we're now in an era where people are designing iPhone-specific websites relying heavily on <code>-webkit</code> prefixes. Suddenly, we're back in the world of the late 90s, wondering what happened to the hard-fought victory of standards and universal accessibility. The skeptics were right. People are lazy, and if something works in WebKit, well, they'll use it. Even if that breaks the open web.

Those same lazy designers and developers are already applying the same (lack of) principles to responsive design, even further breaking the web. And this with an approach that was <a href="http://www.alistapart.com/articles/responsive-web-design/" title="read about it @A List Apart" target="_blank">proposed</a> as the very <em>definition</em> of progressive enhancement!

The long and short of it is: people are lazy, people are lazy, people are lazy. Especially in the web design world. There are hundreds of thousands of designers and developers out there, and many - perhaps even a majority - of them don't care about standards. They care about what works, and what works fastest.

There is hope, though, because the browser vendors recognize the problem, as do some of the influential voices that have helped fight this battle before. A few articles that are worth your time:

<ul>
<li><a href="http://www.brucelawson.co.uk/2012/reading-list-mobile-development-approaches/" target="_blank">Reading List: mobile development approaches</a> - Bruce Lawson, who highlights the developing schism in this area and has a couple of helpful links. The two comments before mine on the article are also on target.</li>
<li><a href="http://www.css-101.org/articles/the_power_of_the_web_is_in_its_universality/strive_to_make_content_accessible_to_all.php" target="_blank">Did we lose track of the big picture?</a> - Thierry Koblentz. This is one of those links, and though I'd quibble with how he uses "responsive design," he's right that people are misusing and abusing the concept in precisely the way he outlines.</li>
<li><a href="http://lists.w3.org/Archives/Public/www-style/2012Feb/0313.html" target="_blank">CSS Working Group Minutes</a> - scroll down to or search for "Vendor Prefixes." This is a long read, but well worth your time. The long and short of it? Prefixes are going to be deprecated <em>hard</em> after their necessity is ended, to keep users from relying on them. And that's a very, very good thing.</li>
</ul>

Hopefully, this time we'll learn the lesson. Any tool that can be abused <em>will</em> be abused. The best developers and designers will follow best practices; that's part of what makes them the best. The challenge is everyone else. The only way to keep the crowd from breaking the open web is to make best practices easy and everything else painful and hard, because most people will always take cheap and easy over right.

A big hat tip on all of this to Mat "Wilto" Marquis (<a href="https://twitter.com/#!/wilto" target="_blank">@wilto</a>), whose <a href="https://twitter.com/#!/brucel/status/166892158798934017" target="_blank">retweet</a> got me rolling.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2012-02-08 08:00:37</wp:post_date>
		<wp:post_date_gmt>2012-02-08 14:00:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>death-to-vendor-prefixes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browsers"><![CDATA[browsers]]></category>
		<category domain="post_tag" nicename="css"><![CDATA[CSS]]></category>
		<category domain="post_tag" nicename="graceful-degradation"><![CDATA[graceful degradation]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="progressive-enhancement"><![CDATA[progressive enhancement]]></category>
		<category domain="post_tag" nicename="standards"><![CDATA[standards]]></category>
		<category domain="post_tag" nicename="vendor-prefixes"><![CDATA[vendor prefixes]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Responsive Design, Server-Side Feature Detection, and a Big Mess &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/posts/responsive-design-server-side-feature-detection-and-a-big-mess/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-02-23 08:01:57</wp:comment_date>
			<wp:comment_date_gmt>2012-02-23 14:01:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] There may be times when user-agent detection is an appropriate strategy on the back end &#8211; I&#8217;m not sure what they might be, but I&#8217;m willing to allow that there are situations in which it may make sense. However, Olsen was explicitly talking about front-end design, albeit from the perspective of back-end development. When someone starts talking about serving different content based on user-agent, I can&#8217;t see that working out well for users in the long run. Olsen himself may be a good enough developer to avoid doing stupid things with user-agent detection, but are all other back end devs equally disciplined? In other words, it may be just fine for him, but evangelizing for the practice may land us all in a world of trouble down the line. After all, it&#8217;s happened before. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>I can hardly wait</title>
		<link>http://2012-2013.chriskrycho.com/web/i-can-hardly-wait/</link>
		<pubDate>Sun, 12 Feb 2012 05:15:47 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=336</guid>
		<description></description>
		<content:encoded><![CDATA[I can hardly wait to invest in a new computer. Though my current machine has served me well these past five years - and though it is still in many ways superior to even a number of newer alternatives - I am looking forward enormously to the upgrade. Five years later, I will be doubling my computing cores (with faster cores, to boot), octupling my RAM (with higher throughput), quadrupling my total storage, and adding an SSD with all the speed improvements <em>that</em> promises.

In short, I'll be flying. It's going to be <em>fun</em> to push the machine and see just how far it will go and still perform well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2012-02-11 23:15:47</wp:post_date>
		<wp:post_date_gmt>2012-02-12 05:15:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-can-hardly-wait</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
		<category domain="post_tag" nicename="hardware"><![CDATA[hardware]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[i-can-hardly-wa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Introducing: Typekitify!</title>
		<link>http://2012-2013.chriskrycho.com/web/introducing-typekitify/</link>
		<pubDate>Mon, 13 Feb 2012 16:54:27 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=338</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Occasionally, I'll be reading a website and just wish I could use another, better font. I can, of course... I can go look up the element on the page that I want to change, use the developer tools to dynamically alter the page, and go back to my reading. This is a pain in the neck, though, and sometimes I want to use fonts that I don't necessarily have on my computer - like "Athelas," the font that <a href="http://www.readability.com/" target="_blank">Readability</a> uses to display its body text, and which they get using <a href="https://typekit.com/" target="_blank">Typekit</a>. <!--more--></p>

<p>Moreover, I realized that <em>lots</em> of people have the same issue, and lots of people might want to change the fonts on their page easily. So, I created this bookmarklet generator to do the trick for you. (A little later this week, I'll be putting up a similar generator that doesn't use Typekit, since you might be perfectly happy with the fonts on your own computer.)</p>

<p>From the permanent <a href="http://v4.chriskrycho.com/web/projects/typekitify/" title="Typekitify!" target="_blank">project landing page</a>:</p>

<p>To generate a Typekitify! bookmarklet, you need to have a <a href="https://typekit.com/" target="_blank">Typekit</a> account and create a kit with the fonts you want and the domain(s) you want to use. (If you're on a free account, you can only point at one website at a time.) Grab the Embed Code snipped from the Kit Editor and copy the part that looks like this:</p>

<pre lang="html4strict">http://use.typekit.com/[characters].js</pre>

Then click the "Using fonts in CSS" link in your Kit and copy the name it supplies for the font family field (you can add fallback fonts, if you so desire). Add font size and list the elements you want to apply the font to (you can be as specific as you like), and away you go!

<form class="generator" style="padding-top: 1.333em;">
   <fieldset>
      <legend><span class="italic">Generate Typekit bookmarklet</span></legend>
      <div>
         <label for="typekit_src">Typekit source:</label>
         <input id="typekit_src" name="typekit_src" type="text" placeholder="http://use.typekit.com/[characters].js"/>
      </div>
      <div>
         <label for="font_family">Font family:</label>
         <input id="font_family" name="font_family" type="text" placeholder="Athelas"/>
      </div>
      <div>
         <label for="font_size">Font size:</label>
         <input id="font_size" name="font_size" type="text" placeholder="18px" />
      </div>
      <div>
         <label for="dom_elements">Elements:</label>
         <input id="dom_elements" name="dom_elements" type="text" placeholder="p"/>
      </div>
      <div>
         <input id="submit" name="submit" type="submit" value="Generate bookmarklet" />
      </div>
   </fieldset>
</form>

<p>While the bookmarklet does not currently support attaching unique styles to different kinds of elements, you can generate multiple bookmarklets to achieve the same effect, and rename them to differentiate them. For example, if you wanted header elements to be in FF Meta Serif and paragraphs to be in Myriad, you might make an FFMetafy! and a Myriadify!.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2012-02-13 10:54:27</wp:post_date>
		<wp:post_date_gmt>2012-02-13 16:54:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-typekitify</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bookmarklet"><![CDATA[bookmarklet]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="tools-posts"><![CDATA[Tools]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Don&#039;t Kill Kittens</title>
		<link>http://2012-2013.chriskrycho.com/web/dont-kill-kittens/</link>
		<pubDate>Tue, 14 Feb 2012 15:05:29 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=352</guid>
		<description></description>
		<content:encoded><![CDATA[Turns out <em>lots</em> of people think <a href="http://v4.chriskrycho.com/web/posts/death-to-vendor-prefixes/" title="Death to vendor prefixes!">vendor prefixes</a> need to be used carefully if at all. <a href="http://www.alistapart.com/" target="_blank">A List Apart</a> is one of <em>the</em> authorities on web design practices. Lea Verou <a href="http://www.alistapart.com/articles/every-time-you-call-a-proprietary-feature-css3-a-kitten-dies/" title="Every Time You Call a Proprietary Feature “CSS3,” a Kitten Dies" target="_blank">writes</a>:

<blockquote>In our eagerness to use the new bling, we often forget how many people fought in the past decade to enable us to write code without forks and hacks and expect it to work interoperably. If you have been in this field more than a few years, you surely remember that it wasn’t always like this. The reason we now have this convenience is web standards, hard won in the Browser Wars.

You might be surprised to hear that web standards did exist during the Browser Wars too.</blockquote>

<p class="right"><a href="http://www.alistapart.com/articles/every-time-you-call-a-proprietary-feature-css3-a-kitten-dies/" target="_blank">Every Time You Call a Proprietary Feature “CSS3,” a Kitten Dies &rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>352</wp:post_id>
		<wp:post_date>2012-02-14 09:05:29</wp:post_date>
		<wp:post_date_gmt>2012-02-14 15:05:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-kill-kittens</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[CSS3]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="standards"><![CDATA[standards]]></category>
		<category domain="post_tag" nicename="vendor-prefixes"><![CDATA[vendor prefixes]]></category>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Upgrading Wordpress manually</title>
		<link>http://2012-2013.chriskrycho.com/web/upgrading-wordpress-manually/</link>
		<pubDate>Mon, 20 Feb 2012 18:31:32 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=374</guid>
		<description></description>
		<content:encoded><![CDATA[I was recently hired to do some back end work on <a href="http://www.christthekingfortworth.org/" title="Church of Christ the King (Fort Worth)" target="_blank">Church of Christ the King's website</a>. (Note that the site design is not mine.) In this case, the initial change I needed to make was small - trivial, even. However, I noticed as I made the change that the site was running WordPress 2.8.4. Unfortunately, that meant I was going to be upgrading WordPress manually. <!--more-->

For those of you (read: almost everyone) who doesn't keep track of WordPress releases, the software is currently at version 3.3.1; version 2.8.4 <a href="http://wordpress.org/news/2009/08/2-8-4-security-release/" title="2.8.4 Security Release blog post" target="_blank">was released</a> back in August 2009. I suspected - and confirmed with a little searching - that there is no direct upgrade path from 2.8.4 to 3.3.1. That's not a surprise; 2.8.4 is two and a half years old and five versions out of date.

There are two available paths for upgrading WordPress. First, you can automatically upgrade as each new version comes out. This is the easiest and generally the best practice: many version updates provide both better security and new functionality. The second option is to do the upgrade manually. Upgrading WordPress manually is not hard, <i class="language">per se</i>, just potentially headache-inducing if you don't do it carefully. In some cases, upgrading manually is the only option - as in this case, where the install was years out of date and the automatic upgrade path was no longer available within the application.

<h3>Potential pitfalls</h3>
There are a number of things that can (and will) go wrong in <em>any</em> upgrade:

<ul>
<li>Your theme may break.</li>
<li>Some plugins may break.</li>
</ul>

When performing a manual upgrade, however, things can get even more interesting:

<ul>
<li>You can lose data if you don't export a backup carefully ahead of time.</li>
<li>You will <em>lose</em> all plugins and associated data.</li>
</ul>

In this particular upgrade, I took care of some the sorts of problems that arise in an ordinary upgrade by creating a version of the site on my local test server and checking the theme. I noticed that the plugins had gone missing, but I mentally attributed this to being on a local install and moved on. My assessment was accurate, but ignored the fact that the conditions after upgrading the live site would be the same. WordPress keeps plugins around when automatically upgrading, but when upgrading manually, all plugins get deleted. Even if you include the plugins in WordPress' plugins directory when uploading the application files, the settings will be lost.

Thankfully, recovering the functionality of the website was fairly simple. The site was only using a few plugins, and I ended up replacing the old ones with slightly or dramatically better options.

<h3>Upgrading the hard way</h3>
Note that the safest way to perform manual upgrades is still incrementally, stepping from major release to major release. However, seeing as there were <em>five</em> major releases to go through (2.8.4 &rarr; 2.9 &rarr; 3.00 &rarr; 3.1 &rarr; 3.2 &rarr; 3.3), I decided to take a look at the theme. Since there were no major problems with the theme in relation to WordPress 3.3, it made sense to jump all the way at once.

There were other benefits to this approach, as well: for reasons beyond me, there were over 50 different themes and quite a few plugins installed, almost none of which were being used. The database was undoubtedly very messy and the site structure was a mess. Upgrading WordPress by doing a clean install eliminated all of that.

In general, I'd prefer <em>not</em> to do full removal and installations again. Upgrading this way is a last-ditch approach, though it was necessary in this case. It's much less of a hassle to follow the standard upgrade path, and whenever possible users should keep upgrading. That means that it's incumbent on theme and plugin authors to keep their themes up to date. It may also require replacing plugins, changing designs, or paying for maintenance to keep the site working correctly over time.

<h3>Lessons for everyone (but especially professionals)</h3>
Regardless, whenever possible, users should keep their installations up to date. That will make for better security and lower costs in the long run. For many clients, however, this will not be intuitive, especially in the world of bold prompts and automatic updates they are used to in their operating systems.

It also might behoove all online application developers to make their upgrade prompts a little more noticeable and a great deal more informative, WordPress included. In any case, the onus is on designers and developers to communicate with their clients, many of whom are non-technical, the benefits of keeping the software up to date and the potential costs of not upgrading it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date>2012-02-20 12:31:32</wp:post_date>
		<wp:post_date_gmt>2012-02-20 18:31:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-wordpress-manually</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<category domain="post_tag" nicename="wordpress-plugins"><![CDATA[WordPress plugins]]></category>
		<category domain="post_tag" nicename="wordpress-themes"><![CDATA[WordPress themes]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Upgrading]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Lessons learned about upgrading WordPress manually from version 2.8.4 to version 3.3.1, with tips on any major, non-automatic upgrade.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[93]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The Danger of Search Engine Optimization</title>
		<link>http://2012-2013.chriskrycho.com/web/the-danger-of-search-engine-optimization/</link>
		<pubDate>Tue, 21 Feb 2012 21:11:31 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=397</guid>
		<description></description>
		<content:encoded><![CDATA[I recently installed some search engine optimization plugins on the WordPress back end of this site. In the main, these are fairly simple tools with straightforward benefits. However, even in the first day of having them installed on my site, I recognized that there are some significant potential pitfalls in even having these tools present on my site. When every post has beneath it a tool evaluating the search engine efficiency of a given post, there is a significant danger of writing content to the search engines, instead of writing content to your audience. <!--more-->

Optimally, of course, the two would be one and the same, but the challenge for any search algorithm is to filter noise while finding good content. For a user, this means that the temptation to focus on being found can begin to trump the need to write good content <em>as good content</em>, for its own sake. When a site hits this point, the quality of its articles goes downhill in a hurry - and unfortunately, if the writers have become sufficiently skilled at playing the SEO game, their articles may not decrease in rank. Then it is the users that suffer.

The problem is that algorithms can only analyze signals, and accordingly they can be fooled. The last decade and a half of internet search engine history are a long, unarguable record of one simple truth: <em>whenever search engines get better at filtering spam, spammers get better at using the search engines' algorithms to get their content in front of users.</em>

Unlike email spam, a great deal of website spam isn't really illegal or false. It's simply badly written - but badly written in such a way as to effectively game the search engines. Motives for this vary, but usually have to do with advertising revenue or general business profits. Nothing wrong with that, as far as it goes, but it can get you in trouble in a hurry when it compromises your approach to content, and it leaves users with a bad taste in their mouths. They will come to dislike you and your site - not an optimal outcome. (Quick: how many people actually <em>like</em> about.com, and how many of you wish you never had to see a terrible article from that abominable sump in your search results again?)

The real danger in having an SEO tool staring me in the face is the temptation to constantly second-guess myself while writing, to think about the ways I can make the post searchable, rather than the ways I can make the post <em>valuable</em>. There is nothing wrong with using the tool; there is everything wrong with being used by the tool. The best way to take advantage of SEO analysis tools is to use them to tweak the post when you're done. Ignore it during the process of writing the post; use it as an editorial tool and not a director.

If there are small, simple ways to make a post or a page more searchable, why not? If there are ways to provide more meaningful descriptions for the search engine to display, why not? But the moment that the SEO tool dictates content, rather than simply helping optimize the content you would already be creating, you've got a problem.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date>2012-02-21 15:11:31</wp:post_date>
		<wp:post_date_gmt>2012-02-21 21:11:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-danger-of-search-engine-optimization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="search-engine-optimization"><![CDATA[search engine optimization]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Danger]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The real danger in having an SEO tool present while writing is the temptation to make the post searchable, rather than to make it valuable.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[81]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Responsive Design, Server-Side Feature Detection, and a Big Mess</title>
		<link>http://2012-2013.chriskrycho.com/web/responsive-design-server-side-feature-detection-and-a-big-mess/</link>
		<pubDate>Thu, 23 Feb 2012 14:00:43 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=408</guid>
		<description></description>
		<content:encoded><![CDATA[A couple days ago, Jason Gigsby (<a href="https://twitter.com/#!/grigs" title="@grigs on Twitter" target="_blank">@grigs</a>) highlighted <a href="http://www.dmolsen.com/mobile-in-higher-ed/2012/02/21/ress-and-the-evolution-of-responsive-web-design/" title="RESS, Server-Side Feature-Detection and the Evolution of Responsive Web Design" target="_blank">this post</a> by Dave Olsen on responsive design from the server-side. The biggest thing that caught my attention was his focus on user-agent detection for altering the delivery of content.

There is some sensible stuff in there; it's worth your time. In particular, I can see the value in delivering different kinds of resources to different targets, especially in the case of video or images, where resolution and bandwidth may be constrained. <!--more-->That's a big part of what is driving the <a href="http://www.w3.org/community/respimg/" title="W3 Community: Responsive Images" target="_blank">responsive <code>&lt;picture&gt;</code> discussion</a>, in fact. But a heavy emphasis or long-term reliance on user-agent detection rubs me the wrong way.

Front end designers and developers have in the last few years finally stopped relying on user-agent detection to make their sites behave in particular ways. That's a <em>good</em> thing; user-agent detection is often unreliable and finicky; it's certainly in a constant state of flux. That's only going to be more true as more mobile browsers allow users to set their user agent, and as browsers for mobile and desktops converge, <i class="language">a la</i> Chrome for Android.

There may be times when user-agent detection is an appropriate strategy on the back end - I'm not sure what they might be, but I'm willing to allow that there are situations in which it may make sense. However, Olsen was explicitly talking about front-end design, albeit from the perspective of back-end development. When someone starts talking about serving different content based on user-agent, I can't see that working out well for users in the long run. Olsen himself may be a good enough developer to avoid doing stupid things with user-agent detection, but are all other back end devs equally disciplined? In other words, it may be just fine for him, but <em>evangelizing</em> for the practice may land us all in a world of trouble down the line. After all, <a href="http://v4.chriskrycho.com/web/posts/death-to-vendor-prefixes/" title="Death to vendor prefixes!" target="_blank">it's happened before</a>.

Then I read through the discussion, and this line in <a href="http://www.dmolsen.com/mobile-in-higher-ed/2012/02/21/ress-and-the-evolution-of-responsive-web-design/#comment-2744" title="Ronan Cremin @xbs">Ronan Cremin's comment</a> stuck out:

<blockquote>A great mobile experience needs to be designed for mobile from the outset, not a rejiggered version of an existing site. Any mobilization solution that utilizes the same basic chunk of HTML delivered to desktop and mobile is missing an opportunity.
</blockquote>

The first half of that is quite right, of course; a great mobile experience <em>does</em> need to be designed for mobile from the outset, and rejiggering an existing site will never be optimal. (It is, I should note, still a good step in the right direction for websites whose proprietors can't afford an immediate full redesign.) I'm increasingly a proponent of the "mobile first" paradigm of design: I consider mobile from the very beginning of my design flow, and it's actually the first CSS layout I build. Media queries progressively enhance the functionality of larger screens just as other CSS properties progressively enhance the functionality of more capable browsers.

The second half of this quote runs right up against the same thing that was making me uncomfortable in Olsen's article, though. I <em>never</em> want to prevent a user from getting access to certain content simply because they're on a smaller screen (or an alternate format like a screenreader; it's too easy to overlook the accessibility concerns inherent in discussions like this). I <em>always</em> want to deliver the same content, however vast the differences in presentation.

There is no question that data can and often should be displayed differently to a user based on the size of their screen, their bandwidth, etc., especially in the case of web <em>applications</em> as opposed to ordinary websites. Reflowing the content, applying alternate styles more friendly to touch, finding ways to deal with perceived relative importance as proportions change - these are all good and even necessary ways of responding to the vast differences between a smartphone, a 15" notebook and a 27" 1080p monitor. Different contexts may demand different presentation - but we should always let the user get the same data.

Returning for a moment to the ongoing discussion of a proposed <code>&lt;picture&gt;</code> element, one of the concerns I raised in a comment that has since been raised by one of the leaders of the project is guaranteeing that the user <em>can</em> get to the highest resolution of the image, even if it's not the image originally loaded by the page. If I'm on my phone, I may want a site to save me bandwidth and time by loading a lower-resolution image that is appropriate to my screen. But I don't want this to prevent me from getting to that high-resolution image if I decide it would make a great wallpaper.

Schemes that rely on user-agent detection, instead of fixed standards, seem to run a much greater risk of preventing agnostic access to all the data on the site. For the record, I think that's a bad thing. Again, there may be ways and places in which user-agent detection is helpful. Some of the stopgap solutions people are putting in place while browsers catch up to the needs of responsive design are great examples. But these should not be understood to be long-term patterns or solutions.

Rather, we should be pushing for better browser capabilities and web standards to support responsive design. If we need bandwidth data, we should ask the browsers to provide it. If we need support for a responsive image element, we should ask the browsers to provide it. The beauty of web standards is that if you think of something beneficial and lay out it carefully, you can submit it and see it get traction. Driving the web towards standards-based approaches works in everyone's favor.

All that said, I'm still a newbie in a lot of ways, so hit me with your best arguments why I'm wrong. We'll all come out smarter, perhaps me most of all.

<ins datetime="2012-02-23T14:01:02+00:00"><strong>Edit:</strong> I just finished reading an article Olsen linked, <a href="http://www.lukew.com/ff/entry.asp?1392" target="_blank" title="RESS: Responsive Design + Server Side Components">RESS: Responsive Design + Server Side Components</a>, by Luke Wroblewski. The original emphasis was much more on web applications and vastly customized templates for design. This article, with its narrower focus, I like a bit better, but I still have some significant concerns with some of the ideas he tosses out (like custom url structures). I can potentially see value in user-agent detection for templating, but ultimately I still think it's a stopgap measure.</ins>

<ins datetime="2012-02-23T14:01:02+00:00">In any case, the design community should invest significantly more time in thinking about how to handle responsive <em>templating</em>, which is what Luke W's article is really driving at.</ins>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date>2012-02-23 08:00:43</wp:post_date>
		<wp:post_date_gmt>2012-02-23 14:00:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>responsive-design-server-side-feature-detection-and-a-big-mess</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="responsive-design"><![CDATA[responsive design]]></category>
		<category domain="post_tag" nicename="standards"><![CDATA[standards]]></category>
		<category domain="post_tag" nicename="web-applications"><![CDATA[web applications]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[responsive design]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Responsive design schemes that use user-agent detection instead of web standards risk preventing agnostic access to site data.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Responsive Design, Server-Side Feature Detection, and a Big Mess]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Dave Olsen]]></wp:comment_author>
			<wp:comment_author_email>dmolsen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dmolsen.com/</wp:comment_author_url>
			<wp:comment_author_IP>157.182.64.12</wp:comment_author_IP>
			<wp:comment_date>2012-02-23 13:43:03</wp:comment_date>
			<wp:comment_date_gmt>2012-02-23 19:43:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To point #1... *winces* I've done it. I think that's part of the push from my end to find a better way forward. It is wrong to wholly rely on the UA.  As for point #2... well aware of it but luckily that's not my realm on many projects.

There's a <a href="http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-February/thread.html" rel="nofollow">good thread</a> on the WHATWG listserv about the "non-trivial pieces of data" idea.  Like some of the commenters my question would be "Where do we draw the line?" and "Are these features that we build *into* a browser really going to be useful once that browser is actually published?" Meaning, have we moved on from needing that as a technique by the time they're really available.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>49</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330026183.2619";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Dave Olsen]]></wp:comment_author>
			<wp:comment_author_email>dmolsen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dmolsen.com/</wp:comment_author_url>
			<wp:comment_author_IP>157.182.64.12</wp:comment_author_IP>
			<wp:comment_date>2012-02-23 10:34:27</wp:comment_date>
			<wp:comment_date_gmt>2012-02-23 16:34:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chris-

First off, thanks much for continuing the discussion. Second, I think my original post must not have been clear enough. The whole point of server-side feature-detection is to offer a way forward for the responsive templating concept that you seem to think might have value. Is there some user-agent detection stuff in there? Yes. Is user-agent detection meant to be the be-all-and-end-all for making decisions regarding how features are templated? No. Is user-agent detection meant to provide completely different layouts/templates to various classes of devices? Again, no. When I say "An Evolution of Responsive Web Design" I really mean that. What I talked about is to make responsive layouts smarter as opposed to throwing those layouts away. If you haven't, please poke through <a href="http://detector.dmolsen.com/demo/mustache/" rel="nofollow">the demo</a>, <a href="https://github.com/dmolsen/Detector/wiki/Templating-with-Detector-&amp;-Mustache-Tutorial" rel="nofollow">tutorial</a>, and <a href="https://github.com/dmolsen/Detector/tree/master/web/demo/mustache/templates" rel="nofollow">template code</a>.

In my scheme user-agent detection, in the traditional sense, is, again, only meant to be one of the data points that helps server-side responsive templating work. Unfortunately, in <a href="http://detector.dmolsen.com/demo/mustache/" rel="nofollow">the demo</a> I created</a> it looks like it's some huge part but it really can be a minor section and, frankly, possibly left out altogether. Server-side feature-detection is about just that, accessing browser features but on the server. A user-agent string is used as a key and can store a <a href="http://detector.dmolsen.com/" rel="nofollow">vast trove of browser data</a> via Modernizr. Why punt that kind of decision making onto the browser (and JavaScript) to provide polyfill logic for including bits of content and, most importantly, media if you don't have to? If you find value in front-end devs moving towards feature-detection I'm surprised you'd take a dim view of server-side devs moving in a similar direction even if I might suggest that their is still some amount of value to the data found in a user-agent string. 

As you note, at some point tools need to be built to overcome the gaps we have between what we need to support and what those end-points (e.g. browsers) actually support. The downside of standards is that it takes a long-time for them to catch up with what's actually happening on the ground. I'm simply offering a way forward on the back-end for more complicated systems that might want to use RESS and to do it in a smarter way than just user-agent detection until the standards catch-up. I definitely *wasn't* suggesting front-end devs pick up user-agent detection or drop what they're doing. I'm not sure one blog post, meant to pull together a number of a different threads and showing a working example, qualifies as evangelizing a long-term solution. ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330015486.5977";s:7:"message";s:50:"chriskrycho changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330014867.8079";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.201</wp:comment_author_IP>
			<wp:comment_date>2012-02-23 11:06:43</wp:comment_date>
			<wp:comment_date_gmt>2012-02-23 17:06:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the thoughtful reply. As I read LukeW's article and saw what you were responding to and adding to, I realized more the direction you were headed, and I also recognized that I spazzed a little about UA-detection, which is just such bad mojo on the front-end side that I've developed a bit of a Pavlovian reaction, I think. And the comment I quoted actually set me off way more than your article did; I probably should have been a bit clearer in my own article on that point.

I agree with you that doing server-side detection can have some significant benefits, and between your and Luke's examples, I can see the specific places where I might consider doing it myself. My hesitation was in light of the ways I've seen quite a few people doing one of two horrible things:

(1) Using user-agent detection to deliver completely different content to mobile than to desktop, which drives me nuts as a <em>user</em>, not just as a designer. As I noted in the article, that drives me crazy, and it's not ideology in this case - it's the fact that when I pull out my phone, I want to be able to see your whole site. 

(2) Only delivering well-designed content to specific types of browsers. I don't know if you caught any of the hubbub about <code>-webkit</code> and vendor prefixing in general over the last week or two, but people have been doing some headdesk-inducing things in terms of optimizing sites for particular vendors, including (at times) relying on UA-detection.

But you weren't arguing for (1) and I don't know if you'd even heard about (2). Serves me right for bringing a bad set of assumptions to the table. Thanks for the gracious response. I look forward to seeing some of the ways we can do templating work responsively, I'm going to look into Modernizr, and I'm going to be thinking about ways that a browser could supply meaningful data to the server about itself without necessarily having to reply on the user agent string (which, as LukeW noted in the article you linked originally, is a bit risky).

I think optimally I'd really like for a browser to tell the server a few non-trivial pieces of data when it sends its initial request - things like average bandwidth over the last [x] time, screen info (resolution and DPI at a minimum), touch or cursor oriented, etc. I have no idea how feasible those things are, but it would be fantastic if the server could <em>know</em> those instead of having to trust that the user agent string will allow it to infer that data accurately.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>48</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330016803.2987";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-02-23 16:21:47</wp:comment_date>
			<wp:comment_date_gmt>2012-02-23 22:21:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think your comment on (1) summarizes and highlights the challenge here. We <em>do</em> need a better way forward, and particularly when we're delivering application (or application-like) functionality, the temptation is there and strong to deliver totally different content. I'm just persuaded - both by the ideological arguments put forward by guys like Ethan Marcotte, and by my own personal interactions with sites - that it's not the best way forward. Unfortunately, we haven't yet nailed down a single "best way forward" yet; I think responsive flow with media queries is part of it, and I think the kinds of things you're pushing for with responsive templating are actually a really neat future part of it. (It's sometimes easy to forget that "responsive" as a general part of design is only a little over a year old. It's come a long ways in that time, but it's still in its infancy or at most toddlerhood, even when compared to the rest of the web.)

Thanks for the link; I'll read through that. I think the question you're raising (and they apparently are) is a good one. There are a few that I don't see going away - bandwidth in particular, but perhaps all of the ones I noted - but I can also see how easily that sort of thing could get carried away. The last thing we want to do is burden the browsers with implementing things no one will actually use. Use cases like the one you laid out, or the <a href="http://www.w3.org/community/respimg/2012/02/21/a-sample-picture-implementation/" rel="nofollow">first couple proposed approaches for <code>&lt;picture&gt;</code></a>, convince me that some of these can and should have a life of their own in the browser. The trick is figuring out <em>which ones</em>.

Thanks again for provoking a good discussion and helping me suss out these thoughts a bit more carefully. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>50</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330035707.9471";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[User Agent Detection Will Get You In Trouble &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/posts/user-agent-detection-will-get-you-in-trouble/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-05-11 11:23:17</wp:comment_date>
			<wp:comment_date_gmt>2012-05-11 16:23:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] hit on this topic before, and while I came out of the ensuing conversation with a respect for back-end developers who are [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>A Plea for Open Data</title>
		<link>http://2012-2013.chriskrycho.com/web/a-plea-for-open-data/</link>
		<pubDate>Fri, 02 Mar 2012 20:16:21 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=450</guid>
		<description></description>
		<content:encoded><![CDATA[One of my current side projects involves some database work for a client in an academic context. There is an enormous trove of data being collected by the project, but the local administrators refuse to publish the data on the internet themselves. This despite the fact that it's already being published to their academic intranet. This despite the fact that they're willing (with some persuasion) to pay an outside contractor to develop a means of displaying the data for all the public to use.

I'm not sure what's driving this sort of recalcitrant refusal to share the data, but I can't see there being any <em>good</em> reason. <!--more-->

There are plenty of reasons to keep secrets. If you're developing a new product and don't want your competitors getting a drop on you, or are close to making a breakthrough that could make you enormous amounts of money, it may well be in your best interests to keep your work behind closed doors. Whatever one thinks of Apple and its sometimes hamhanded approach to dealing with leaks, the company at least has a good reason for preferring secrecy; it's part of its marketing scheme and it helps prevent copies from flooding the market too quickly. (Consider how long it took to get a real competitor to the iPad to market, and you'll quickly grasp the power of secrecy.)

If you're collecting data for a scientific endeavor, though, I can't see the benefits unless you're going to be applying for a patent. The project I'm working on is nothing like that. It's not developing technology; it's recording data - data that is widely useful and <em>ultimately available</em>. We just have to jump through hoops first.

While there is real utility in the database work I'm doing on this project, it would be far more useful for the data to be publicly available to <em>everyone</em> as soon as it was ready to be published. I'm creating a number of ways to access and display the data, but what if someone thinks of a novel way to recombine the data themselves? They can certainly use various combinations of reports my tool will generate for them. Or, if the data were freely available to them, they could remix it however they liked, without the constraints of the particular reports my tool is supposed to generate.

This ties into a broader picture culturally: the more openly available any kind of information is, the more readily people can reuse it, including for purposes the creator may never have imagined. The public availability of the data is a step in the right direction - I'm glad that the techs in the academic program I'm working for recognize that much at least. However, really open data goes further: it makes all the data <em>as available as it can be</em>. A truly open data approach might still supply some tools, like the ones I'm building, to make managing the data easier for the general use case. However, it would also leave the door open for direct access to the baseline data, getting out of the way of someone who conceives of a novel use for the information.

People my age and younger are seeing cultural media (songs, movies, etc.) not so much as fixed artifacts but rather as something to be adapted to new uses and presentations. This is part of what has caused such tumult in old media industries used to protecting their content from being reused in any way. A few particularly forward thinking artists have recognized that, with the right constraints, the remix culture can be the best kind of advertising - <em>free</em>. A kind word asking for credit to be given where credit is due and not to charge for remix work is nearly always honored.

The same is true of data, where oftentimes there is nothing to protect - just old habits of keeping things under wraps. The more that universities and researches push their data out for the rest of the world to use, the more that data can accomplish. A single team of researchers will always have limited time and resources, not to mention biases in their aims for the data. But another group of researchers may find that data allows them to do complimentary work at lower cost - a benefit to all of us. Toss in the sorts of contributions that hobbyists sometimes make, especially in the tech industry with its history of open-source innovation, and open data is a recipe for success - not only your own success, but also everyone else's success.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>450</wp:post_id>
		<wp:post_date>2012-03-02 14:16:21</wp:post_date>
		<wp:post_date_gmt>2012-03-02 20:16:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-plea-for-open-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="open-data"><![CDATA[open data]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="secrecy"><![CDATA[secrecy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[open data]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Open data makes all the data as available as it can be, getting out of the way of someone who conceives of a novel use for the information.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[Platforms and data: or, why Google+ needs Hootsuite &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/posts/platforms-and-data-or-why-google-needs-hootsuite/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-05-15 07:10:17</wp:comment_date>
			<wp:comment_date_gmt>2012-05-15 12:10:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] you want that data to be accessible in as raw and unfiltered way as possible, as I&#8217;ve written before.) This can&#8217;t be a future feature; it needs to be a priority from day one as you&#8217;re [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Unfortunate lookalikes</title>
		<link>http://2012-2013.chriskrycho.com/web/unfortunate-lookalikes/</link>
		<pubDate>Tue, 20 Mar 2012 11:23:57 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[One of my great pet peeves with Arial is the relationship between 'r' and 'n' when set next to each other. If one compares <span style="font-family: Arial; font-size: 0.75em;">rn</span> and <span style="font-family: Arial; font-size: 0.75em;">m</span>, they're nearly identical. The kerning is off, and the letters designed too similarly.

My mind glitches every time I see them in writing - particularly when the alternative is nonsensical or bizarrely out of place, as in the common abbreviation of postmodern as 'pomo', which has the unfortunate lookalike of 'porno' in Arial. Certainly not the sort of mistake one wishes one's readers to make.

Typography matters.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2012-03-20 06:23:57</wp:post_date>
		<wp:post_date_gmt>2012-03-20 11:23:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unfortunate-lookalikes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="arial"><![CDATA[Arial]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Read the Source, Luke</title>
		<link>http://2012-2013.chriskrycho.com/web/read-the-source-luke/</link>
		<pubDate>Mon, 16 Apr 2012 22:18:58 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=464</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Nobody reads other people's code for fun. Hell, I don't even like reading my own code. The idea that you'd settle down in a deep leather chair with your smoking jacket and a snifter of brandy for a fine evening of reading through someone else's code is absurd.

But we need access to the source code. We must read other people's code because we have to understand it to get things done. So don't be afraid to read the source, Luke – and follow it wherever it takes you, no matter how scary looking that code is.</blockquote>
<p class="right"><a href="http://www.codinghorror.com/blog/2012/04/learn-to-read-the-source-luke.html">Jeff Atwood, Learn to Read the Source, Luke&rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date>2012-04-16 17:18:58</wp:post_date>
		<wp:post_date_gmt>2012-04-16 22:18:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>read-the-source-luke</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[software]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>You&#039;ll pay more tomorrow</title>
		<link>http://2012-2013.chriskrycho.com/web/youll-pay-more-tomorrow/</link>
		<pubDate>Mon, 07 May 2012 21:23:34 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=468</guid>
		<description></description>
		<content:encoded><![CDATA[I've spent a fair bit of time recently working on a project that, all things considered, really shouldn't be that difficult. A client wanted a change made to his web application, a change that is simple in concept and - in theory, at least - should be equally simple in execution.

But it isn't, and it's not because of any hidden complexity in the task itself. Rather, the problem is that the code base for the web application is, to put it bluntly and without a hint of hyperbole, <em>awful</em>. I've worked on a fair amount of legacy code on various projects, in various languages, over the last few years. This one is the worst.

Individual functions hundreds (perhaps thousands) of lines long. No comments. No object orientation to speak of. Hackish solutions to problems all over the place.

But this isn't a complaint post. It's a <em>request</em> to the thousands of people in the world who are tempted to say, "Well, this will work for now..." Some of you are developers yourselves; others are simply dabblers. Whoever you are, whatever your context, whatever your project: there is a problem with "This will work for now," and that problem is called <em>tomorrow</em>. <!--more-->

<h3>To the developers</h3>
I don't care if you're developing an internal app for a company or building the next Facebook. If you think right now is the only time that matters for your software, you are in for a world of hurt in the future.

The vast majority of time I have spent on the project I mentioned above has nothing to do with the actual upgrade I am trying to perform. Rather, it has been spent trying to understand an impossibly complex function into which this behavior must be inserted, and to test my (almost always false) guesses about the way in which this piece of software works. The cost to the client is much higher than it needs to be, than it would be if this were well-designed, well-organized, well-commented code.

I don't care if you're writing in Lisp, Fortran, Python, C++, or F#. I don't care if you're writing a one-off piece of code to automate some small task for your company, or building out a complex model-view-controller interface. I don't care whether your client is a mom-and-pop corner shop or The Bank of America. If you build something sloppily, you or whoever comes after you will pay for your laziness. Your code doesn't have to be perfect, but it has to be comprehensible, because otherwise even you won't know how it works when you come back to perform maintenance or make an upgrade in a month or a year.

<h3>To clients</h3>
Don't go with cheap and easy hacks. If your software is in bad shape and you know it - or a developer you trust tells you, or especially if <em>multiple</em> developers you trust tell you - think hard about whether you're better off trying to fix what you have or to write something from scratch to replace it. When the problems are big enough, it may cost you less to start over than to keep maintaining bad code. There is no point in throwing good money after bad.

And that time may not be when your code isn't working. It may be when your code works just fine, but is completely incomprehensible to the people you've hired to maintain or upgrade it. (I'm assuming, of course, that you've hired competent developers. That's an important assumption, and you need to be sure it's valid.)

Also: if you don't know what you're doing, have the humility to admit it. By which I mean: not just verbally. Recognize your limitations and pay the price - perhaps literally - to make sure things get done right. If you know just enough to cause trouble, don't cause trouble. Hire someone who knows what he or she is doing. It may seem convenient to just do it yourself, but trust me: if you don't know what you're doing, you will just hurt yourself in the long run with that approach.

I don't mean you shouldn't try to understand the software and learn how to improve it yourself. Most of what I have learned in the last few years of software has been self-taught, and a great deal of it has come from reading other people's code (good and bad). Do that. But if you're on a tight budget, don't spend it fixing your own mistakes; spend it getting good product in the first place.

<h3>To everyone</h3>
Maintenance and upgrades are often the largest part of budget spent on software. This is true of almost all projects; rare is the piece of code that runs perfectly from day one and never needs any new functionality. Accordingly, it's important to put yourself in a position where maintenance and upgrades will have low friction and low cost. That means making sure the code is quality, not a mass of kludges, and it means making sure that it's well designed and well-commented.

That's hard and costly, of course, but it's unavoidable: maintaining a product costs money. And you'll pay more for it tomorrow than today.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date>2012-05-07 16:23:34</wp:post_date>
		<wp:post_date_gmt>2012-05-07 21:23:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>youll-pay-more-tomorrow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="cost"><![CDATA[cost]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="maintenance"><![CDATA[maintenance]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Whoever you are, whatever your context, whatever your project: there is a problem with "This will work for now," a problem called tomorrow.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>User Agent Detection Will Get You In Trouble</title>
		<link>http://2012-2013.chriskrycho.com/web/user-agent-detection-will-get-you-in-trouble/</link>
		<pubDate>Fri, 11 May 2012 16:23:12 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=474</guid>
		<description></description>
		<content:encoded><![CDATA[One of the joys of corporate IT policies is seeing how things break when you're in an unusual configuration on the web. Like, say, running Firefox behind a corporate proxy that tells every site out there that you're actually running IE7. This morning, I paused from other tasks to read an article on a well-known religious commentary website, and saw a message at the top alerting me that I'm using an out-of-date version of Internet Explorer (which I would be if I were running IE... but this is on a relatively up-to-date version of Firefox).

Bad enough that for whatever reason our corporate IT has taken to spoofing outgoing traffic this way when routing through their proxies. (One wonders just how much of the reported IE6 or IE7 traffic on the web comes from this sort of thing.) But the real problem is that the site I visited was broken. Horribly, horribly broken.

That message - "You're using an outdated version of Internet Explorer" - told me why. <!--more-->

The site, it seems, is supplying different content to browsers with different user agents. I didn't get the standard CSS file I should have, and the site was unusable. As in: almost completely. I managed to get through the article, but I won't be back there anytime soon.

I've hit on this topic <a href="http://v4.chriskrycho.com/web/posts/responsive-design-server-side-feature-detection-and-a-big-mess/" title="Responsive Design, Server-Side Feature Detection, and a Big Mess">before</a>, and while I came out of the ensuing conversation with a respect for back-end developers who are thinking through these issues, this right here - a real problem, out in the wild - highlights my concerns with the approach, even when carefully administered.

So, a plea for sanity: if you're going to do server-side user-agent detection, fine. I was persuaded by the the <a href="http://v4.chriskrycho.com/web/posts/responsive-design-server-side-feature-detection-and-a-big-mess/#comments" title="comment thread">discussion</a> that followed that post that there really is a time and place for that sort of thing. But we need to be extremely careful in <em>where</em> and <em>how</em> we rely on user agent-detection to make decisions about the content we supply to users.

We should never - not ever! - actively punish a user for having an out-of-date browser. If you don't want to actively support it, that's one thing. Don't write IE6- or IE7-specific stylesheets. But for goodness' sake, don't stop supply the <em>regular</em> stylesheet! Don't give me completely unstyled content just because you think my browser is out of date. However good user-agent detection gets, it will never be perfectly reliable, and you do no one any good by penalizing them for browser decisions that are often beyond their control.

This is one reason responsive layouts are, in my view, far better than forced redirects to mobile versions of sites based on user agent. (If you want users to be able to opt out of a responsive reflow, you can still do that: give them a link that sets a cookie that tells the browser to load a non-responsive stylesheet and call it a day.) But in that case, the user still gets the content. Even if I am using IE7, I still get all the images, some semblance of layout that is actually readable, and so forth. When you withhold content on the basis of user agent-detection, you're relying on a guess, however generally reliable, that could prove to be very wrong.

So think about which elements you ought to be applying those decisions to. Here's a hint: <em>stylesheets generally aren't one of them</em>. (If you do make a decision to present reduced stylesheets, it should be for mobile-only, and users should always be able to opt out of it.) Server-side responsive decisions make sense for things like images or video, where compression might be sensible, but not for layout or restricting access to content.

All of that is basically a long way of saying: <em>please</em> remember the importance of graceful degradation when you're making decisions about responsive web development, <em>especially</em> if you're doing anything server side. (It's also a demonstration of why I vastly prefer a progressive enhancement approach over a graceful degradation approach, but that's a post for another day.) And never, ever, actively penalize your users for their choice in browser.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>474</wp:post_id>
		<wp:post_date>2012-05-11 11:23:12</wp:post_date>
		<wp:post_date_gmt>2012-05-11 16:23:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>user-agent-detection-will-get-you-in-trouble</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="graceful-degradation"><![CDATA[graceful degradation]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="progressive-enhancement"><![CDATA[progressive enhancement]]></category>
		<category domain="post_tag" nicename="responsive-design"><![CDATA[responsive design]]></category>
		<category domain="post_tag" nicename="web-applications"><![CDATA[web applications]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[user agent]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[We need to be extremely careful in where and how we rely on user agent detection to make decisions about the content we supply to users.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[76]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Platforms and data: or, why Google+ needs Hootsuite</title>
		<link>http://2012-2013.chriskrycho.com/web/platforms-and-data-or-why-google-needs-hootsuite/</link>
		<pubDate>Tue, 15 May 2012 12:00:37 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=479</guid>
		<description></description>
		<content:encoded><![CDATA[We're quickly approaching <a href="https://plus.google.com/" title="Google Plus" target="_blank">Google+</a>'s first birthday, and the search giant's social media platform has found a core audience, but it has never caught on to the extent that Google hoped or the tech media hyped early on. That core group of tech enthusiasts has certainly put it to good use, with voices like Tim O'Reilly finding an even broader audience and a medium that suits him well.

For most of the population, though, Google+ was a novelty that never went anywhere. <!--more-->Of all my friends, only about three use the service with any regularity (and by regularity, I don't mean checking-Facebook-obsessively regularity; I mean a couple times a week). There are a number of reasons for this, I suspect - the slightly strange middle ground the service strikes between Twitter and Facebook, the fact that Facebook is already deeply embedded in most people's lives and switching costs are concomitantly high, the way it rolled out with limited (albeit cool) features. But there's another reason I suspect is a huge part of Google+'s failure to catch on outside of that core demographic.

One of the great strengths of both Twitter and Facebook - especially Twitter - is that it makes it easy for other platforms to retrieve and create content on the network <em>outside</em> the network. This is why the early years of Twitter saw such a plethora of tools to access the network, from Tweetie to TweetDeck to HootSuite and a thousand others in between. Especially in a time when Twitter itself wasn't particular user-friendly, this meant outside developers could take the same data streams and present them in much more user-friendly ways. A lot of the innovations that are now central to Twitter itself came out of this external developer community (just as many of the conventions that drive Twitter conversation arose from the community of users - the ubiquitous "retweet" being the most prominent example).

Google+ doesn't have this. Neither does Facebook, of course, at least to the same extent - but Facebook still makes it easy to pull in the News Feed... and Google+ doesn't have Facebook's lock-in of 900 million users. So it is to Google+'s very great detriment that it does not let external apps have easy access to its data.

The simple truth is: I would be far more likely to use Google+ if I could integrate it with my HootSuite or TweetDeck apps on Android, rather than <em>having</em> to open the platform-specific application. (I almost never open the Facebook app, and I don't remember the last time I actually accessed the official Twitter client for Android - maybe never.) users are accustomed to being able to get and create content in a place and way that's convenient to them. Google, I'm sure, has a reason for locking down its access the way it has, but the cost for Google+ has been high. Without that pre-existing user base (as in the case of Facebook) or an easily accessible API (as in the case of Twitter), all it has to bank on is tech enthusiasts' enthusiasm.

That's great, as far as it goes, but it won't get you any pull outside of that area, and the truth is that tech enthusiasts <em>already</em> like Google and many of them already gave Google+ most of the information it can now get from "social analytics" in their other interactions with the search giant. If Google+ wants to grow outside of that niche - if it wants to be a genuine social hub (and it does: it's just good for business) - it needs to make its data open and easily accessible. If it lets me get at Google+ data in my streams on TweetDeck, it <em>will</em> grow. If it doesn't, it will always be stuck in tech geek land.

There's a lesson here for smaller developers, too. Google+ can sort of get away with this, because Google was already sufficiently large as to be able to get some leverage just by having a well-designed interface and banking on its own reputation. You and I don't have that latter factor going for us, so a decent interface isn't going to do the trick. If you're going to build a web app and you want it to catch on, you need to provide a way for users to get at the data. (Optimally, you want that data to be accessible in as raw and unfiltered way as possible, as I've written <a href="http://v4.chriskrycho.com/web/posts/a-plea-for-open-data/" title="A Plea for Open Data" target="_blank">before</a>.) This can't be a future feature; it needs to be a priority from day one as you're developing. What will your API look like? How will you allow your users to <em>create value</em> on your platform, using your data? The more you open it up, the more uses people will find for your service, and the more they'll share it with others, and accordingly the more powerful it will be.

Open platforms with accessible APIs are <em>the</em> key to the data side of successful web application development. Data, it turns out, is the currency of an information economy. There are other necessary components in other aspects of application development, but if you don't get data right it won't matter how pretty your interface is; you are doomed to languish in obscurity. If you get data right, though, you might just have a chance of your data going somewhere interesting.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>479</wp:post_id>
		<wp:post_date>2012-05-15 07:00:37</wp:post_date>
		<wp:post_date_gmt>2012-05-15 12:00:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>platforms-and-data-or-why-google-needs-hootsuite</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="data"><![CDATA[data]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="economics"><![CDATA[economics]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="web-applications"><![CDATA[web applications]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen]]></wp:comment_author>
			<wp:comment_author_email>stephen.carradini@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.177.81.148</wp:comment_author_IP>
			<wp:comment_date>2012-05-15 10:42:36</wp:comment_date>
			<wp:comment_date_gmt>2012-05-15 15:42:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In a few years, we will remember Buzz, Wave and + in the same sentence. Even if they make the changes you suggest, I think they're too far down the rabbit hole to pull back out and get non-tech-savvy users to come over to it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337096558.5874";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>dchang.me@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>107.62.53.10</wp:comment_author_IP>
			<wp:comment_date>2012-05-15 11:08:51</wp:comment_date>
			<wp:comment_date_gmt>2012-05-15 16:08:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Google+ has open APIs, but was apparently trying to avoid doing what Twitter had done earlier - opening their APIs too early, having start-ups form to offer additional features, than having to kill those start-ups when they wanted to implement the same features. I read that somewhere. But I think their API now is almost everything you could want (especially the Hangouts API).

Perhaps Google+ just has a shortage of 3rd party developers, like how most people don't want to go out of their way to develop for a Windows phone when there's iOs and Android]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337098131.6291";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.201</wp:comment_author_IP>
			<wp:comment_date>2012-05-15 13:24:57</wp:comment_date>
			<wp:comment_date_gmt>2012-05-15 18:24:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[David, that's interesting - I didn't realize that. In any case, I think by limiting access early, they hurt adoption, and have permanently stunted the development of that sort of community around the tool. The net result is the same: there aren't any apps I'm aware of (which means: there are none of sufficient prominence as to be worth mentioning) that let me post the same thing to Twitter and Google+ at the same time, or read things from the stream of each at the same time. I'll have to add a note to the end of the post to clarify that, in any case.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>101</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337106297.8901";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>134.223.116.201</wp:comment_author_IP>
			<wp:comment_date>2012-05-15 13:28:58</wp:comment_date>
			<wp:comment_date_gmt>2012-05-15 18:28:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Perhaps so. Though David's point below suggests it could be as simple as some enterprising developer taking advantage of what apparently <em>is</em> there now (but wasn't early on). Having a more robust "ecology" would give them a chance to attract other users, even at this stage. It's still going to be a different demographic than Twitter or Facebook, but the opportunity is still there - especially because tech enthusiasts are <em>enthusiasts</em>, and if those sorts of tools become available, they will promote them.

I'd also say that Buzz and Wave will probably be remembered in a different breath than G+, even if G+ is just one breath later... it's been vastly more successful, and is both much more user-friendly and much better understood than either of those previous efforts. (The breath before that, of course, will be Orkut. Remember Orkut?)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>100</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337106538.7119";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>134</wp:comment_id>
			<wp:comment_author><![CDATA[G+ 很可惜的地方 &laquo; 奇幻火星]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://boazmomo.wordpress.com/2012/05/26/g-%e5%be%88%e5%8f%af%e6%83%9c%e7%9a%84%e5%9c%b0%e6%96%b9/</wp:comment_author_url>
			<wp:comment_author_IP>69.170.134.165</wp:comment_author_IP>
			<wp:comment_date>2012-05-26 02:08:54</wp:comment_date>
			<wp:comment_date_gmt>2012-05-26 07:08:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Platforms and data: or, why Google+ needs Hootsuite » Designgineering » Chris Krycho We&#8217;re quickly approaching Google+&#8217;s first birthday, and the search giant&#8217;s social [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338016134.7737";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Saving the Bookstore</title>
		<link>http://2012-2013.chriskrycho.com/web/saving-the-bookstore/</link>
		<pubDate>Tue, 29 May 2012 13:00:51 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=483</guid>
		<description></description>
		<content:encoded><![CDATA[A <a href="http://www.forbes.com/sites/philjohnson/2012/05/10/the-man-who-took-on-amazon-and-saved-a-bookstore/" title="The Man Who Took on Amazon and Saved a Bookstore" target="_blank">fascinating story from Forbes</a>, on how one man has done the seemingly impossible - built a successful independent bookstore in the age of Amazon. (As a side note, I find I'm increasingly impressed by the reporting coming out of Forbes. Perhaps they just hadn't been on my radar, but in the last three months I've read a number of outstandingly insightful pieces there on issues from this one on the Harvard Book Store to several on <cite>Mass Effect 3</cite>.)

<blockquote>A former technology executive with a passion for reading and books, Jeff saw – like everyone else – that the digitization of content was destroying the neighborhood bookstore.

Imagine for a moment what it would feel like if people walked into your company and used the lobby to call your competitors and buy their products. That’s standard consumer behavior in a bookstore. People browse, find a book they like, pull out their smart phone, and order online.

Making an intuitive leap, Jeff wondered if the opposite could be true?</blockquote>
<p class="right"><a href="http://www.forbes.com/sites/philjohnson/2012/05/10/the-man-who-took-on-amazon-and-saved-a-bookstore/" target="_blank">The Man Who Took on Amazon and Saved a Bookstore &rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>483</wp:post_id>
		<wp:post_date>2012-05-29 08:00:51</wp:post_date>
		<wp:post_date_gmt>2012-05-29 13:00:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>saving-the-bookstore</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Eclipse Indigo, Subversive, and Connectors</title>
		<link>http://2012-2013.chriskrycho.com/web/eclipse-indigo-subversive-and-connectors/</link>
		<pubDate>Fri, 08 Jun 2012 13:00:26 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=495</guid>
		<description></description>
		<content:encoded><![CDATA[This is apparently a pretty common issue, so I thought I'd write up the solution to it. When using the suggested method of installing Subversive - one of two standard SVN client plugins for Eclipse, the other being Subclipse - the installation may fail (as it did for me). The Eclipse error messages for the failure aren't incredibly informative, but I managed to figure out the issue, so here it is: <!--more-->

At the time of posting, the most up-to-date versions of the Subversive plugin available for automatic or direct download from the Eclipse Marketplace site per the instructions on the plugin site are _not_ the most current, and will _not_ work with the automatic downloads from the Polarion source for the SVN connectors.

This is the root of the issue: Eclipse downloads the most up-to-date version of each from the specified source, and the Connectors repository has more recent versions than the Subversive repository. Since the newest Connectors have the latest Subversive build as dependencies, automatic installation fails. There are two options for a solution:

# Download most up-to-date versions of both. You can get the most current Connectors from the Marketplace or Install New Software menus, or <a href="http://community.polarion.com/projects/subversive/download/eclipse/2.0/builds/Subversive-connectors-2.3.0.I20120520-1700.zip" title="download the files">directly from their site</a>. Then download the <a href="http://www.eclipse.org/downloads/download.php?file=/technology/subversive/0.7/builds/Subversive-incubation-0.7.9.I20120520-1700.zip" title="Download the files">Subversive plugin for Juno</a>. Install the latter _first_.
# Download older version of the connectors after installing the older version of the plugin either through INS or Market. Just check the date of release for the plugin and make sure the Connectors release date matches.

I recommend the first option, as you'll get the most up to date software (which is particularly useful if you want to integrate with SVN 1.7; I don't believe the older connectors support it). The installation process should be pretty straightforward, and you shouldn't actually _need_ the manual connector installation once you get the Juno version of Subversive running; the automatic connector finder will get and install the new connectors just fine. On the off chance that it doesn't, though, you'll have the files and you can install them manually.

The process for manual installation is simple: open the "Install New Software" menu, click to Add a New Source, and choose either Local or Archive (depending on whether you've extracted the files you downloaded or not). Once that's selected, you should be able to install the files just fine - including source if you want, and so forth.

Hopefully this saves someone else the headaches I went through last week while getting this configured!

__(editorial)Note that in the week since I wrote this draft, the Connectors have gotten even further out of date. At the time of publication, the most current set of Connectors publicly available are a full release newer than the Subversive set. I haven't had a chance to test that, so I have no idea what if any effect this has on the dependency issues I highlighted above.__]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>495</wp:post_id>
		<wp:post_date>2012-06-08 08:00:26</wp:post_date>
		<wp:post_date_gmt>2012-06-08 13:00:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eclipse-indigo-subversive-and-connectors</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bugs"><![CDATA[bugs]]></category>
		<category domain="post_tag" nicename="connectors"><![CDATA[Connectors]]></category>
		<category domain="post_tag" nicename="eclipse"><![CDATA[Eclipse]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="public-service-announcements"><![CDATA[Public Service Announcements]]></category>
		<category domain="post_tag" nicename="subversive"><![CDATA[Subversive]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[SVN]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bitstream Vera Sans</title>
		<link>http://2012-2013.chriskrycho.com/web/bitstream-vera-sans/</link>
		<pubDate>Mon, 04 Jun 2012 14:53:24 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[My new favorite font for writing: "Bitstream Vera Sans":www.fontsquirrel.com/fonts/Bitstream-Vera-Sans, discovered via Jesse Grosjean's fantastic "WriteRoom app":http://bit.ly/hBBL6Q – which all Mac-using writers should look into. The font is free for everyone; go get it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2012-06-04 09:53:24</wp:post_date>
		<wp:post_date_gmt>2012-06-04 14:53:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bitstream-vera-sans</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apps"><![CDATA[apps]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="writing"><![CDATA[writing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Oh, my...</title>
		<link>http://2012-2013.chriskrycho.com/web/oh-my/</link>
		<pubDate>Tue, 05 Jun 2012 19:26:43 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=505</guid>
		<description></description>
		<content:encoded><![CDATA[Starting to look more closely at the code I'm going to spend the next few months with. Oh, my...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>505</wp:post_id>
		<wp:post_date>2012-06-05 14:26:43</wp:post_date>
		<wp:post_date_gmt>2012-06-05 19:26:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oh-my</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>JIRA, Confluence, Intranets and Windows Firewall</title>
		<link>http://2012-2013.chriskrycho.com/web/jira-confluence-intranets-and-windows-firewall/</link>
		<pubDate>Thu, 07 Jun 2012 13:00:35 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[For my work with Quest Consultants, I've been working on setting up version control, issue tracking, and document control. After doing quite a bit of research, I settled on a few Atlassian products, integrating JIRA and Confluence with Subversion (you just can't beat TortoiseSVN for a Subversion client).

Installation goes off without a hitch, generally speaking, but I started to run into a singular, most annoying problem: I couldn't access the site on the intranet.<!--more-->

Logging in from the machine where JIRA and Confluence were installed, I could hit <code style="font-family: adelle; font-size: 0.853em">localhost:8080</code> and <code style="font-family: adelle; font-size: 0.853em">localhost:8090</code> just fine. I could hit <code style="font-family: adelle; font-size: 0.853em">machineName:8080</code> and <code style="font-family: adelle; font-size: 0.853em">machineName:8090</code> just fine, too. Attempting to hit them from another machine on the intranet via the browser got me nowhere. Installing the Telnet server and clients on Windows 7[1] got me nowhere.

I spent ages looking around and ignoring the obvious solution, because Windows 7 explicitly asked me if I wanted to allow access to JIRA and Confluence through the firewall, giving me the option to block all traffic, allow intranet traffic, allow internet traffic, or allow all traffic. I picked intranet traffic and moved on, content to know I'd solved my problem.

Not so. Either the installer didn't report its requirements correctly, or Windows didn't ask. Either way: Windows 7 was allowing access to the _applications_, but not to the ports the Tomcat Servlets listen on. So no traffic was ever hitting the server. Open up ports 8080 and 8090, and boom: everything worked. The same thing applies to any other Atlassian apps (Fisheye, etc.), and I would guess it's generally applicable to web applications listening for traffic on nonstandard ports in a Windows 7 environment.

Takeaway: Even if Windows asks you about application permissions, _you have to set port permissions manually yourself_.

Lesson learned: always check the firewall settings first.

For those who have yet be initiated into the wonders of administering Windows Firewall, here's a basic walkthrough:

# Open the Start Menu and go to Control Panel
# Open the Windows Firewall program. There are three ways to get to this:
## If you have your view set to icons (large or small), just look for Windows Firewall; it's in the list near the bottom.
## If you have your view set to Category, select System and Security, then Windows Firewall
## In either view, simply type "firewall" into the search bar at the top right and click on Windows Firewall
# Click Advanced Settings
# Click Inbound Rules
# Click New Rule under Actions on the left side of the screen
# Select Port in the list of types of rule
# Leave TCP selected, and specify all the Altassian application listener ports you need open - in my case, it was just 8080 and 8090; if you're running others they'll have their own. Click Next.
# Select Allow the Connection; click Next.
# Specify the domains you want the rule to apply to. I left Domain and Private checked, but unchecked Public for security reasons. Click Next.
# Give the new rule a name (I went with "JIRA and Confluence Ports") and, if you want, a description. Click Finish.

That should do it!

 <hr/>

fn1. Seriously: why aren't they installed by default, along with tftp and a half dozen other incredibly useful utilities you have to install manually?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date>2012-06-07 08:00:35</wp:post_date>
		<wp:post_date_gmt>2012-06-07 13:00:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jira-confluence-intranets-and-windows-firewall</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="atlassian"><![CDATA[Atlassian]]></category>
		<category domain="post_tag" nicename="confluence"><![CDATA[Confluence]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="firewall"><![CDATA[firewall]]></category>
		<category domain="post_tag" nicename="intranet"><![CDATA[intranet]]></category>
		<category domain="post_tag" nicename="jira"><![CDATA[JIRA]]></category>
		<category domain="post_tag" nicename="port-access"><![CDATA[port access]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="tomcat"><![CDATA[Tomcat]]></category>
		<category domain="post_tag" nicename="windows-7"><![CDATA[Windows 7]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Even if Windows asks you about application permissions, you have to set port permissions manually yourself.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_ericjturley@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-07-16 14:29:31|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_henrik904@msn.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-11-12 05:36:28|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[Sean Smith]]></wp:comment_author>
			<wp:comment_author_email>sean@sean.com.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.148.248.242</wp:comment_author_IP>
			<wp:comment_date>2012-06-17 10:22:57</wp:comment_date>
			<wp:comment_date_gmt>2012-06-17 15:22:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just had the exact same problem with JIRA.

Thanks for the article.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339946577.9144";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>199</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-06-17 22:19:59</wp:comment_date>
			<wp:comment_date_gmt>2012-06-18 03:19:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My pleasure, Sean - glad to have been of some assistance. I sent the same info Atlassian's way, so hopefully they'll update their documentation with this info at some point.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>196</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339989599.5771";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>649</wp:comment_id>
			<wp:comment_author><![CDATA[Richard]]></wp:comment_author>
			<wp:comment_author_email>joobeng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.186.9.10</wp:comment_author_IP>
			<wp:comment_date>2012-08-15 08:28:43</wp:comment_date>
			<wp:comment_date_gmt>2012-08-15 13:28:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! Was struggling with the same problem. Why don't they mention it in the documentation or do it automatically for you? Strange. Also, their documentation is so confusing, i struggled cos i didn't create the confluence database in postgre before running Confluence program setup. Why why why?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345037323.3786";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>650</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-15 08:43:44</wp:comment_date>
			<wp:comment_date_gmt>2012-08-15 13:43:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know! I did pass this back on to them via customer service, but whether it'll ever get fixed in the documentation, who knows. (It certainly should, since the documentation is all built in Confluence and it's all of a 1-sentence addition.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>649</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345038224.6633";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4828</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Turley]]></wp:comment_author>
			<wp:comment_author_email>ericjturley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.124.34.139</wp:comment_author_IP>
			<wp:comment_date>2013-07-16 14:29:31</wp:comment_date>
			<wp:comment_date_gmt>2013-07-16 18:29:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the post :)

As of this date, the problem still exists in new installs of JIRA.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373999371.1129229068756103515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11602</wp:comment_id>
			<wp:comment_author><![CDATA[Henrik Olsen]]></wp:comment_author>
			<wp:comment_author_email>henrik904@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.234.222.60</wp:comment_author_IP>
			<wp:comment_date>2013-11-12 05:36:27</wp:comment_date>
			<wp:comment_date_gmt>2013-11-12 10:36:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much for this awesome post! I've been messing about with this infernal thing for a while now and this fixed it all. Keep up the good work! :D
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384252588.0227949619293212890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Introducing: JIRA Commit Acceptance Plugin Tweaks (Python, Batch)</title>
		<link>http://2012-2013.chriskrycho.com/web/introducing-jira-commit-acceptance-plugin-tweaks-python-batch/</link>
		<pubDate>Tue, 26 Jun 2012 03:28:40 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=548</guid>
		<description></description>
		<content:encoded><![CDATA[One of the tasks I set for myself with "JIRA":http://www.atlassian.com/software/jira/overview at "Quest":http://questconsult.com/ was to configure it and Subversion so that people can't check in with referencing a JIRA Issue. This is a little thing, but it helps ensure people will actually use the issue tracker, instead of letting it languish. Add good version and source control policies - the kind you implement on the server, not just the kind you tell people to use (because we all know how well _that_ works out) - and you have a solution that helps people use both version control and the issue tracker sensibly. <!--more-->

h2. JIRA Commit Acceptance Plugin

h3. Background

The easiest way to get this setup going is with the "JIRA Commit Acceptance Plugin":https://studio.plugins.atlassian.com/wiki/display/CMMT/JIRA+Commit+Acceptance, which allows you to configure various options for allowing or disallowing check-ins based on whether they reference a JIRA issue and whether the issue in question has been resolved or not. It even has the ability to specify different settings project-by-project. This is all great stuff, and it has support for several version control systems; I'm using Subversion.

To make it work with Subversion requires integrating with Subversion's "pre-commit hook":http://svnbook.red-bean.com/en/1.7/svn.ref.reposhooks.pre-commit.html concept. Subversion fires these hook scripts off when it hits certain points in the commit process. It will actually run _any_ script that is executable and named @pre-commit.<extension>@, so you can use @pre-commit.py@, @pre-commit.sh@, @pre-commit.bat@, @pre-commit.exe@, @pre-commit.jar@, @pre-commit.rb@... you get the idea. Since the hook is just an executable script, you can configure actions to do pretty much whatever you want during that period of time, including call other scripts.

In this case, the plugin authors provided a set of files:

* a pre-commit hook (in @.sh@ or @.bat@ form depending on whether you're on a *nix or Windows machine, respectively)
* two options for the actual script the pre-commit hook calls, which goes out and checks JIRA for the issues
** jira-client.py, a Python implementation
** jira-client.pl, a Perl implementation

I don't know Perl, and frankly I don't care to. It's a fine scripting language by all accounts, but so is Python - and Python tickles my fancy for lots of reasons, not least its aesthetic elegance. So it was a no-brainer for me to use the Python implementation.

h3. Problems and Solutions

There were, however, two problems that needed resolving:

# As provided, the software didn't actually work. Specifically, the pre-commit hook didn't play nicely, thanks to the way environment variables are set and the fact that I couldn't guarantee a local install of Python.
#* Specifically: the Subversion pre-commit hook runs in an empty environment, so you have to provide the necessary environment variables. Being on Windows, this was harder than you might think.
# The Python script was woefully out of date. Hasn't-been-updated-since-2009 out of date, uses-deprecated-modules-and-functions out of date.

Seeing as the solutions to each of these problems are useful to more than just me, here they are for the world to make use of. Source code for each is included below, as well as on its respective page.

h4. jira-client.py tweaks

Download the tweaked file "here":http://dl.chriskrycho.com/scripts/jira-client.py. See a detailed writeup of what I did, how and why "here":http://v4.chriskrycho.com/web/tools/jira-commit-acceptance-plugin-tweaks/.

h4. pre-commit.bat tweaks

Necessary to deal with Windows Network Shares (as opposed to good old Unix network shares, which work much more sensibly). Download the batch file "here":http://dl.chriskrycho.com/scripts/remote-executable.bat. See a detailed writeup on dealing with shared network drives and executables "here":http://v4.chriskrycho.com/web/tools/run-executable-on-a-network-drive-batch-file/. I included some detailed notes on dynamically mapping directories, if you're curious.

h2. Source code

The following should work with minimal tweaking (after supplying the @<user-defined pieces>@). Please see the aforementioned pages for detailed explanations.

h3. jira-client.py
<pre lang="python">#!/usr/bin/python

# JIRA commit acceptance python client for SVN
# Author: istvan.vamosi@midori.hu
# $Id: jira-client.py 20980 2009-07-23 06:16:03Z dchui $

# Updated by Chris Krycho 2012-06-09                                                                                                
# v4.chriskrycho.com / web@chriskrycho.com 

try:
    import subprocess
    import sys
    import urlparse
    import xmlrpclib
except ImportError:
    exit(1)

# configure JIRA access
# ("projectKey" can contain multiple comma-separated JIRA project keys like "projectKey = 'TST,ARP'".
# If you specify multiple keys, the commit will be accepted if at least one project listed accepts it.
# Or you can specify "projectKey = '*'" to force using the global commit acceptance settings if you don't
# want to specify any exact project key.)
jiraBaseURL = '<url of server>'
jiraLogin = '<administrative user login>'
jiraPassword = '<password>'
projectKey = '*'

# configure svnlook path (e.g. C:/Program Files/TortoiseSVN/bin/svnlook or /usr/bin/svnlook)
svnlookPath = '<path to svnlook>'

# get committer
try:
    author = subprocess.check_output([svnlookPath, 'author', sys.argv[1], '-t', sys.argv[2]])
except:
    errorMessage = "Unable to get commit author with svnlook."
    errorMessage += ("\n\tRepository:\t"  + sys.argv[1])
    errorMessage += ("\n\tTransaction:\t" + sys.argv[2])
    errorMessage += ("\n\tsvnlook path:\t" + svnlookPath)
    print >> sys.stderr, errorMessage
    sys.exit(1)

# get commit message
try:
    message = subprocess.check_output([svnlookPath, 'log', sys.argv[1], '-t', sys.argv[2]])
except:
    errorMessage = "Unable to get commit message with svnlook."
    errorMessage += ("\n\tRepository:\t"  + sys.argv[1])
    errorMessage += ("\n\tTransaction:\t" + sys.argv[2])
    errorMessage += ("\n\tsvnlook path:\t" + svnlookPath)
    print >> sys.stderr, errorMessage
    sys.exit(1)

# print arguments
print >> sys.stderr, 'Author: ' + author
print >> sys.stderr, 'Commit message: "' + message + '"'

# invoke JIRA web service
xmlrpcUrl = jiraBaseURL + '/rpc/xmlrpc'
try:
    s = xmlrpclib.ServerProxy(xmlrpcUrl)
    acceptance, comment = s.commitacc.acceptCommit(jiraLogin, jiraPassword, author, projectKey, message).split('|');
except:
    acceptance, comment = ['false', 'Unable to connect to the JIRA server at "' + jiraBaseURL + '".']

if acceptance == 'true':
    print >> sys.stderr, 'Commit accepted.'
    sys.exit(0)
else:
    print >> sys.stderr, 'Commit rejected: ' + comment
    sys.exit(1)
</pre>

h3. Batch file

<pre lang="winbatch">@ECHO OFF

setlocal

:: Store working directory to return to after finished
set WORKDIR=%CD%

:: Map and switch to a network drive and give it an arbitrary, unmapped drive letter
pushd \\<machine-name>\<directory>

:: Store the name of network drive so it can be unmapped when finished
set NETDRIVE=%CD%
set NETDRIVE=%NETDRIVE:\=%

:: Change back to the original directory
cd /d %WORKDIR%

:: Run commands with the network drive mapped
%NETDRIVE%\<path to executable>

:: Uncomment this if you want to catch errors from the executable
:: if %errorlevel% GTR 0 exit %errorlevel%

:: Unmap the network drive
net use %NETDRIVE% /delete /y

endlocal</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date>2012-06-25 22:28:40</wp:post_date>
		<wp:post_date_gmt>2012-06-26 03:28:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-jira-commit-acceptance-plugin-tweaks-python-batch</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="batch-files"><![CDATA[batch files]]></category>
		<category domain="post_tag" nicename="commit-acceptance"><![CDATA[Commit Acceptance]]></category>
		<category domain="post_tag" nicename="jira"><![CDATA[JIRA]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="scripts"><![CDATA[scripts]]></category>
		<category domain="post_tag" nicename="subversion"><![CDATA[Subversion]]></category>
		<category domain="category" nicename="tools-posts"><![CDATA[Tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[jira commit acceptance plugin]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Introducing: JIRA Commit Acceptance Plugin Tweaks (Python, Batch)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[An update to the languishing JIRA Commit Acceptance Plugin Python script. Bonus: Windows batch file to make it work with remote drives.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metakeywords</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_saran.j.jegan@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2012-08-27 17:34:06|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>790</wp:comment_id>
			<wp:comment_author><![CDATA[Vino]]></wp:comment_author>
			<wp:comment_author_email>saran.j.jegan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.39.108.98</wp:comment_author_IP>
			<wp:comment_date>2012-08-27 17:34:05</wp:comment_date>
			<wp:comment_date_gmt>2012-08-27 22:34:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Chris,
   I had end up in your blog in search jira-commit-acceptance plugin jarfile. which version of server plugin you are using with it?. I see only these version available https://studio.plugins.atlassian.com/svn/CMMT/jars/ for download?. 

  I'm interested to know which version of server plug-in worked for jira5.x. Thanks for your help]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346106846.0983";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>791</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-08-27 22:09:10</wp:comment_date>
			<wp:comment_date_gmt>2012-08-28 03:09:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Vino, I'm just using most recent version, <a href="https://marketplace.atlassian.com/289" rel="nofollow">1.6.0</a>, from Atlassian Marketplace - but I believe I installed it via the Plugin manager interface, rather than a download (and I believe that's the supported installation method, given that there are no direct download links and instead mentions of Plugin System One). I hope that helps, and I'll take a look tomorrow at our installation to confirm that - look for another follow-up comment here.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>790</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346123350.1571";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>796</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-28 08:53:51</wp:comment_date>
			<wp:comment_date_gmt>2012-08-28 13:53:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Vino, just to follow up: I've confirmed that I just installed the plugin via the Find New Plugins interface in the JIRA Administration panel. Hope that helps you resolve this!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>790</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346162031.1495";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Good Programming in 3 Simple Rules</title>
		<link>http://2012-2013.chriskrycho.com/web/good-programming-in-3-simple-rules/</link>
		<pubDate>Wed, 04 Jul 2012 02:53:59 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=649</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In the last few years, I have seen a little great code, some good code, a lot of mediocre code, and overwhelming amounts of bad code. (A shocking amount of my own code from previous years &#8211; especially when I was just starting &#8211; goes in the last two categories, alas.) The longer I have been at it and the more I have read (whether random articles on the web or the excellent <a href="http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/?tag=designgineering-20"><cite>Code Complete</cite></a>), the more I have concluded that good programming is simple. Incredibly hard, but simple. In fact, it is so simple, that you can sum it up in three short, easy to remember rules:</p>

<ol>
<li>Write code for people, not for computers.</li>
<li>Don&#8217;t repeat yourself.</li>
<li>Only do one thing at a time.</li>
</ol>
<!--more-->
<p>If you can remember to practice each of these things, you can write good code. The problem is that they&#8217;re all <em>hard</em>. They require discipline, and the latter two in particular sometimes require careful thought. But if you get them right, you can write good software in any language, in any paradigm.</p>

<h3>Write code for people, not for computers</h3>

<p>This is the most important of the three rules, and the foundation underpinning the latter two. Write your code in such a way that people can understand it. Use meaningful variable names. Don&#8217;t use a complicated program flow where a simple one will do. Break your logic down into discrete chunks. Don&#8217;t &#8220;golf&#8221; and try to cram as much into a single line as possible. Use a code style that has some white space in it, that breathes a little. If your files start getting painfully long to scroll through, break them apart into separate files. Make it easy on people and let the computer do the hard bits.</p>

<p>Many programmers try to write for computers. They try to do things in a way they think will be faster, or that reduces the size of the application, or any number of other computer goals. Those can be admirable aims, but they should always be secondary. Your first aim &#8211; always &#8211; should be to write code that people can understand.</p>

<p>Your compiler or interpreter will handle quite a variety of styles of code. It will interpret <code>n</code> and <code>numOfObjects</code> equally happily. Humans, on the other hand, will not. And humans will be reading your code for a long time. This is true even of little tool scripts you write for yourself. Say you move on and then come back to it in a few years, but need to tweak it a little; which would you rather read: a well-commented script with meaningful method and variable names, or one without comments and with meaningless names?</p>

<p>So write for people. Write for the people who will be maintaining the code &#8211; either your future self, or others. Make it easy to understand what you&#8217;re doing. If you have to do something clever to optimize a particular piece of code, write clear comments explaining <em>exactly</em> what your optimization does and why so that someone who comes along later will know what in the world is going on.</p>

<p>And remember that, in most cases, you won&#8217;t be able to out-optimize the compiler or interpreter anyway. A simple reality: compilers and interpreters are smarter than you. That&#8217;s not up for debate; its a simple fact. They&#8217;ve been improved over the course of decades by some absolutely brilliant thinkers and enormous amounts of hard work. There are exceptions to this rule, but it remains a rule nonetheless.</p>

<p>Write code for people, not for computers.</p>

<h3>Don&#8217;t repeat yourself</h3>

<p>I can&#8217;t count the number of times I&#8217;ve found the same chunk of code repeated in different places. Just today, I was working through a large function in legacy code and saw precisely the same pattern in two different parts of a conditional structure. I double-checked that there wasn&#8217;t anything weird going on, and then I promptly moved it out of the conditional.</p>

<p>When you repeat the same code in multiple places, you make it harder to maintain. Without fail, you&#8217;ll go back to make a change and miss one or more of the places you have that code. So instead of repeating yourself, find a way to put the code in one place and just reuse it. Make a function, or a class method, that you can just call whenever you need that functionality. If you call the same set of methods over and over again in the same way, wrap that pattern up in its own function.</p>

<p>This not only prevents you from making mistakes when you make changes, it also makes it easier to understand the code. Consider: is it easier, reading through a program for the first time (or the first time in a while) to understand a 30-line section deciding how to deallocate a block of memory, or to just call <code>clearMapVariableMemory()</code>? I can tell you which I&#8217;d prefer: the latter, every single time. You can always go look at the details later, but even then, it&#8217;s much easier to understand when it&#8217;s a standalone function.</p>

<p>The same principle can be applied to data as well as functions. If there is a set of variables you&#8217;re acting on frequently, instead of declaring them over and over again individually, or passing them around to methods repeatedly, encapsulate them in a class or a type and use that instead. Then, any changes to those data elements get captured universally &#8211; no need to go refactor in a dozen different places in the code.</p>

<p>Don&#8217;t repeat yourself. Your code will be much easier to maintain and understand.</p>

<h3>Only do one thing at a time</h3>

<p>Last but not least, and building on each of the two principles outlined above: each piece of your code should only do one thing at a time. This is true at every level: statements, functions and methods, and classes and objects.</p>

<p>A few years ago, another software developer showed me a buggy piece of code that had taken him several hours to sort out. He eventually traced the problem down to compiler-specific behavior on post-increment operators on pointers in C. (As it turns out, the C standard is nonspecific about the very unusual corner case he had discovered.) Fresh off reading <a href="http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/?tag=designgineering-20"><cite>Code Complete</cite></a>, though, I noted that the real problem wasn&#8217;t the murky order of operations. It was that the statement in question was doing too many things at once.</p>

<p>As I recall, the single line of code in question was part of a ternary statement that performed multiple steps of pointer arithmetic to compute the conditional, then multiple other steps of pointer arithmetic including that pesky post-increment operator depending on the outcome of that conditional. It was, first and foremost, a case of writing for the computer instead of another human: there&#8217;s no way anyone could know what the line did by reading it three times, much less once.</p>

<p>More than that, it was a case of trying to do too many things at once. Had he simply separated out the logic so that the arithmetic leading to the conditional received its own statement, the conditional check its own statement, and the results their own statements &#8211; rather than combining them into a single, multi-line operation &#8211; the problem never would have come up in the first place.</p>

<p>Keep it simple. Do one thing at a time. Make each line of code comprehensible on its own. Make each function something you can describe in a sentence. Don&#8217;t get and change and set data in the same function. Make each object represent a single entity, even if that entity is a composition of other entities. This keeps things comprehensible for people. None of us can hold all of a 2000-line method in our heads, and we shouldn&#8217;t have to, either: there&#8217;s never a good reason for a 2000-line method, instead of a series of smaller methods that make up the various parts of that big method.</p>

<p>To be sure, you can get carried away with this, as with anything. Doing one thing at a time will mean writing plenty of methods that include many other methods. The point of each part of the code should be clear, though. The moment it isn&#8217;t, your comprehensibility goes down, maintainability goes down, and costs go up.</p>

<p>Only do one thing at a time.</p>

<h3>Good programming in practice</h3>

<p>Good programming is hard work. I&#8217;ve been programming for four years now &#8211; not long, in the grand scheme of things, but long enough to see quite a few problems, my own not least. In that span, it&#8217;s become clear to me that we make good programming harder by not sticking to these simple rules. Getting them right is hard enough; it is not always obvious where to draw the line in a class or method. This is a skill; programmers have to invest real time and thought to be <em>good</em> programmers. But if we don&#8217;t follow these simple, we make all our tasks that much harder.</p>

<p>Write code for people, not for computers.</p>

<p>Don&#8217;t repeat yourself.</p>

<p>Only do one thing at a time.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>649</wp:post_id>
		<wp:post_date>2012-07-03 21:53:59</wp:post_date>
		<wp:post_date_gmt>2012-07-04 02:53:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>good-programming-in-3-simple-rules</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="dry"><![CDATA[DRY]]></category>
		<category domain="post_tag" nicename="maintenance"><![CDATA[maintenance]]></category>
		<category domain="post_tag" nicename="object-oriented"><![CDATA[object-oriented]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[84]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[good programming]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[If you can practice these three simple rules, you can write good code. The trick is that they're hard. They require discipline.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_blog@pjking.net</wp:meta_key>
			<wp:meta_value><![CDATA[2012-07-03 23:42:54|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>285</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>blog@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>108.230.21.148</wp:comment_author_IP>
			<wp:comment_date>2012-07-03 23:42:54</wp:comment_date>
			<wp:comment_date_gmt>2012-07-04 04:42:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I cringe whenever I have to write a comment. Code that NEEDS to be commented is bad code.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1341376974.8311";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>286</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-07-03 23:46:16</wp:comment_date>
			<wp:comment_date_gmt>2012-07-04 04:46:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Generally, I agree – but it depends on what sorts of things you're doing. When it's a complex algorithm, a description of the algorithm, or a relation of the code to the formal proof, is often helpful. Since that's been common in the problem domains I'm dealing with, I probably see more need for it.

Also: they're essential when you're doing maintenance on existing codebases, because it's not always possible (as a contractor especially) to refactor everything, and in a 2300-line function, that comment will save your sanity.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>285</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1341377177.083";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>288</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>blog@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>108.230.21.148</wp:comment_author_IP>
			<wp:comment_date>2012-07-04 08:34:06</wp:comment_date>
			<wp:comment_date_gmt>2012-07-04 13:34:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're second statement supports my point well; that's bad code. Also, in my experience, comments are never as well maintained as the code itself, so you often have legacy code with comments explaining something that doesn't exist anymore, or has been modified beyond the intention/description of the comment.

Even with mathematical formulas, there are ways to write code that is more self-documenting: writing APIs with descriptive naming conventions, linking to outside (website) documentation for proofs/explanations, and still using short methods (regardless of the length and complexity of the total formula). 

Also, keep in mind when I say that comments indicate bad code, I obviously don't mean that documentation indicates a bad API...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>286</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1341408846.8339";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>289</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-07-04 10:48:08</wp:comment_date>
			<wp:comment_date_gmt>2012-07-04 15:48:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good points through and through. My note on comments was mostly mean to highlight the fact that writing them is still very often good practice, because there is so much bad code out there. Coming at it from different angles.

I hadn't considered the distinction between documentation and comments before, to be honest, but it's a good one. A careful documentation of the algorithm in documentation (including the styles that produce javadoc/etc.), and keeping methods short definitely obviates the vast majority of cases where you'd need inline comments. (The case of a hand-optimization should be about it, but as I noted in the post, it's pretty rare that you can out-optimize the compiler.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>288</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1341416888.6819";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8201</wp:comment_id>
			<wp:comment_author><![CDATA[website]]></wp:comment_author>
			<wp:comment_author_email>ingedellit@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://onlineadipex.org/what-effects-of-adipex-cause-significant-weight-loss</wp:comment_author_url>
			<wp:comment_author_IP>69.46.64.49</wp:comment_author_IP>
			<wp:comment_date>2013-10-14 16:35:53</wp:comment_date>
			<wp:comment_date_gmt>2013-10-14 20:35:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Having multiple partners prior to being committed can

be a great sexual exploration and learning experience.

Allow your man to live out his "Peeping Tom" fantasies without the stigmatism of being thought of as a pervert.

Surprisingly in a Catholic dominated country homosexuality

is widely accepted in the Philippines compared to other cultures, even to dominant American culture but

there is still much discrimination towards these people.

my web site: <a href="http://onlineadipex.org/what-effects-of-adipex-cause-significant-weight-loss" rel="nofollow">website</a>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1381782953.205833911895751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Restructuring Source, Eclipse CDT, Makefile Errors</title>
		<link>http://2012-2013.chriskrycho.com/web/restructuring-source-eclipse-cdt-makefile-errors/</link>
		<pubDate>Wed, 25 Jul 2012 21:51:06 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=679</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick note to the world: beware of leftover makefiles if you restructure a project in Eclipse CDT. Eclipse will happily create new makefiles with the appropriate information in them when you restructure you code - if, for example, you move source and header files into their own directories instead of being in one big blob at the root - but it won't delete the old ones. As a result, you're likely to see that ever-so-informative <code>make: *** No rule to make target `calcVCE.o', needed by `cplus2.exe'.  Stop.</code> message that <code>make</code> generates when it's looking for a file it can't find. The old makefile is still hanging around, and Eclipse happily tries to run <code>make</code> against it. The easy solution is just to delete all your old makefiles when restructuring code and let Eclipse CDT rebuild them for you from scratch.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>679</wp:post_id>
		<wp:post_date>2012-07-25 16:51:06</wp:post_date>
		<wp:post_date_gmt>2012-07-25 21:51:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>restructuring-source-eclipse-cdt-makefile-errors</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cdt"><![CDATA[CDT]]></category>
		<category domain="post_tag" nicename="eclipse"><![CDATA[Eclipse]]></category>
		<category domain="post_tag" nicename="makefiles"><![CDATA[makefiles]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="source-structure"><![CDATA[source structure]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Eclipse]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[If you restructure a project in Eclipse CDT. It will happily create new makefiles, but it won't delete the old ones.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>We live in the future</title>
		<link>http://2012-2013.chriskrycho.com/web/we-live-in-the-future/</link>
		<pubDate>Fri, 10 Aug 2012 01:36:08 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=687</guid>
		<description></description>
		<content:encoded><![CDATA[I am composing this message on a laptop via my Verizon 4G data connection in an airport over 800 miles away from my home less than two hours after we left that home.

We live in the future. Imagine trying to explain that sentence to someone 150 years ago - or, parts of it, even 50 years ago - and you'll see what I mean.<!--more-->

Let's break that first statement down a bit and you'll see what I mean. Unlike the tools available to the vast majority of humans who have ever lived, I am writing on a computing device that is capable of performing over 4 _billion_ computations every second. It is connected to the internet - a vast connection of these computers capable of sharing data at enormous speeds and now responsible for the creation of more data every day than existed in recorded form in all human history prior to its invention. This connection happens via radio signals propagating through the air to my cell phone - a device capable of transmitting my voice as well as videos, pictures, and text almost instantaneously to any point in the world, and another computing device of comparable processing (within the same order of magnitude; it's close enough), which can fit in my pocket. These words will reach you via that same medium, faster than they could have with any previously devised form of communication.

Add to this that I took a photograph using that phone while 30,000 feet in the air - a vantage point that, 100 years ago, no human had ever seen. It has now been posted to a variety of social networks that link me over that same internet to almost every person I have known since high school; they can now see that picture and enjoy the view despite in every case being separated from me by tens, hundreds, or even thousands of miles, with no delay. Both the phone and the computer are operating without access to any external power source.

I could, if I so desired, make a video call - yes, just like in the Jetsons - from either the laptop or the cell phone, and have a real-time conversation with a friend or family member anywhere in the world, able to enjoy facial expressions and gestures along with sound. Increasingly, I could do so in visual quality rivaling real life.

This is, simply put, amazing. If you look at science fiction of the past fifty years, we have already achieved many of the predictions offered. Space travel remains uncommon (though "that is changing as privatization occurs":http://www.spacex.com/), and "jetpacks":http://www.youtube.com/watch?v=1y3rKRn1Qwg&noredirect=1 and "flying cars":http://www.terrafugia.com/ are rare and expensive. AI remains improbably at best. But we have achieved an awful lot. It's hard to imagine what the next hundred might hold. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>687</wp:post_id>
		<wp:post_date>2012-08-09 20:36:08</wp:post_date>
		<wp:post_date_gmt>2012-08-10 01:36:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>we-live-in-the-future</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cell-phone"><![CDATA[cell phone]]></category>
		<category domain="post_tag" nicename="future"><![CDATA[future]]></category>
		<category domain="post_tag" nicename="jetpack"><![CDATA[jetpack]]></category>
		<category domain="post_tag" nicename="laptop"><![CDATA[laptop]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="spacex"><![CDATA[SpaceX]]></category>
		<category domain="post_tag" nicename="technology"><![CDATA[technology]]></category>
		<category domain="post_tag" nicename="terrafugia"><![CDATA[Terrafugia]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[textile2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[I am composing this message on a laptop via my Verizon 4G data connection in an airport over 800 miles away from my home. Amazing.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1129</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>150.195.11.26</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 09:48:48</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 15:48:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Modern technology truely staggers the mind when you really break it down.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1354290528.9456";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Don&#039;t Sell (Out)</title>
		<link>http://2012-2013.chriskrycho.com/web/dont-sell-out/</link>
		<pubDate>Wed, 22 Aug 2012 04:27:43 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=690</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today, it came to my attention that <a href="http://www.avid.com/US/">Avid</a>, maker of various audio and video processing tools &#8211; tools you've heard of if you're in those industries, high profile names like Pro Tools - has closed down the main office responsible for developing Sibelius and sourced the development to a team in the Ukraine.</p>
<p>Nothing against the Ukrainians, but shutting down the London development office responsible for nearly two decades and replacing it with a team a third its size does not bode well for future development.</p>
<a href="http://v4.chriskrycho.com/web/files/2012/08/sibelius-7.jpeg"><img src="http://v4.chriskrycho.com/web/files/2012/08/sibelius-7.jpeg" alt="Box art for Sibelius 7" title="sibelius-7" style="max-width: 48%; float: left; margin-right: 1em; margin-top: 1em;" /></a>
<p>This came out in as underhanded a way as possible, with the sorts of PR doublespeak and carefully prepared press releases I've come to expect from large corporations. Avid's statements indicated that they were consolidating their engineering efforts in order to save money. Since Sibelius seems to be quite profitable, it's clear that Avid is choosing to bleed the product to support its other goals. This move, in other words, reeks of bean-counting trumping any love of product or any real concern for the customers that have invested in Sibelius over the last several decades - invested more than money. <!--more--></p>
<p>If Avid actually cared about its own employees or about the software, the company would sell Sibelius back to its founders, Ben and Jonathan Finn, who have offered <em>twice</em> to buy the company back, in order to keep the software going and its developers employed. Avid will have none of it. They want the profits with none of the investment.<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup></p>
<p>This sort of things is increasingly common in the tech industry, and it's tragic. A large corporation will buy out a smaller one for the talent, or for the profitable software which it then runs into the ground by mismanagement, or just to stamp out possible competition with its own offerings. The market is poorer for it, the original developers watch their vision founder on the hard rocks of corporate bureaucracy, and the users lose out in the end.<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup></p>
<p>There's a takeaway here for developers. If you care about your product at all &#8211;&#160;and I'm assuming you do, because if you're just in it for the money, you're probably not making the kind of product I buy anyway &#8211;&#160;then don't sell. The moment you sell your company, no matter how good the sum, you've sold out. I've seen it happen too many times to believe otherwise.<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup></p>
<p>Truth be told, I don't blame you. Not really. It's hard to turn down millions of dollars as a reward for your hard work. The deal may look quite sweet up front, especially when the buyers have every reason to persuade they'll take good care of your baby. But they won't. They don't love your creation like you do; in some sense, they can't. They haven't poured the hours of effort into it that you have; they don't understand the beautiful intricacies that you do; they don't have the passion that drove you to create it in the first place.</p>
<p>Your product may not wither on the vine the first month or year after it's bought, but the time will come when someone high up the food chain is pushing numbers around &#8211; someone who loves numbers but doesn't love product, and sad to say but there are a lot of those giving the quality MBAs a bad name &#8211; and your product will suddenly face the chopping block. Either it will die, or its developers will be forced to make compromises they would never have made under better leadership, or the product will simply be pushed into a niche it was never meant for. <sup><a href="#fn4" class="footnoteRef" id="fnref4">4</a></sup> If you sold it, you're out of luck. Maybe you'll be able to persuade the company to sell it back to you, but more likely they'll take the profits until they run the product into the ground.</p>
<p>So don't sell out &#8211; which is to say, don't sell. Don't take the money they'll hand you if you care about the product you've made, no matter how tempting. I, your user, need you to hold on to the vision. If you're ready to step aside, that's okay &#8211; but find someone to replace you who shares your love of the product and your vision for the niche it fills in the market. You owe that to the users who have gotten you where you are. We want nothing more than to keep supporting you as you make the great products we love.<sup><a href="#fn5" class="footnoteRef" id="fnref5">5</a></sup></p>
<section class="footnotes">
<hr>
<ol>
<li id="fn1"><p>The <a href="http://www.sibelius.com/cgi-bin/helpcenter/chat/chat.pl?com=thread&amp;start=602525&amp;groupid=3">post</a> is only available to subscribers, so here's the text of Ben and Jonathan Finn's comments:<a href="#fnref1">&#8617;</a></p>
<blockquote>
<p>We were very concerned to hear earlier this month that Avid is terminating the jobs of the Sibelius development team in London and handing the software over to other programmers, apparently to cut costs. As far as we know, Sibelius continues to be extremely successful, so this cost-cutting is a response to financial problems elsewhere in Avid, not with Sibelius itself.</p>
<p>Ever since then we have been quietly trying to do everything we can to change this situation, including twice offering to buy Sibelius back from Avid. However, Avid has declined. While they haven&#8217;t given a reason, we assume that Sibelius is a substantial source of profits to them, so they don&#8217;t want to sell it to anyone.</p>
<p>We naturally feel very sad about this treatment of our friends and colleagues who have been key to making Sibelius a success, and who have become the world experts in this specialized field. We are also very grateful to the many Sibelius users who have expressed their concern and support; though at this point, it seems unlikely that any protests will change Avid&#8217;s mind.</p>
<p>We hope Sibelius nonetheless continues to be the world&#8217;s most successful music notation software.</p>
<p>Ben &amp; Jonathan Finn Sibelius founders</p>
</blockquote>
</li>
<li id="fn2"><p>So will the big company that makes this move in the end. This is a surefire way to lose your customers. More on that tomorrow in the form of an open letter to the folks at Avid &#8211; when I'm less angry and can write more rationally.<a href="#fnref2">&#8617;</a></p></li>
<li id="fn3"><p>I've seen some folks suggesting that the solution here is open source. That sounds nice in theory, but the reality is that I've never seen an open source product that could compete with a closed source product in the areas that matter for consumer software. Linux is great, but there's a reason the &quot;year of the Linux desktop&quot; is permanently mythical. If you want really top-notch software, you'll pay for it, because people have to eat. There's more to say about this, but that's for another post.<a href="#fnref3">&#8617;</a></p></li>
<li id="fn4"><p>This is the third time I've been bitten by this in the last six months. It's getting old. I saw it with <a href="http://v4.chriskrycho.com/art/reflections/mass-effect-3-and-art-as-dialectic/" title="Mass Effect 3 and Art as Dialectic"><cite>Mass Effect 3</cite></a>, which bore the clear imprint of corporate takeover killing company vision and culture with EA taking over Bioware a few years ago. I saw it with <a href="http://pandodaily.com/2012/07/20/why-googles-sparrow-acquisition-just-ruined-my-morning/" title="Why Google&#39;s Sparrow Acquisition Just Ruined My Morning">Sparrow</a>, which has now abandoned all future development on a product lots of Mac and iOS users were excited about after its developers were acquired &#8211; for talent, not product &#8211; by Google. And now I've seen it with Sibelius, just a few short years after Avid purchased it.<a href="#fnref4">&#8617;</a></p></li>
<li id="fn5"><p>Should Ben or Jonathan Finn happen to read this, understand: I'm not criticizing your decision. Hindsight is always 20/20, and I've no doubt Avid looked like a good move at the time. I wish you the very best of luck in reacquiring Sibelius, and if you do I'll be one of your first customers and one of your loudest supporters. And should Daniel Spreadbury happen by, know that you have my very highest regard and thanks for the support &#8211; some of it despite official statements that my situation was very much <em>not</em> supported &#8211;&#160;over the last couple years.<a href="#fnref5">&#8617;</a></p></li>
</ol>
</section>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2012-08-21 23:27:43</wp:post_date>
		<wp:post_date_gmt>2012-08-22 04:27:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-sell-out</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="acquisitions"><![CDATA[acquisitions]]></category>
		<category domain="post_tag" nicename="avid"><![CDATA[Avid]]></category>
		<category domain="post_tag" nicename="customer-service"><![CDATA[customer service]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="jerk-moves"><![CDATA[jerk moves]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="sibelius"><![CDATA[Sibelius]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[So don't sell out—which is to say, don't sell. Don't take the money they'll hand you if you care about the product you've made, no matter how tempting.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_pj@pjking.net</wp:meta_key>
			<wp:meta_value><![CDATA[2012-08-22 08:38:19|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>751</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>pj@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>38.64.96.1</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 10:15:12</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 15:15:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ooh burn. That's like telling a (stable) studio musician that he can't make good music because he's not part of a (volatile) indie band.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345648512.2866";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>752</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 10:19:58</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 15:19:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd suggest it's more like saying that he's not going to be remembered as an innovative composer or songwriter. Which he won't, because he isn't. No one buys an album because of a studio musician who played on it - but that's no slur on his quality as a musician; it's a statement of what sort of musician he is. He may be the best studio cellist in the world, but that's not the same as being Yo-Yo Ma. We need really good studio cellists and developers who come at it from your angle. That's how I make my bread and butter, too. But they're different beasts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>751</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345648798.1078";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>765</wp:comment_id>
			<wp:comment_author><![CDATA[Dear Avid: Please Sell Sibelius &raquo; Designgineering &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/web/posts/dear-avid-please-sell-sibelius/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 07:46:03</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 12:46:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] now, I&#8217;m sure you can see where this is going: like many other long-time Sibelius users, I&#8217;m more than a bit disgruntled by the news. Given [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>770</wp:comment_id>
			<wp:comment_author><![CDATA[On Avid and Sibelius &raquo; Ars Artis &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/art/links/on-avid-and-sibelius/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 10:05:54</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 15:05:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Avid, the company that currently owns Sibelius, has decided to shut down the main development office and outsource development to a much smaller team in the Ukraine. You can read my general thoughts about the results of selling small, successful companies to bigger ones in Don&#8217;t Sell (Out): [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>749</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>pj@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>108.206.184.218</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 08:38:19</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 13:38:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am totally in it for the money! That's why, out of all the professions for which I could have prepared, I picked Computer Engineering.

If I wasn't in it for the money, I would be in a different field, namely, musical theater (fact).

And you're talking about $$,$$$,$$$!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345642699.8786";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>750</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 08:42:13</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 13:42:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Totally true. Because of that, however, I have strong reason to believe you're never going to be the impetus behind a project like Sibelius. (Like I said: this note really isn't for you; you're not the kind of developer who's likely to create a product I'm going to fall in love with before watching it get bought out by a behemoth and run into the ground.)

And yes, it is a lot of money. Unfortunately, that money comes with a cost.

This is one of the reasons why I've struggled with some of the ideas I've had for startups&hellip; because I can't see ever just handing it over to someone, unless I was <em>really</em> sure they had the same vision I did. Certainly I couldn't see selling it to a Google/Facebook/etc. if it were the sort of thing to catch their attention. Too much heart and soul in it.

You and I do programming for different reasons, methinks. I like the money aspect of it, and that contributes significantly to my doing it for a day job, but I'd still be doing web development and design just for the sheer joy of it even if it weren't a paying job. That is, after all, how it ended up becoming a paying job for me. ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>749</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345642933.0789";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>742</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-08-21 23:47:37</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 04:47:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Probably a good thing I didn't write that rant tonight…]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>741</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345610857.1105";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>741</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen Carradini]]></wp:comment_author>
			<wp:comment_author_email>stephen.carradini@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>75.143.65.9</wp:comment_author_IP>
			<wp:comment_date>2012-08-21 23:42:33</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 04:42:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm gonna go with "Yeah" on this one.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1345610553.808";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Dear Avid: Please Sell Sibelius</title>
		<link>http://2012-2013.chriskrycho.com/web/dear-avid-please-sell-sibelius/</link>
		<pubDate>Thu, 23 Aug 2012 12:45:54 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=712</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dear Avid,<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup></p>
<p>Monday, after noting that my copy of Sibelius 5 would not install on my new MacBook Pro - no surprise, it is after all 5-year-old software - I looked for some solutions online. It became clear that I wouldn't be able to get it going, so I started looking at upgrading to Sibelius 7, about which I've heard many good things. Upgrading was an easy decision: I've had nothing but good experiences with Sibelius since I bought a copy of Sibelius 3 back in 2004.</p>
<p>Along the way, I stumbled on <a href="http://www.sibeliusblog.com/news/upgrade-to-sibelius-7-and-save-25/">this blog post</a> by Daniel Spreadbury. Curious what he meant by &#8220;the recent news about Avid&#8217;s corporate restructuring&#8221;, I followed the link.</p>
<p>By now, I'm sure you can see <a href="http://v4.chriskrycho.com/web/posts/dont-sell-out/" title="Don&#39;t Sell (Out)">where this is going</a>: like many other long-time Sibelius users, I'm more than a bit disgruntled by the news. <!--more-->Given that Sibelius has been an essential part of my musical creative process for nearly a decade now - a length of time dwarfed by others' usage, but a quite substantial fraction of my own life - I was extremely disheartened to hear that you were disbanding the Sibelius development team in the interest of cost cutting.</p>
<p>To put it mildly, I think this a very poor decision. In cutting the development team, you are making it clear that you are unwilling to continue investing in the people who have made this such an excellent product. Indeed, your willingness to let go the very staff responsible for the creation and development of one of your more consistently profitable products suggests that you have only short-term profits in mind and are not, in fact, dedicated to the future success of the product &#8211; whatever your press releases may say.</p>
<p>Unfortunately for you and your shareholders, this strategy is almost certainly doomed to failure in the long-term. In the short-term, you will see increased profits from this move. You will not have to pay the salaries of these developers, and in outsourcing the development to Kiev, you will retain the ability to produce at least some code &#8211; the quality of such code is of course doubtful. In the long run, however, the outlook for Sibelius is not exactly good.</p>
<p>First, the software's current dominance across Hollywood, university music programs, and private composer use is not easily sustained. It is the result of years of diligent effort by the development team to keep advancing the tool and to provide the best customer support in the field. You may be able to keep the product afloat, but you've already dismissed the most important part of its success: the people who created it, know it best, and have the creative vision to keep advancing it year after year. That combination of passion, knowledge, and vision is irreplaceable, and <em>that</em> is what has made Sibelius great.</p>
<p>Second, please understand that in making this move, you are alienating your core customer base &#8211; people you cannot afford to lose. These are the people who promote your product for you, who advocate for it to others, who encourage them to buy it over Finale or any of the other music scoring on the market. If you lose these enthusiasts, you are almost certain to lose many other customers, as well. Excited, knowledgeable user proponents are essential for the success of any software &#8211; far more effective than any other kind of marketing &#8211; and your decisions are clearly not in the best interest of these customers.</p>
<p>Rather, your actions demonstrate that you do not value your product, you do not value the people who are your customers, and you do not value your employees. This, in turn, means that you are not the kind of company I am interested in supporting. Avid is now a company I will tell everyone I know to avoid &#8211; not out of malice, but simply because I would rather not see money flow to a company with such a poor attitude toward its employees, its products, and its customers.</p>
<p>Of course, it is easy to dismiss this letter as insignificant. I am just one customer, after all. And those others like me who are disappointed are still but a fraction of your customer base. Moreover, Sibelius is not your primary product; it's just a supplement to your profits.</p>
<p>However, as more and more of your customers come to share these conclusions about Avid, it will impact bottom line, and not in a way you like. Your poor treatment of Sibelius means that discerning customers will be slow to trust your promises about other products they rely on, including Pro Tools. Your poor treatment of the developers behind Sibelius means those same discerning customers will take their business to companies who value their employees more than you apparently do.</p>
<p>There is, however, a way out. It won't maximize your profits in the short term. It will, however, earn you the good will of the Sibelius community.</p>
<p>Sell Sibelius. It is <a href="http://www.artsjournal.com/slippeddisc/2012/07/sibelius-closure-founders-buyback-offer-rebuffed.html" title="Sibelius closure: inventors&#39; buyback offer rebuffed">public knowledge</a> that the Finn brothers<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> have offered at least twice to purchase the software back from you, in the dual interests of maintaining the momentum of the software and of taking care of the employees you have let go. Selling it back to them is the right move &#8211;&#160;for your customers, for the product, for the developers, and most importantly, for Avid. The goodwill of your customer base and the trust of your own employees are not small things in the long run.</p>
<p>As a long-time user of Sibelius, one of its many ardent fans, a frequent proselytizer, one of the many who have the highest respect for the Sibelius development team, please do the right thing by your customers and your former employees. You have <a href="http://community.avid.com/blogs/avid/archive/2012/07/23/avids-commitment-to-sibelius.aspx" title="Avid&#39;s Commitment to Sibelius @ community.avid.com blog">claimed</a> to care about the Sibelius community. Prove it. Show that you are interested in the best outcome for your customers and in the highest quality of products. That is the surest route to earning the trust of your customers and your employees &#8211;&#160;and therefore, the surest route to long-term, sustainable profitability.</p>
<p>Regards,</p>
<p>Chris Krycho</p>
<section class="footnotes">
<hr>
<ol>
<li id="fn1"><p>I am sending this letter to each of the Avid executives for whom I have contact information. If you share my sentiments about the treatment of the developers behind Sibelius, I suggest you contact them as well.<a href="#fnref1">&#8617;</a></p></li>
<li id="fn2"><p>Ben and Jonathan Finn were the original developers of Sibelius and the owners of the company until they sold it to Avid in 2006.<a href="#fnref2">&#8617;</a></p></li>
</ol>
</section>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>712</wp:post_id>
		<wp:post_date>2012-08-23 07:45:54</wp:post_date>
		<wp:post_date_gmt>2012-08-23 12:45:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dear-avid-please-sell-sibelius</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="avid"><![CDATA[Avid]]></category>
		<category domain="post_tag" nicename="ben-and-jonathan-finn"><![CDATA[Ben and Jonathan Finn]]></category>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="customer-service"><![CDATA[customer service]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="savesibelius"><![CDATA[SaveSibelius]]></category>
		<category domain="post_tag" nicename="sibelius"><![CDATA[Sibelius]]></category>
		<wp:postmeta>
			<wp:meta_key>_stcr@_chriswimlett@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2012-09-02 04:14:42|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[You claim to care about the Sibelius community. Prove it. Show that you are interested in the best outcome for your customers, employees, and products.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_yrag@garycarpenter.net</wp:meta_key>
			<wp:meta_value><![CDATA[2012-08-23 09:54:43|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_jpodgurs@indiana.edu</wp:meta_key>
			<wp:meta_value><![CDATA[2012-08-23 09:58:28|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_pj@pjking.net</wp:meta_key>
			<wp:meta_value><![CDATA[2012-08-23 11:52:10|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_derek@derekwilliams.net</wp:meta_key>
			<wp:meta_value><![CDATA[2012-08-24 20:36:31|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>807</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Wimlett]]></wp:comment_author>
			<wp:comment_author_email>chriswimlett@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>146.90.33.224</wp:comment_author_IP>
			<wp:comment_date>2012-09-02 04:14:42</wp:comment_date>
			<wp:comment_date_gmt>2012-09-02 09:14:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An excellent letter, Chris, that matches my feelings exactly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346577282.5466";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>786</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-08-25 22:14:40</wp:comment_date>
			<wp:comment_date_gmt>2012-08-26 03:14:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I certainly will... but alas, I don't expect to hear back from them at this point. Several days have gone by with no response whatsoever. :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>783</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345950880.5236";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>795</wp:comment_id>
			<wp:comment_author><![CDATA[Torsten Anders]]></wp:comment_author>
			<wp:comment_author_email>torsten.anders@beds.ac.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.torsten-anders.de</wp:comment_author_url>
			<wp:comment_author_IP>91.135.3.132</wp:comment_author_IP>
			<wp:comment_date>2012-08-28 07:54:07</wp:comment_date>
			<wp:comment_date_gmt>2012-08-28 12:54:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I appreciate and wholeheartedly support your letter to Avid, both in terms of its content and its tone. Thanks for taking the time to write it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1346158447.949";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>783</wp:comment_id>
			<wp:comment_author><![CDATA[Derek Williams]]></wp:comment_author>
			<wp:comment_author_email>derek@derekwilliams.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.derekwilliams.net</wp:comment_author_url>
			<wp:comment_author_IP>94.192.89.203</wp:comment_author_IP>
			<wp:comment_date>2012-08-24 20:36:31</wp:comment_date>
			<wp:comment_date_gmt>2012-08-25 01:36:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hear hear Chris!  Do let us know if you get any response.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345858591.2385";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1279</wp:comment_id>
			<wp:comment_author><![CDATA[Avid &amp; Sibelius | del 3 | Patrick Lindblom]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://patrick.lindblom.net/2012/12/29/avid-sibelius-del-3/</wp:comment_author_url>
			<wp:comment_author_IP>194.9.94.228</wp:comment_author_IP>
			<wp:comment_date>2012-12-30 08:10:50</wp:comment_date>
			<wp:comment_date_gmt>2012-12-30 14:10:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Det skapades en sajt för Sibelius Users, det har skrivits öppna brev (ex 1) (ex 2) till Avids ledning, det har skrivits i tidningar, onlinemagasin och rapporterats i podcasts i [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1356876650.4321711063385009765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>766</wp:comment_id>
			<wp:comment_author><![CDATA[Peter McAleer]]></wp:comment_author>
			<wp:comment_author_email>peter.mcaleer@mac.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.23.106.240</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 09:24:05</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 14:24:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Chris for this letter, it outlines much of how I feel about Avid's treatment of Sibelius, its employees, and its customer base, and how that in turn is bad news for Avid itself. If only they'd listen, they too would benefit.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345731845.3503";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>767</wp:comment_id>
			<wp:comment_author><![CDATA[Gary Carpenter]]></wp:comment_author>
			<wp:comment_author_email>yrag@garycarpenter.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.garycarpenter.net</wp:comment_author_url>
			<wp:comment_author_IP>109.153.67.200</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 09:54:43</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 14:54:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And did you receive a thank you from the CEO for reaching out?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345733683.7806";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>768</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 09:56:34</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 14:56:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not yet. I'm eagerly awaiting the form response. :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>767</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1345733794.343";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>769</wp:comment_id>
			<wp:comment_author><![CDATA[Jeremy Podgursky]]></wp:comment_author>
			<wp:comment_author_email>jpodgurs@indiana.edu</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.48.65.198</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 09:58:28</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 14:58:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please do the right thing and sell the software back to its creators. I have spent months learning Sibelius and it has become an invaluable instrument through which I compose. My private students have invested countless hours learning it and thousands of dollars purchasing it. Your business decisions are threatening the investment of thousands of hard-working musicians.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345733908.8696";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>771</wp:comment_id>
			<wp:comment_author><![CDATA[On Avid and Sibelius &raquo; Ars Artis &raquo; Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com/art/links/on-avid-and-sibelius/</wp:comment_author_url>
			<wp:comment_author_IP>199.96.156.113</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 10:09:22</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 15:09:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I published an open letter to the executives at Avid, imploring them to take the right step by their customers: sell the product back to its inventors, [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>772</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen Taylor]]></wp:comment_author>
			<wp:comment_author_email>staylor7@illinois.edu</wp:comment_author_email>
			<wp:comment_author_url>http://www.stephenandrewtaylor.net</wp:comment_author_url>
			<wp:comment_author_IP>76.195.221.161</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 10:20:16</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 15:20:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic letter Chris - I'm with you 100%, and I can tell you that the academic community, which has been a big supporter of Sibelius, is completely freaked out and dismayed by Avid's unwise decisions.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345735216.1166";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>773</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 10:25:59</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 15:25:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can imagine! In my time at the University of Oklahoma, the profs were about half and half between Sibelius and Finale (except my main prof, who still did everything with paper and pen and sent them off to a publisher: totally awesome in its own way) – and everyone was pretty well agreed that the good competition between the two benefits everyone. The students were mostly Sibelius users, and people were doing some amazing things with it – some quite avant-garde, some much more traditional, all of it interesting. I'd hate to see that go away.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>772</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345735559.8383";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>774</wp:comment_id>
			<wp:comment_author><![CDATA[Richard Vitale]]></wp:comment_author>
			<wp:comment_author_email>RichieVitale@richievitale.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.richievitaleblog.com</wp:comment_author_url>
			<wp:comment_author_IP>66.108.15.128</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 11:49:39</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 16:49:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A beautiful and eloquent letter setting the plight of Sibelius, Chris.
Thank you from all of  who use (and promote) Sibelius on a daily basis!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345740579.8382";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>775</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>pj@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>38.64.96.1</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 11:52:10</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 16:52:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why does Avid need to sell the product back? Would it not also be reasonable for them to reverse course (rehire the team, etc)?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345740730.0933";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>776</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://v4.chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 12:54:35</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 17:54:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sure! – but I don't see those employees trusting Avid enough to come back. Would you go back to a company that had let you go that way? (I wouldn't.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>775</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345744475.1219";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>PSA: jQuery Validate 1.10.0 &#039;accept&#039; method</title>
		<link>http://2012-2013.chriskrycho.com/web/psa-jquery-validate-1-10-0-accept-method/</link>
		<pubDate>Sat, 22 Sep 2012 20:38:10 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=729</guid>
		<description></description>
		<content:encoded><![CDATA[Just an FYI for any other potentially confused developers out there: the <a href="http://bassistance.de/jquery-plugins/jquery-plugin-validation/">jQuery Validate</a> plugin's <a href="http://docs.jquery.com/Plugins/Validation">documentation</a> is out of date as concerns the <a href="http://docs.jquery.com/Plugins/Validation#List_of_built-in_Validation_methods"><code>accept()</code> method</a>: I just spent an hour trying to figure out why <code>accept()</code> it isn't working... Of course, it works just fine, but I was missing an important piece of the puzzle.

Though the method used to be part of the main validation plugin, <em>this is no longer the case</em>. The method still exists, but it is now part of the <code>additional-methods.js</code>. Accordingly, if you try to use the <code>accept()</code> method without including the extra file, you're going to see the error message <code>Cannot call method 'call' of undefined</code> in your Javascript console.

The <code>additional-methods.js</code> script is part of the standard zip file download - it's just not necessarily obvious that you need to include the extra file to make the method work. Hopefully the documentation will get updated soon so others don't spend a bunch of time trying to figure out why a basic method isn't working!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>729</wp:post_id>
		<wp:post_date>2012-09-22 15:38:10</wp:post_date>
		<wp:post_date_gmt>2012-09-22 20:38:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>psa-jquery-validate-1-10-0-accept-method</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="public-service-announcements"><![CDATA[Public Service Announcements]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[As of version 1.10.0, jQuery Validate' accept() method is now part of additional-methods.js – not part of the basic plugin.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_eric.peyremorte@free.fr</wp:meta_key>
			<wp:meta_value><![CDATA[2013-01-16 07:50:38|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1999</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>mbhoneycutt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://trycatchfail.com</wp:comment_author_url>
			<wp:comment_author_IP>24.183.219.12</wp:comment_author_IP>
			<wp:comment_date>2013-03-18 19:39:48</wp:comment_date>
			<wp:comment_date_gmt>2013-03-18 23:39:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this post, you just saved a little of my hair.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363649988.343822002410888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2000</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>204.84.163.12</wp:comment_author_IP>
			<wp:comment_date>2013-03-18 19:42:03</wp:comment_date>
			<wp:comment_date_gmt>2013-03-18 23:42:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to have saved some of yours. I think I started my male-pattern baldness early…]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1999</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363650123.2323200702667236328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1404</wp:comment_id>
			<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
			<wp:comment_author_email>eric.peyremorte@free.fr</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.51.172.10</wp:comment_author_IP>
			<wp:comment_date>2013-01-16 07:50:37</wp:comment_date>
			<wp:comment_date_gmt>2013-01-16 13:50:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much ! when i added required: true validate was working but when removing not. This ran me mad :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1358344238.868835926055908203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1202</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>70.164.64.17</wp:comment_author_IP>
			<wp:comment_date>2012-12-11 11:13:52</wp:comment_date>
			<wp:comment_date_gmt>2012-12-11 17:13:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad it was helpful. I felt the same way--spent way too long trying to figure out what I was missing, and when I finally did, well... there was much facepalming.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1201</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1355246032.4077990055084228515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1201</wp:comment_id>
			<wp:comment_author><![CDATA[Michael]]></wp:comment_author>
			<wp:comment_author_email>michael@thelondonbranch.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thelondonbranch.com/</wp:comment_author_url>
			<wp:comment_author_IP>109.158.131.34</wp:comment_author_IP>
			<wp:comment_date>2012-12-11 06:19:09</wp:comment_date>
			<wp:comment_date_gmt>2012-12-11 12:19:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for this! Thought I was going mad. Great plugin, but their documentation is out of date; as you mentioned.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1355228349.5821";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>A professional writer: JaimieKrycho.com</title>
		<link>http://2012-2013.chriskrycho.com/web/a-professional-writer-jaimiekrycho-com/</link>
		<pubDate>Sat, 29 Sep 2012 14:02:34 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=743</guid>
		<description></description>
		<content:encoded><![CDATA[I have had the pleasure of designing a site for my lovely wife, <a href="http://jaimiekrycho.com" title="Jaimie Krycho's writing website">Jaimie Krycho</a>, a really excellent writer in the midst of launching her career. The site is about 90% there: it needs a couple more graphics elements; it needs some responsive tweaks so it doesn't look ridiculous on phones; it needs Retina graphics support. But it looks good and I'm glad to have it up.

The back end is a WordPress theme built from the ground up to support Jaimie's particular needs. The front end uses fonts from <a href="http://www.google.com/webfonts">Google Fonts</a>, <a href="https://typekit.com/fonts">Typekit</a>, and a free face using <code>@font-face</code>. The graphics are all by yours truly. Take a look! (And maybe enjoy her ongoing serial fiction while you're at it!

<p class="right"><a href="http://jaimiekrycho.com">jaimiekrycho.com&rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>743</wp:post_id>
		<wp:post_date>2012-09-29 09:02:34</wp:post_date>
		<wp:post_date_gmt>2012-09-29 14:02:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-professional-writer-jaimiekrycho-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="sites-i-built"><![CDATA[sites I built]]></category>
		<category domain="post_tag" nicename="sites-i-designed"><![CDATA[sites I designed]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Four Theses on Responsive Design</title>
		<link>http://2012-2013.chriskrycho.com/web/four-theses-on-responsive-design/</link>
		<pubDate>Mon, 08 Oct 2012 13:00:55 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=754</guid>
		<description></description>
		<content:encoded><![CDATA[A friend and fellow web designer and developer (indeed, someone who gets to do a lot more front-end design) recently asked me,

<blockquote>Chris&mdash;what do you think of "responsive" layouts? I'm not a big fan. In theory, it's a good idea. But it makes it difficult for ad placement, and in practice, I don't know that anyone really needs five different "views" for a site based on browser width/height.</blockquote>

So, some thoughts from a guy who's done a lot of reading, a lot of watching, and - alas - a lot less actual implementation than he'd like in the last year. (In other words: take these words with a grain of salt; they're observations on watching others in the process as much as they are born of my own experience.)

I think responsive design is a great idea, but it has to be done carefully and thoughtfully, especially when considering ad placement. <!--more-->The thoughtless implementations that prevail in a lot of bandwagon-riders' sites are <em>not</em> good patterns: they don't tend to work particularly well, they're a lot of extra work, and thus the cost-benefit analysis doesn't come out in their favor. A really good responsive design, on the other hand, is really delightful to use, and it actually shouldn't be much more work—though it does require modifying the workflow; see point 3 below.

Another way of putting this: good design is good design (whether responsive or not), and bad design is bad design (whether responsive or not). There are lots of good designers not yet doing responsive design - though I suspect they will be soon - and lots of bad designers doing responsive design (to everyone's chagrin).

Now, four theses born from my own experience (see <a href="http://chriskrycho.com">the rest of this site</a> for an implementation that I think works well, but not as well as it could - also <a href="http://www.theinvitedbirth.com">The Invited Birth</a> and <a href="http://independentclauses.com">Independent Clauses</a>):

<ol>
<li>Responsive is often coupled to fluid; this isn't necessarily the best choice. Fixed widths with various breakpoints can work a lot better—especially for ad-positioning! Most responsive sites I've seen in the last year are also fluid (my own included), but I've seen a couple that are coming at things a bit more sensibly and choosing fixed widths but with <em>different</em> fixed widths at the various <code>@media</code> breaks. For a site like the one my friend just put up, that would make much, much more sense.</li>

<li>Choosing your breakpoints sensibly is pretty much everything. Me, I'd probably pick one at around <code>520px</code> (do it <a href="http://www.alistapart.com/articles/howtosizetextincss/">in <code>ems</code></a>! use a <a href="http://www.alistapart.com/articles/more-meaningful-typography/">scale</a>!), and then potentially another at about <code>800px</code> (give or take a little on each). You then have three layouts, rather than five. I actually have four on this site, because I like letting the font size bump up again for much larger/higher-res screens; it just makes for a more pleasant reading experience. You can easily get away with just two (see the <a href="http://www.dts.edu">Dallas Theological Seminary site</a> for a really great example of this approach): one for particularly small screens, one for everything else—essentially, a phone layout and an everything else layout, since tablets can handle regular desktop sites just fine. Were I doing design for a client like the one my friend just finished - whose site inspired this conversation - I think I'd take the same approach <a href="http://johndyer.name">John Dyer</a> did with the DTS site: a single breakpoint is pretty much perfect.</li>

<li>Especially when thinking about ads, it really helps to think about responsive reflow right at stage 1 of the design process. It's much, much harder to add on at the end once the design is already done. When it's there in the beginning, you can think about the way blocks of content relate to each other and how they should be placed at each size, and then handle your content structure accordingly (where wrapper divs go, etc.). When you do it right up front, you also have a chance to discuss with the client how and where to prioritize the ad placement at various view sizes. I think we can all agree that having ads first in the content flow for a mobile page is terrible—but in terms of usability, so is having a full desktop site, which is just hard to navigate on a phone.</li>

<li><p>It's <em>way</em> better than the alternative of mobile-specific sites, which inevitably drop major parts of the content. I cringe every time my phone gets redirected to <code>m.some-site.com</code>, because I know I'll inevitably want the full version of the site at some point. (I often end up using the "request desktop version of site" option in Chrome for Android.) Having a responsive layout means you never skimp on the content, just display it in a different way that makes more sense for the viewport.</p>

<p>On a closely related note, you don't have to deal with thinking about messy canonical URL markers on every page for a mobile site that point search robots back to the "real" page. While this isn't too bad if you're built your back end carefully, it's one more piece of overhead I'm glad not to have to manage.</p></li>
</ol>

Some of the best writing I've seen on the subject has come out of the folks at <a href="http://paravelinc.com/">Paravel</a> - Dave Rupert, who I linked in a previous comment on retina images, being one of their guys—and there's some great stuff by <a href="http://trentwalton.com">Trent Walton</a> (another of their guys), as well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>754</wp:post_id>
		<wp:post_date>2012-10-08 08:00:55</wp:post_date>
		<wp:post_date_gmt>2012-10-08 13:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>four-theses-on-responsive-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ad-placement"><![CDATA[ad placement]]></category>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="layout"><![CDATA[layout]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="responsive-design"><![CDATA[responsive design]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[responsive design]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Responsive design is a great idea, but it has to be done carefully and thoughtfully, especially when considering ad placement. Bad design is bad design.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Custom Fonts on Kindle</title>
		<link>http://2012-2013.chriskrycho.com/web/custom-fonts-on-kindle/</link>
		<pubDate>Sun, 07 Oct 2012 15:18:15 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=784</guid>
		<description></description>
		<content:encoded><![CDATA[The standard typeface for the Kindle, Caecilia, works well enough: it's a well-designed, high contrast slab serif that matches the needs of the low-contrast, low-resolution Kindle screens well. It's also not even close to being a really great reading face. The new Kindle Paperwhite has gorgeous typography, by all accounts, but if you have an older Kindle, you don't have to buy a new one to start getting some of the benefits of better typography.

I recently discovered that it is possible, with a fairly small amount of effort, to put whatever fonts you like on your Kindle, <em>without jailbreaking</em>. Here's how. <!--more-->

<ol>
   <li>First, find the font you want to use for your Kindle.
      <ol class="tight" type="i">
         <li>
            <p><span style="text-decoration: underline">Technical requirements:</span> It'll need to be either OpenType (<code>.otf</code>) or TrueType (<code>.ttf</code>) to start. You ultimately need it to be in <code>.ttf</code> format - some instructions I've seen suggest the Kindle will recognize even a <code>.otf</code> as long as the extension is changed, but I'm not sure if that's true. There are online converters you can use, and for best results if you have <code>.otf</code> files, you should <a href="http://www.freefontconverter.com/">convert them</a> to <code>.ttf</code> before continuing.</p>

            <p><em>Make sure you're doing this legally</em>. Use a font that doesn't forbid conversion in its End User License Agreement. You can find lots of free fonts on the web, many of them with open licenses. You might start at <a href="http://www.dafont.com/">DaFont.com</a> and <a href="http://www.fontsquirrel.com/">FontSquirrel</a>, which have very long lists of free fonts</p
         </li>
         <li><span style="text-decoration: underline">Appearance suggestion:</span> Find a medium weight (thickness) font. Thinner fonts won't display well and will be hard to read. Many of the free fonts you can find online include multiple weights; generally you'll want to use a <strong>Medium</strong> rather than <strong>Regular</strong> weight for the base. One great free font that might work well even in its normal weights is the free <a href="http://www.fontsquirrel.com/fonts/Crimson">Crimson</a>.</li>
      </ol>
   </li>
   <li>
      <p>You'll need font files named <code>[fontname]-Regular.ttf</code>, <code>[fontname]-Italic.ttf</code>, <code[fontname]-Bold.ttf</code>, and <code>[fontname]-BoldItalic.ttf</code>. They don't have to have these names when you find them; all you really need to do is find the regular, italic, bold, and bold-italic versions of the font file, then rename them to match this format.</p>

      <p>One friend used Liberation Sans (<a href="http://www.dafont.com/search.php?q=liberation+serif">free at DaFont.com</a>), so his fonts ended up being named <code>LiberationSans-Regular.ttf</code>, <code>LiberationSans-Italic.ttf</code>, <code>LiberationSans-Bold.ttf</code>, and <code>LiberationSans-BoldItalic.ttf</code> after renaming them.</p>
   </li>

   <li>Connect your Kindle to the computer, and open it in Windows Explorer or Finder (depending on whether you're on Windows or a Mac). At the base directory of the Kindle (the same level where you'll see the <code>documents</code>, create a new folder called <code>fonts</code>. Put the font files you created in step 3 in the folder. <strong>Note: you <em>must</em> have all four files outlined above.</strong></li>

   <li>From here, the steps differ depending on whether you're on a Keyboard, or a Touch or Paperwhite. (If some enterprising reader wants to tell me which category the base model with just a five-way fits into, that would be excellent.)
      <ul>
         <li>
            <p><strong>Kindle Keyboard:</strong></p>
            <ol class="tight">
               <li>Install <a href="http://calibre-ebook.com">Calibre</a> (you can find the download for your operating system <a href="http://calibre-ebook.com/download">here</a>). Calibre is great general software to have for your Kindle anyway.</li>

               <li>Once you have Calibre installed, you'll need to install the <strong>Kindle Collections</strong> plugin.
                  <ol class="tight" type="i">
                     <li>Go to the Plugins button (it may be in the extended part of the menu; there's a button on the right to enable it). If you click the drop down next to the Plugins button, you'll see the option <strong>Get plugins to enhance Calibre</strong>; choose that.</li>
                     <li>It should bring up a menu titled User Plugins, and just below that a drop down labeled <strong>Filter list of plugins</strong>. Make sure that <strong>Not installed</strong> is selected. Looking through the list, find <strong>Kindle Collections</strong> (it's third from the top on my list). Install it.</li>
                     <li>You'll be prompted to add the plugin to toolbars or windows. I'd add it to <strong>The main toolbar when a device is connected</strong> and <strong>The menubar when a device is connected</strong>.</li>
                     <li>It will prompt you to restart Calibre, do so.</li>
                  </ol>
               </li>

               <li>Now, back to Calibre: if you have it up, it should note that your device is connected, and you should be able to look at all the books on it. You should also see the <strong>Kindle Collections</strong> button and menu item (again, it may be in the extended toolbar area). Click it and then select <strong>Modify Kindle settings</strong>.</li>
               <li id="step7">Now, we'll actually enable the font on the Kindle:
                  <ol class="tight" type="i">
                     <li>Under <strong>Font Family</strong>, choose the new font you added (opt for the one with a regular name if there is one with an underscore or other strange character in there).</li>
                     <li>Check the box labeled <strong>Allow using user font</strong>.
                     <li>Click <strong>Save</strong>. You'll be prompted to restart your Kindle. In case you miss the on-screen instructions on how to restart the Kindle, here's a quick walkthrough:
                        <ol class="tight" type="a">
                           <li>Eject it from the computer.</li>
                           <li>Once the Kindle comes up, go to the home screen (click <strong>Home</strong>).
                           <li>Click <strong>Menu</strong> and choose <strong>Settings</strong>.</li>
                           <li>Once the Settings menu is up, click <strong>Menu</strong> and then choose <strong>Restart</strong>.</li>
                        </ol>
                     </li>
                     <li>Once the Kindle comes back up up (and it'll take a few to come all the way back up and reload your library), load any book. Click the <strong>Aa</strong> key to change your font settings, and under Typeface choose <strong>alt</strong> if it's not already selected. Adjust your preferred font size, words per line, and line spacing as desired, and away you go.</li>
                  </ol>
               </li>
            </ol>
         </li>
         <li>
            <p><strong>Kindle Touch/Kindle Paperwhite</strong><sup><a href="#fn1" name="fn1ret" class="footnoteRef">1</a></sup></p>
            <ol class="tight">
               <li>
                  <p>Create a blank file called <code>USE_ALT_FONTS</code> at the root level of the Kindle (the same level where you created the <code>fonts</code> directory).</p>
                  <ul>
                     <li>If on Windows, launch Notepad and save a file with that name to the Kindle. <em>Make sure it has no extension. Delete the extension manually if necessary.</em></li>
                     <li>If on Mac or Linux, launch the Terminal (Mac: Applications &rarr; Utilities &rarr; Terminal) and create the file by typing <code>touch USE_ALT_FONTS</code>. The file will be created in your home directory; go ahead and move it to the root of the Kindle. (*nix nerds can obviously do this the easy way.)</li>
                  </ul>
               </li>
               <li>Eject the Kindle from the computer. Perform a full restart on it (Menu &rarr; Settings, Menu &rarr; Restart).</li>
               <li>Open up a book or document, and try changing the font. You should see your font there.</li>
               <li>
                  <p>If you do not, return to the home page, tap the search icon, and type in <code>;fc-cache</code> and hit the return key on the screen keyboard. Wait a few minutes; the Kindle will sort of flash the screen and then reset to the normal view. You should now be able to select the font you installed.</p>
                  <p><em>Note:</em> if you change the fonts by moving new ones into the font directory, this final step is the only one you need to do; you don't have to do a full restart each time.</p>
               </li>
            </ol>
         </li>
      </ul>
   </li>
</ol>

And that's it! You should now be up and running with a typeface of your choosing - enjoy your reading!

<section class="footnotes">
<hr/>
<ol>
<li id="fn1">Thanks to <a href="#comment-1741">commenter Craig</a> for pointing out this solution.<a href="#fn1ret">↩</a></li>
</ol>
</section>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>784</wp:post_id>
		<wp:post_date>2012-10-07 10:18:15</wp:post_date>
		<wp:post_date_gmt>2012-10-07 15:18:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>custom-fonts-on-kindle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="calibre"><![CDATA[Calibre]]></category>
		<category domain="post_tag" nicename="kindle"><![CDATA[Kindle]]></category>
		<category domain="post_tag" nicename="kindle-collections"><![CDATA[Kindle Collections]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="walkthrough"><![CDATA[walkthrough]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[kindle fonts]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Learn how to put custom type faces (fonts) on your Kindle—without jailbreaking it! Use Calibre & Kindle Collections to make your reading experience awesome.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_craig.muth@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-03-01 03:00:05|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_festadellazucca@hotmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-04-05 09:11:18|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_suzidownunder@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-08-09 21:55:38|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_izhitomirskiy@yahoo.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-09-11 18:41:02|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_lucas.mantaray@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-11-04 18:27:49|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2350</wp:comment_id>
			<wp:comment_author><![CDATA[Federico]]></wp:comment_author>
			<wp:comment_author_email>festadellazucca@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.53.48.88</wp:comment_author_IP>
			<wp:comment_date>2013-04-10 17:05:06</wp:comment_date>
			<wp:comment_date_gmt>2013-04-10 21:05:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found on Mobilereads last month came out a plugin for Calibre to implement hyphenation on azw3 files. More details you can find on the forum. 

Here's the link!

http://www.mobileread.com/forums/showthread.php?t=208534]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2301</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365627906.56540393829345703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2227</wp:comment_id>
			<wp:comment_author><![CDATA[Federico]]></wp:comment_author>
			<wp:comment_author_email>festadellazucca@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.31.237.201</wp:comment_author_IP>
			<wp:comment_date>2013-04-05 09:11:18</wp:comment_date>
			<wp:comment_date_gmt>2013-04-05 13:11:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It may sound a little off topic, I apology for that — these days I'm up with typographical concerns for my PaperWhite! 
Does somebody of you guys know if it may work a similar trick (to create an empty file in the root folder) to enable left-alignment (rags) instead of standard justification? Unfortunately Kindle PW/Touch lack of the .pref file which you could edit on the other devices and I couldn't find a solution yet.
Thank you in advance,
Federico]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365167478.6799509525299072265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6047</wp:comment_id>
			<wp:comment_author><![CDATA[Suzi]]></wp:comment_author>
			<wp:comment_author_email>suzidownunder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.149.64.128</wp:comment_author_IP>
			<wp:comment_date>2013-08-16 19:51:12</wp:comment_date>
			<wp:comment_date_gmt>2013-08-16 23:51:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nope! I was right the first time....it only works on the books I add; not those from Amazon :(
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5763</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376697072.1491219997406005859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1748</wp:comment_id>
			<wp:comment_author><![CDATA[Craig]]></wp:comment_author>
			<wp:comment_author_email>craig.muth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.234.232.54</wp:comment_author_IP>
			<wp:comment_date>2013-03-01 12:10:52</wp:comment_date>
			<wp:comment_date_gmt>2013-03-01 17:10:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool!  Yeah, no jailbreaking required.  Just create an empty USE_ALT_FONTS textfile, create a 'fonts' dir in the kindle root, and copy the 4 font files into it with those specific names. (Then restart the kindle and look at the font menu.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1269</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362157852.217114925384521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1745</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-03-01 07:32:21</wp:comment_date>
			<wp:comment_date_gmt>2013-03-01 12:32:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome, I'll have to try that. Thanks for the info! If I get it working on mine without jailbreaking, I'll add it to the post above and credit you for the info.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1269</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362141141.181723117828369140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1741</wp:comment_id>
			<wp:comment_author><![CDATA[Craig]]></wp:comment_author>
			<wp:comment_author_email>craig.muth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.234.232.54</wp:comment_author_IP>
			<wp:comment_date>2013-03-01 03:00:05</wp:comment_date>
			<wp:comment_date_gmt>2013-03-01 08:00:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Got it working by following http://www.mobileread.com/forums/showthread.php?p=2346392 and using the fonts at http://dotsies.org/kindle-paperwhite/.  Dotsies can be learned in as quickly as a half hour by following the advice on dotsies.org.  Getting fast is the trick.  I'm close to my normal reading speed after several weeks of practice.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1269</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362140256.190637111663818359375;s:7:"message";s:50:"chriskrycho changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362124805.3607161045074462890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2301</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-04-08 13:41:39</wp:comment_date>
			<wp:comment_date_gmt>2013-04-08 17:41:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Man, that would be fantastic—I don't know of anything, but please drop a comment here if you discover a way to do it without jailbreaking or rooting. (I just don't want to deal with the hassle of jailbreaking.) If they could do that and/or implement a hyphenation algorithm (which is <em>not</em> particularly hard to get working), it would make an enormous difference in readability.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2227</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365442899.0607759952545166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2359</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>174.99.42.84</wp:comment_author_IP>
			<wp:comment_date>2013-04-10 20:32:42</wp:comment_date>
			<wp:comment_date_gmt>2013-04-11 00:32:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brilliant! I'm glad to see, most importantly, that the support is there in the Kindle software itself—from there it's just a short step to implementing it automatically.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2350</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365640362.464354991912841796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2278</wp:comment_id>
			<wp:comment_author><![CDATA[Thor]]></wp:comment_author>
			<wp:comment_author_email>thordnel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.198.77.21</wp:comment_author_IP>
			<wp:comment_date>2013-04-07 11:04:38</wp:comment_date>
			<wp:comment_date_gmt>2013-04-07 15:04:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow..it worked in Kindle Paperwhite....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365347078.944405078887939453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1765</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-03-02 17:53:08</wp:comment_date>
			<wp:comment_date_gmt>2013-03-02 22:53:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, got it going myself—very nice, and thanks for the info! I'll be adding it either tonight or tomorrow. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1269</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362264788.46994304656982421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1255</wp:comment_id>
			<wp:comment_author><![CDATA[Najih]]></wp:comment_author>
			<wp:comment_author_email>asadynm@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.144.70.21</wp:comment_author_IP>
			<wp:comment_date>2012-12-25 06:41:51</wp:comment_date>
			<wp:comment_date_gmt>2012-12-25 12:41:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi
I tried the procedure to install Arabic font on my Kindle but  unfortunatly it didn't work, it kept using the defalt font which appears fragmented in some parts of some words, I tried ArabicNaskhSSK-Regular and the rest of the forms , that is Italic ....and so on, the steps were followed as instructed but no benefit. Thanx for your effort and if there is any advise , that will be appreciated.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1356439311.92420291900634765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>919</wp:comment_id>
			<wp:comment_author><![CDATA[Nemolus]]></wp:comment_author>
			<wp:comment_author_email>nemolus@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.98.154.205</wp:comment_author_IP>
			<wp:comment_date>2012-10-15 21:09:58</wp:comment_date>
			<wp:comment_date_gmt>2012-10-16 02:09:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tried this with Paperwhite, after trying to save configs to Kindle, Calibre reports that it cannot save to Kindle. I guess this somehow doesn't work with PaperWhite? Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1350353398.4578";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>920</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-10-15 22:08:59</wp:comment_date>
			<wp:comment_date_gmt>2012-10-16 03:08:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That wouldn't surprise me; I've heard it doesn't work on the Kindle Touch, and I think the Paperwhite is essentially a Touch in terms of software.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>919</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1350356939.9278";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1267</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-12-27 19:23:58</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 01:23:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, I'm sorry to hear that this trick doesn't work for Arabic – that's disappointing, to say the least! I would guess it probably has a hard time with any non-English fonts, at least in the software package distributed with Kindles in the US. I hope more non-English-language support becomes standard for Kindles in the future.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1255</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1356657838.473812103271484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1268</wp:comment_id>
			<wp:comment_author><![CDATA[Craig]]></wp:comment_author>
			<wp:comment_author_email>craig.mu+spam@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>184.58.102.199</wp:comment_author_IP>
			<wp:comment_date>2012-12-27 19:36:11</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 01:36:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Has anyone been able to put a ttf on a Paperwhite?  Looks like I'll be returning mine and getting a Nook. Dang. The Dotsies font looked great on the old e-ink Kindles.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>920</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1356658571.9578649997711181640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1269</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>108.87.46.253</wp:comment_author_IP>
			<wp:comment_date>2012-12-27 19:37:48</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 01:37:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I believe people have managed it by rooting the whole thing, but that's not something I'm particularly motivated to do on mine (got it a couple weeks ago).

How long did it take you to be able to read Dotsies? :p]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1268</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1356658668.4785740375518798828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6986</wp:comment_id>
			<wp:comment_author><![CDATA[Ilya Zhitomirskiy]]></wp:comment_author>
			<wp:comment_author_email>izhitomirskiy@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>136.242.180.234</wp:comment_author_IP>
			<wp:comment_date>2013-09-11 18:41:01</wp:comment_date>
			<wp:comment_date_gmt>2013-09-11 22:41:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I tried downloading some books with Church Slavonic font, and converting from .pdf to .mobi format, but when I tried to read the books on the Kindle, it spat out a random mix of Cyrillic letters, Latin letters and numbers. Has anyone else had that experience? Does Irmologion or another group of Slavonic fonts work on the Kindle? What can you suggest?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378939262.3434391021728515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10454</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-11-04 19:54:49</wp:comment_date>
			<wp:comment_date_gmt>2013-11-05 00:54:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>The extra fonts you're seeing there are normal: they're just typefaces that are hidden from view by default. The steps you followed here show them, as well as any other fonts you've added to the system. Alas.</p>

<p>If you want forward and backward buttons, the Kindle Touch or Paperwhite are the wrong devices to have purchased. You'll want a Kindle Keyboard (which you'll have to get used) or some other device.</p>

<p>That said, you don't have to slide your finger. If you just tap the screen on the right side, it will advance, and if you tap on the left, it will go back. :)</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10450</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383612889.481813907623291015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5762</wp:comment_id>
			<wp:comment_author><![CDATA[Suzi]]></wp:comment_author>
			<wp:comment_author_email>suzidownunder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.171.28.243</wp:comment_author_IP>
			<wp:comment_date>2013-08-09 21:55:38</wp:comment_date>
			<wp:comment_date_gmt>2013-08-10 01:55:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this.  I installed 'OpenDyslexia' on my Kindle Keyboard.

Only works on books I add and not on Kindle downloaded books but even so its made my life easier!! Thanks!!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376099738.90398693084716796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5763</wp:comment_id>
			<wp:comment_author><![CDATA[Suzi]]></wp:comment_author>
			<wp:comment_author_email>suzidownunder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.171.28.243</wp:comment_author_IP>
			<wp:comment_date>2013-08-09 21:57:22</wp:comment_date>
			<wp:comment_date_gmt>2013-08-10 01:57:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[**Actually, -update - it DOES work on MOST Amazon downloaded books - it just looks a little different!  :)
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376099842.31021404266357421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5764</wp:comment_id>
			<wp:comment_author><![CDATA[Suzi]]></wp:comment_author>
			<wp:comment_author_email>suzidownunder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.171.28.243</wp:comment_author_IP>
			<wp:comment_date>2013-08-09 22:01:42</wp:comment_date>
			<wp:comment_date_gmt>2013-08-10 02:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You could try this first and then as above. It worked for me.

On your Amazon Kindle, press Home button to go to your home page.

This step is important to make sure the change you are going to do will take effect. If you are doing this while an eBook is open, the change will not take effect.

Connect your Amazon Kindle to your computer with a USB cable.

Open the folder in sequence : system &gt; com.amazon.ebook.booklet.reader

In the "com.amazon.ebook.booklet.reader" folder, open reader.pref file with a text editor.

Add a new line to the file just before "FONT_FAMILY=" line:

ALLOW_USER_FONT=true

Replace FONT_FAMILY= with FONT_FAMILY=alt.

Save and close the reader.pref file.

At the root of your Kindle device, create a folder named fonts.

In this folder, you will need to rename your custom fonts with specific names according to their styles.

Regular : alt-Regulat.ttf

Bold : alt-Bold.ttf

Italic : alt-Italic.ttf

Bold Italic : alt-BoldItalic.ttf

Eject your Amazon Kindle Keyboard.

Restart your Amazon Kindle:

Menu &gt; Settings &gt; Menu &gt; Restart
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1255</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376100102.5701849460601806640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7058</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>theology@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-09-13 07:40:37</wp:comment_date>
			<wp:comment_date_gmt>2013-09-13 11:40:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm. My <em>guess</em> would be that it's a problem with the PDF conversion; Amazon often struggles with more complex documents. You might try converting a Word document via Calibre or the Kindle Previewer tool and loading the resulting output onto your Kindle; that may have better results---which, sadly, won't help you with those PDFs. I've had similar difficulties with converting PDFs that contain polytonic Greek characters in the past, so I definitely understand the frustration.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6986</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379072438.06943607330322265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10437</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email>lucas.mantaray@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.34.107.141</wp:comment_author_IP>
			<wp:comment_date>2013-11-04 18:27:49</wp:comment_date>
			<wp:comment_date_gmt>2013-11-04 23:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I once bought a Kobo Touch and my brother enjoyed it so much that I gave it to him. Then I bought to myself a Kobo Glo and I was enjoying as much as I could until the day I forgot it somewhere and lost it. I then bought to myself a Kindle Touch. What a deception. Although I recognise that Kindle has a better ink-screen, Kobo is far much better for my needs. I easely added any font that I needed to read Greek, Hebrew, Arabic and Russian. What a terrible deception after buying a Kindle that I cannot even change a font. There are instructions everywhere about how to hack this, how to hack that. Well, I don't have time to waste in front of my computer to learn every detail of how to hack Kindle so I am retiring it. I bought to myself a new Kobo Glo which will stay with me for a long period.

In Kobo, just create in the root a directoy called fonts. Put all the fonts you need and restart it. That is it. And Kindle? I still don't know and it doesn't matter for me anymore. That is it, folks.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383607669.4317309856414794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10450</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email>lucas.mantaray@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.34.107.141</wp:comment_author_IP>
			<wp:comment_date>2013-11-04 19:26:52</wp:comment_date>
			<wp:comment_date_gmt>2013-11-05 00:26:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello. I backed up all my kindle files before trying to make changes. I followed Chrys Cricho's instructions for Kindle Touch. It worked for me. I did not need to do the command ;fc-cache to make the fonts to appear. However, I got extra fonts that I did not put in it. Now I accept instructions on how to advance and go back the pages of the Kindle Touch book catalogue either  when we use cover or by book title. I don't like to slide my finger on the e-ink screen to flip the pages of the book catalogue. Kobo has a Forward and a Backward buttons for that reason. Does anyone have any idea?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383611212.804398059844970703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10890</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email>lucas.mantaray@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.34.107.141</wp:comment_author_IP>
			<wp:comment_date>2013-11-06 16:18:30</wp:comment_date>
			<wp:comment_date_gmt>2013-11-06 21:18:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello. Thank you for your reply and suggestions. Well, maybe I did not express myself well when I mentioned "forward and backward buttons". I don't like to slide the finger on Kindle or Kobo Glo just because their e-ink screen are made to be cleaned all the time. In a Tablet, that would be ok to clean. What I ment, if I am expressing myself right this time, is to know if it is possible to add a "slide bar" or "virtual forward and backward buttons/icons" at the bottom of the Kindle screen to access the pages of the book catalogue just like it occurs with Kobo Glo. The situation is this: if you have hundred books, the books can't all be shown on one single page. If you prefer touches on the screen instead of sliding the finger, you have to click on the page number that is at the bottom of the book catalogue screen, touch to show the page number option, then a virtual keyboard will appear. You then press the page number you want and then click "go". Kindle users would have a very easy life if they had the forward and backward icons to navigate. Unfortunately, computer programming, specially Linux, is not something easy for me. I just follow ready instructions. If there are any available, let's try. Thank you again for taking your time to write your comment. And thank you again. It was here that I found the solution for my Kindle font problem.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10454</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383772710.28044605255126953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10898</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email>lucas.mantaray@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.34.107.141</wp:comment_author_IP>
			<wp:comment_date>2013-11-06 16:47:58</wp:comment_date>
			<wp:comment_date_gmt>2013-11-06 21:47:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, just one more contribution. In my Kobo Glo, in the directory "fonts", I put the free fonts BSTGreek, BSTHebrew and the free font Gabriola. All the epubs containing polyphonic Greek or Hebrew or Ciryllic alphabeth worked well for me in Kobo. I still have not tryed it with Kindle but I guess it won't be easy since there is this requirement of including the name regular, italic, bold and bolditalic right after the font name. That requirement is not needed in Kobo. That is it.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7058</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383774478.9579179286956787109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>PSA: Android browser and soft hyphens</title>
		<link>http://2012-2013.chriskrycho.com/web/psa-android-browser-and-soft-hyphens/</link>
		<pubDate>Wed, 10 Oct 2012 12:20:20 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=807</guid>
		<description></description>
		<content:encoded><![CDATA[The default Android browser does <em>not</em> love soft hyphens (Unicode: <code>U+00AD</code>, HTML: <code>&amp;#173;</code> or <code>&amp;shy;</code>). This means, for anyone using the good old <a href="http://kingdesk.com/projects/php-typography/">PHP Typography</a> tool or its WordPress plugin equivalent, <a href="http://wordpress.org/extend/plugins/wp-typography/">wp-typography</a>, that you're in trouble if you have mobile viewership at all. While it's nice to have a sensible hyphenization algorithm at play - the sort that can prevent widows - it's a bad idea to be running anything that doesn't support mobile these days. <!--more-->

That's no skin off the backs of the folks who developed it; KINGdesk are no doubt decent folks and their PHP code hit the streets before the explosion of mobile that we've seen today - and, more importantly, the real problem is in the rendering on the Android stock browser. (Seriously? Doesn't support a standard typographic character, even by just ignoring it entirely? Boggles. The. Mind.)

More bad news: there is a really solid Javascript implementation that works nicely. You can get it <a href="http://code.google.com/p/hyphenator/">here</a>. Unfortunately, it too uses soft hyphens (added after the text has been rendered, instead of before, but with the same net effect)... so your site still looks terrible on the stock Android browser if you're running it.

Good news: Chrome for Android should be installed by default on most or all Android devices in the coming years. My guess is, this just won't be an issue for the vast majority of smartphones in use in the US by 2015, seeing the regularity with which people upgrade their phones at this point.

Even better news: within another couple years, you're not even going to need even that sort of front end solution, because the CSS3 module <code>hyphens</code> is coming along nicely in terms of browser support. (At the time of writing, Firefox and Safari Webkit - but not Chrome - implement it. Safari Webkit seems to include the iOS browser as well.)

Along with full support for <code>hyphens</code> should also come better support for dealing with widows. No, that doesn't get you anywhere with older browsers (and that really means everything before Firefox 4, IE9, and Webkit browsers of similar vintage) - but let's be honest: good typography is best taken as a case of progressive enhancement at the moment. It's delightful, really delightful, when we can use it, but it's not the end of the world when older browsers don't get it: that's just the norm for how text looked on those browsers anyway.

Lesson learned: don't make use of soft hyphens on the web if you have any mobile user base. Or, in other words (it being late 2012 and all): <em>don't use soft hyphens on the web</em>. Yes, that stinks. But the Javascript solution works well enough for now if you particularly want your text to be a bit less ragged, and it's rare that you get major problems with your typesetting that way.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>807</wp:post_id>
		<wp:post_date>2012-10-10 07:20:20</wp:post_date>
		<wp:post_date_gmt>2012-10-10 12:20:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>psa-android-browser-and-soft-hyphens</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[CSS3]]></category>
		<category domain="post_tag" nicename="hyphens"><![CDATA[hyphens]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="php-typography"><![CDATA[PHP Typography]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="public-service-announcements"><![CDATA[Public Service Announcements]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<category domain="post_tag" nicename="wp-typography"><![CDATA[wp-typography]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[82]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[soft hyphens]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The stock Android browser doesn't support soft hyphens at all… so you probably shouldn't use them on the web.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Hilarious code obfuscation technique</title>
		<link>http://2012-2013.chriskrycho.com/web/hilarious-code-obfuscation-technique/</link>
		<pubDate>Wed, 07 Nov 2012 22:03:50 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=846</guid>
		<description></description>
		<content:encoded><![CDATA[Something you should never do, but which did provide some hilarity for us today:

<pre lang="cpp" line="1">if (idate < 65535)
  {
    CTime itime = CTime::GetCurrentTime();
      iyear = itime.GetYear();
        imonth = itime.GetMonth();
          idate = itime.GetDay();
            icurdate = (iyear - 2005)*512+12800 + (imonth*32 +1) + idate;
              if(icurdate > tdate)
                {
                  sprintf(str, "Key Expired");
                    MessageBoxEx(m_hWnd, str, "Error", MB_OK,LANG_ENGLISH);
                      exit(-1);
                    }
                  }
</pre>

The <em>whole</em> 1500-line module was written up that way. Why? We have no idea. It's better now. Less funny, but better.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>846</wp:post_id>
		<wp:post_date>2012-11-07 16:03:50</wp:post_date>
		<wp:post_date_gmt>2012-11-07 22:03:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hilarious-code-obfuscation-technique</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="code"><![CDATA[code]]></category>
		<category domain="post_tag" nicename="funny"><![CDATA[funny]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="worst-practices"><![CDATA[worst practices]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>SICP for Kindle – improved by yours truly</title>
		<link>http://2012-2013.chriskrycho.com/web/sicp-for-kindle-improved-by-yours-truly/</link>
		<pubDate>Wed, 21 Nov 2012 18:48:17 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=853</guid>
		<description></description>
		<content:encoded><![CDATA[I was looking for a Kindle version of the MIT Press classic text on computer programming, <cite>Structure and Interpretation of Computer Programs</cite>, which is (delightfully!) available online in its entirety <a href="http://mitpress.mit.edu/sicp/full-text/book/book.html">here</a> as an HTML book. (MIT is awesome like that.) I found one, by <a href="https://github.com/twcamper/sicp-kindle">twcamper on GitHub</a>.

Unfortunately, I discovered that he had eliminated paragraph indentation - apparently Kindle was doing that automatically at some point, but they have since stopped - so I forked it, thinking I'd just add it in, rebuild the <code>.mobi</code> file, and be on my way. Alas, it wasn't that simple: his documentation skipped a few things (it looks like it was more a way of storing his personal project than meant for public consumption), so I spent a good chunk of the morning figuring out how the project worked, making some tweaks to get it to work the way <em>I</em> wanted it to, and updating the documentation so others could follow my steps themselves if they wanted to make their own tweaks to the CSS file.

You can get the updated book directly <a href="https://github.com/chriskrycho/sicp-kindle/downloads">from the Downloads page</a>. If you want the Ruby code used to generate it, you can get that direct from the main <a href="https://github.com/chriskrycho/sicp-kindle">GitHub page for the project</a>, which also has a (much improved, in my opinion) writeup on how to actually use it. Enjoy!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>853</wp:post_id>
		<wp:post_date>2012-11-21 12:48:17</wp:post_date>
		<wp:post_date_gmt>2012-11-21 18:48:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sicp-for-kindle-improved-by-yours-truly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[GitHub]]></category>
		<category domain="post_tag" nicename="kindle"><![CDATA[Kindle]]></category>
		<category domain="post_tag" nicename="mit-press"><![CDATA[MIT Press]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="structure-and-interpretation-of-computer-programs"><![CDATA[Structure and Interpretation of Computer Programs]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Improved Kindle format and Ruby build for Structure and Interpretation of Computer Programs by Abelsson, Sussman & Sussman.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7170</wp:comment_id>
			<wp:comment_author><![CDATA[Filipe Farinha]]></wp:comment_author>
			<wp:comment_author_email>filipe@ktorn.com</wp:comment_author_email>
			<wp:comment_author_url>http://ktorn.com</wp:comment_author_url>
			<wp:comment_author_IP>113.52.126.145</wp:comment_author_IP>
			<wp:comment_date>2013-09-17 08:58:34</wp:comment_date>
			<wp:comment_date_gmt>2013-09-17 12:58:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Chris!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379422714.913784027099609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6356</wp:comment_id>
			<wp:comment_author><![CDATA[gary boland]]></wp:comment_author>
			<wp:comment_author_email>garyboland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.111.192.37</wp:comment_author_IP>
			<wp:comment_date>2013-08-26 02:12:15</wp:comment_date>
			<wp:comment_date_gmt>2013-08-26 06:12:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great work. really helpful, kudos.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377497535.0734579563140869140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Bundling!</title>
		<link>http://2012-2013.chriskrycho.com/web/bundling/</link>
		<pubDate>Mon, 17 Dec 2012 14:00:04 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=859</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.digitalbookworld.com/2012/why-do-we-have-to-choose-between-print-and-digital/">&quot;Why do we have to choose between print and digital?&quot;</a> asked Richard Curtis at Digital Book World last week, before tackling the topic of bundling - getting ebooks at reduced cost or even free when buying a physical copy of the book. Drawing an analogy from music purchases that have moved in the same direction, he suggests that publishers <em>ought</em> to be bundling, and then poses the query: When you purchase a print book you should be able to get the e-book for...</p>
<ol type="a" class="tight">
<li>the full combined retail prices of print and e-book editions</li>
<li>an additional 50% of the retail price of the print edition</li>
<li>an additional 25% of the retail price of the print edition</li>
<li>$1.00 more than the retail price of the print edition</li>
<li>free</li>
</ol>
<p>He suggests that this proves to be something of a conundrum for decision-makers in the publishing industry. With respect, and while recognizing that it probably <em>feels</em> like a conundrum to the publishers, I think the answer is really quite simple. Publishers can dramatically increase their profits, and do it in a way that readers will <em>love</em>. (This is the part where you call me crazy. Up next is the part where I show you why I'm not.)<!--more--></p>
<h2 id="all-or-nothing">All or nothing</h2>
<p>First, we should note that while readers would always choose (e) and publishers would love it if they could get away with (a), the reality is that both of these leave one party out in the cold. Publishers need readers, and readers need publishers. Publishers need readers or they die. Readers need publishers as providers of quality content - not only as the gatekeepers but also as polishers who take good books and make them great. Any system that will pan out well must therefore respect <em>both</em> sides of that equation. Both (a) and (e) fail that test immediately.</p>
<p>In the case of (a), the consumer can rightly point out that the cost of distribution of a book is minimal, trivial even, in the grand scheme of book production. That goes double for ebooks: the cost of running a server is a pittance compared to the cost of writing, editing, and proofing a book. "So," any smart reader says, "I've already paid for the book. Why should I have to pay <em>just as much again</em> for the ebook?"</p>
<p>In the case of (e), the consumer is getting something of real value - the ebook, with its associated portability, the ability to create <a href="http://craigmod.com/journal/post_artifact/#section_4" title="Post Artifact Books and Publishing, Section 4: The post-artifact system&quot; from Craig Mod">communal interactions</a> around the content through shared marginalia, and so forth - but without recognizing any infrastructure costs this poses to the publisher. As always, there is no free lunch, and that is as it should be.<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> The worker deserves his wages, and that includes the editor who turns a manuscript into ebook form - especially for <em>good</em> ebooks, which entail a great deal of work beyond simply running the print manuscript through a conversion script. That involves real people's time, and therefore costs real money.</p>
<p>Neither of these options, then, is ultimately good for the market. The readers will rightly reject paying the full price again for a book in a different form; they've been conditioned by too many interactions on the internet not to recognize that digital transmission of files the size of a book is, while not costless, not costly either. On the other hand, publishers still need to make money, and they do sink real time and money into the ebook - not at the distribution point, but in the infrastructure involved in the preparation of the manuscript and readying it for digital and physical publication.</p>
<p>Again: publishers need readers and readers need publishers.</p>
<h2 id="percentage-games">Percentage games</h2>
<p>Percentage-based cuts - like Curtis' options (b) and (c) - are much more sensible and reasonable from the perspective of both the consumer and the publisher. In each of these cases, the publisher is granting that the customer has already made a purchase - perhaps a significant one, in the case of a hardcover fiction book. Indeed, when we move out into the realm of reference books or textbooks, the consumer has already given the publisher quite a lot of money. Thus, options (b) and (c) are much friendlier to the consumer than choice (a), while still affording the publisher some profits, unlike (e). This is clearly a step in the right direction.</p>
<p>The percentage option quickly runs into issues when we start thinking about how such a scheme would work in practice, though. Is it 25% of the hardcover but 50% of the paperback, so that the publisher can recoup more of the costs? In this scheme, it is difficult to match the actual cost of the ebook sale to its relative value compared to the physical copy. Moreover, it's difficult to standardize. When purchasing a textbook at $150, should someone have to pay another $37.50 or $75 to have a digital copy? It seems unlikely that preparing an ebook of a textbook is really 5-6 times more costly than the preparation of a fiction ebook, which on a percentage basis would come out around $6.50 or $13 for the hardcover at those rates, or $2 or $4 for paperbacks.</p>
<p>Equally important: <em>will</em> people pay that much for a digital copy? Publishers may want to study the question in depth by testing the market, but this is a waste of time. The answer is obvious to anyone under the age of 30: <em>no</em>. The market simply won't support those kinds of costs on the upper end of the spectrum.</p>
<p>Again, customers may recognize that they are subsidizing more than simply the cost of distribution, but the preparation and distribution of the ebook don't justify an additional percentage on these scales beyond some point. I suspect that most customers are willing to pay extra to get the ebook in addition to the physical copy - just not, in most cases, <em>that</em> much extra.</p>
<h3 id="aside-on-reasonability-and-trained-markets">Aside: on reasonability and trained markets</h3>
<p>We must recognize that markets can be <em>trained</em>. People have come to see $0.99 as a reasonable price for individual songs. There was nothing inevitable about that outcome; it is a direct result of the success of the iTunes store. Had prices been set at $1.49 or $0.33, it's likely we would have settled on that number as a reasonable price. Similarly, TV show episodes sell at $1.99,<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> and people seem to treat that as a reasonable price: the perceived value matches the cost well. They could have been $1 or $2.50, and consumers probably would have settled in with those numbers equally well.</p>
<p>Of course, had the price been too high, we would have rejected it entirely: markets can be trained, but they're not capable of stretching into just any shape at all.</p>
<p>Admittedly, the music market remains volatile, but consumers on the whole don't seem to balk at spending a dollar on a song. While the piracy rate remains high, iTunes and similar markets provide an outlet for those who are interested in purchasing their music legitimately.<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup></p>
<p>This outcome results from the combination of a trained market and a sensible cost/value relationship that allowed the training to occur in the first place. Book publishers should aim for the same outcome: profitability on the basis of perceived reasonability of their prices. This will require training the market, but that is possible so long as their expectations are reasonable.</p>
<h2 id="a-reasonable-target">A reasonable target</h2>
<h3 id="price-points">Price points</h3>
<p>Curtis' final suggested price point is close to the mark, but I think some revision is in order. Remember: the aim is to buoy both customer satisfaction <em>and</em> publisher profitability. Here's my proposed pricing scheme for fiction (which could be adapted to other parts of the market fairly straightforwardly):</p>
<ul class="tight">
<li>Standalone ebook: $4.99</li>
<li>Paperback:
<ul>
<li>Book: $7.99</li>
<li>Bundle: $9.99</li>
</ul></li>
<li>Trade paperback:<sup><a href="#fn4" class="footnoteRef" id="fnref4">4</a></sup>
<ul>
<li>Book: $14.99</li>
<li>Bundle: $15.99</li>
</ul></li>
<li>Hardcover:
<ul>
<li>Book: $26.99</li>
<li>Bundle: $26.99</li>
</ul></li>
</ul>
<p>I'm basing these on the current pricing schemes in the market - these are the normal suggested retail prices for paperbacks, trade paperbacks, and hard covers - and on the assumption that the publisher's goal is to maximize revenue, while the consumer's goal is to get the most content at a price he feels is reasonable. I'm also taking into account the existing profit curves for publishers: paperbooks are relatively low margin, while hardcovers are the major profit points, at least when they're successful.</p>

<h3 id="rationale">Rationale</h3>
<p>First, and most importantly, I believe the market will support these price points. The standalone ebook is less expensive than the paperback, as it should be, since its distribution costs are much lower than the costs of printing and shipping paperbacks. At the same time, ebooks sales will still generate revenue for the publisher; $5 is not a meaningless amount of money.</p>
<p>For each tier upwards, the cost of the bundled ebook drops. The publisher thus acknowledges the increasing profitability of each tier as well as the increasing cost to the reader. At the same time, the lowered bundling cost incentivizes the user toward the higher profit items. In each case, the bundling cost is sufficiently low as to be in the &quot;impulse purchase&quot; range for most users.<sup><a href="#fn5" class="footnoteRef" id="fnref5">5</a></sup></p>
<p>Readers will be far more likely to front the cost of a hardcover if an ebook comes bundled with it, because the value proposition is so much better. At the same time, this is unlikely to decrease the profits of the publisher, because the margins are much higher for hardcovers.</p>
<p>In fact, bundling at these rates will likely increase publisher profits from ebooks, as most readers currently choose between ebook and physical books. The price of a hardcover is simply too high to allow for the purchase of both. (Even when this is not actually true, it <em>seems</em> true to consumers, which is equally important in determining their behavior.) With a sufficiently lower barrier to getting the additional content, the likelihood that the reader purchases both goes up substantially.<sup><a href="#fn6" class="footnoteRef" id="fnref6">6</a></sup></p>
<p>This potential for increased profitability is compounded by the availability of the bundle at initial purchase time. A consumer who has already committed to spending $8 on a book is unlikely to balk at $10, and even less to balk at the transition from $15 to $16. In many cases, the publisher will earn more money from the book purchase than before, but the reader is still getting a good deal on the ebook. This is <em>exactly</em> the combination that makes for a flourishing market.</p>
<p>Finally, the simplicity of these numbers is extremely helpful. Standardizing these prices will decrease the friction inherent in making the purchase decision, which increases the likelihood that a purchase will be made. I'm not suggesting a cartel - price standardization is natural in this sort of market - and I believe the price points I've suggested are where the market will settle in the long run. The publishers who get there first will earn enormous goodwill from their readers in the short term, as well as demonstrating their leadership in the industry in ways that set them up for long term success.</p>
<h2 id="bundle-up">Bundle up</h2>
<p>A smart approach to bundling could be enormously beneficial to the publishing industry. In addition to the pure numerical profitability of the approach outlined above - no small detail in an industry struggling to adapt to the realities of the new economy - it establishes that the publishers are responsive to customers in a way that other large media have not seemed to be. Nothing is so helpful to a company's long-term sustainability as for consumers to <em>like</em> it. Reasonable bundling prices would go a long way toward helping readers see publishers as friends, rather than enemies.</p>
<p>Obviously these numbers work best in the context of fiction. The value propositions are entirely different in other contexts; a cookbook is an entirely different thing than a copy of <em>The Hobbit</em>. Across the board, though, publishers should keep the same goals in mind: profitability by means of reasonability and approachability. Be allies of the readers, not their enemies. Make it easy and affordable for them to pay you for your work, and they will.</p>
<section class="credits">
<hr/>
<p>My thanks to <a href="http://stephencarradini.com">Stephen Carradini</a> for invaluable contributions to this piece in two forms: many long conversations about this very topic, and a helpful edit of the actual content.</P>
</section>
<section class="footnotes">
<hr>
<ol>
<li id="fn1"><p>Additionally, there is a signaling problem here: &quot;free&quot; suggests &quot;low value&quot; in a way that publishers rightly want to avoid. See <a href="http://informationarchitects.net/blog/ia-writer-on-prices-and-features/">&quot;iA Writer: On Prices and Features&quot;</a>, Section 2: Cost, by Oliver Richtenstein for a lengthy and sensible exploration of this issue. The issue of signaling value should be taken into account in my suggestions later, as well. But more on that below.<a href="#fnref1">?</a></p></li>
<li id="fn2"><p>When they sell at all, of course. I've written about this problem <a href="http://2012-2013.chriskrycho.com/web/no-castle-for-you" title="No Castle for you!">before</a>: piracy explodes when there is demand without supply. It also tends to grow at a higher rate when the cost is perceived as unreasonable. TV shows priced at $5/episode wouldn't do well; they seem to sell quite briskly at $1.99. Publishers run the risk of fomenting piracy by setting their prices too high.<a href="#fnref2">?</a></p></li>
<li id="fn3"><p>I have never seen someone complain that a song is too expensive at a dollar who was willing to pay <em>anything</em>. A penny would be too pricey from the pirates' point of view.<a href="#fnref3">?</a></p></li>
<li id="fn4"><p>Trade paperbacks (TPBs) are similar in size to hardcovers, but have soft covers similar to those in a paperback. Fiction TPBs typically go for around $15. Over the last few years, publishers have started shifting away from the low-margin paperback market into these trade paperbacks, which provide a bit higher profit for them. Personally, I don't mind, because these books tend to be higher quality paper and bindings. If I'm sitting down with a monster like one of the books in <cite>The Wheel of Time</cite>, this is far and away the best format for a physical copy.<a href="#fnref4">?</a></p></li>
<li id="fn5"><p>On the signaling issue: the price of the ebook is sufficiently high as to continue to signal real value here, I think. However, in the case of other kinds of books, this scheme should be revisited. A complex EPUB3 with embedded videos or interactive content should signal that it offers a higher value proposition than other ebooks with a higher price point; in some cases, if that content is sufficiently central to the value proposition of the book, it might be more expensive than the physical copies.</p>
<p>Similarly, a textbook might sell for $150, its ebook at $50, and the bundle at $165 - because the cost of preparing a textbook ebook may be substantially higher than that of preparing a fiction ebook. Signaling matters, but overpricing is as much a risk here as underpricing.<a href="#fnref5">?</a></p></li>
<li id="fn6"><p>This has the added benefit of making the purchase of new books over used books more attractive to the consumer: if the coupon for ebook at reduced rate is only available at new book purchase, a $3 used book suddenly has a much lower value proposition relative to the original when the reader is interested in having an ebook copy as well, since the cost of having both is still $8.</p>
<p>Of course, this leads us to the question of ebook resale, which is currently a legally murky area at best, and requires considerable legal and intellectual development.<a href="#fnref6">?</a></p></li>
</ol>
</section>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date>2012-12-17 08:00:04</wp:post_date>
		<wp:post_date_gmt>2012-12-17 14:00:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bundling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bundling"><![CDATA[bundling]]></category>
		<category domain="post_tag" nicename="ebooks"><![CDATA[ebooks]]></category>
		<category domain="post_tag" nicename="intellectual-property"><![CDATA[intellectual property]]></category>
		<category domain="post_tag" nicename="market"><![CDATA[market]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="publishing"><![CDATA[publishing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Proposing a sensible pricing scheme for bundling ebooks—profitable for publishers, reasonable for readers—with fiction price points as an example.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>LaTeX &amp; MathJax Demo</title>
		<link>http://2012-2013.chriskrycho.com/web/latex-mathjax-test/</link>
		<pubDate>Sat, 15 Dec 2012 14:45:28 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=883</guid>
		<description></description>
		<content:encoded><![CDATA[I recently discovered <a href="http://www.mathjax.org/">MathJax</a>, a JavaScript library that implements LaTeX equation display. It's brilliant; we're now using it in our documentation (it's bundled with <a href="http://www.stack.nl/~dimitri/doxygen/">Doxygen</a>) and I plan to make heavy use of it in the future wherever it makes sense. Some samples of its capabilities:

Einstein's famous equation:

[latex]e = mc^2[/latex]

Something a little more complicated (one of the equations implemented in the code I've been working on for the last few months):

[latex]
C(x,y,z) = 2BhC(x)C_1(y,b,\beta)C_2(z,Z_c,\sigma)
[/latex]

And now, something more complicated yet (defining the elements in the equation above):

[latex]
\begin{align}
C(x,y,z) &amp;= 2BhC(x)C_1(y,b,\beta)C_2(z,Z_c,\sigma) \\
\\
C_1(y,b,\beta) &amp;= \frac{1}{4b}
                  \left[
                      \mbox{erf}\left(\
                          \frac{y + b}{\sqrt{2}\cdot\beta}
                      \right) - 
                      \mbox{erf}\left(\
                          \frac{y - b}{\sqrt{2}\cdot\beta}
                      \right)
                  \right] \\
\\
C_2(z,Z_c,\sigma) &amp;= \left(\frac{1}{2\pi}\right)^2
                     \frac{1}{\sigma}
                     \left[
                         \exp{\left(
                             -\frac{(z - Z_c)^2}{2\sigma^2}
                         \right)} +
                         \exp{\left(
                             -\frac{(z - Z_c)^2}{2\sigma^2}
                         \right)}
                      \right] \\
\\
B^2 &amp;= b^2 + 3\beta^2 \\
\sigma^2 &amp;= \begin{cases}
                 \frac{h^2}{12}, &amp; \mbox{if } Z_c &gt; \frac{h}{2} \\
                 \frac{(h - Z_c)^2}{3}, &amp; \mbox{if } Z_c \le \frac{h}{2}
             \end{cases}
\end{align}                                                                        
[/latex]

I highly recommend MathJax. I'm currently running it via the <a href="http://wordpress.org/extend/plugins/mathjax-latex/" title="MathJax-LaTeX">MathJax-LaTeX WordPress plugin</a>, which allows you to embed it with handy <code>[&#8203;latex]...[&#8203;/latex]</code> shortcode syntax.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date>2012-12-15 08:45:28</wp:post_date>
		<wp:post_date_gmt>2012-12-15 14:45:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>latex-mathjax-test</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="documentation"><![CDATA[documentation]]></category>
		<category domain="post_tag" nicename="doxygen"><![CDATA[Doxygen]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="latex"><![CDATA[LaTeX]]></category>
		<category domain="post_tag" nicename="mathjax"><![CDATA[MathJax]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="wordpress-plugins"><![CDATA[WordPress plugins]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[MathJax]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Demonstrating the capabilities of the MathJax Javascript library for displaying LaTeX-style equations on the internet.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Not paying attention</title>
		<link>http://2012-2013.chriskrycho.com/web/not-paying-attention/</link>
		<pubDate>Wed, 19 Dec 2012 15:30:42 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=920</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote class="quote">New research continues to emphasize the importance of mind wandering for learning. It turns out that <em>not</em> paying attention is one of the best ways of discovering new ideas. Reading books, whether silently or aloud, remains one of the most efficient means of enabling such errant thinking. As our bodies rest, our minds begin to work a different way. New connections, new pathways, and sharp turns are being made as we meander our way through the book, but also away from it. There is no way to tell if anyone is actually paying attention anymore as I read, including myself. This seems to be one of the great benefits of reading aloud, that you can think of something else while you do it. We may be holding the book together, but our minds are no doubt far apart by now.</blockquote>
<p class="attribution">---Andrew Piper, "Out of Touch: E-reading isn't reading," November 15, 2012, <cite>Slate</cite>,<br />excerpted from <cite>Book Was There: Reading in Electronic Times</cite></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>920</wp:post_id>
		<wp:post_date>2012-12-19 09:30:42</wp:post_date>
		<wp:post_date_gmt>2012-12-19 15:30:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>not-paying-attention</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="books"><![CDATA[books]]></category>
		<category domain="post_tag" nicename="ebooks"><![CDATA[ebooks]]></category>
		<category domain="post_tag" nicename="physicality"><![CDATA[physicality]]></category>
		<category domain="post_format" nicename="post-format-quote"><![CDATA[Quote]]></category>
		<category domain="category" nicename="quotes"><![CDATA[Quotes]]></category>
		<category domain="post_tag" nicename="reading"><![CDATA[reading]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1238</wp:comment_id>
			<wp:comment_author><![CDATA[levi]]></wp:comment_author>
			<wp:comment_author_email>leviwalldesign@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.25.18.239</wp:comment_author_IP>
			<wp:comment_date>2012-12-19 13:30:52</wp:comment_date>
			<wp:comment_date_gmt>2012-12-19 19:30:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[truth.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1355945453.3597109317779541015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>tumblr-ing</title>
		<link>http://2012-2013.chriskrycho.com/web/tumblr-ing/</link>
		<pubDate>Sat, 22 Dec 2012 20:50:04 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=935</guid>
		<description></description>
		<content:encoded><![CDATA[I'm now tumblr-ing at <a href="http://nosegue.tumblr.com/">nosegue.tumblr.com</a>. I may move that to <code>chriskrycho.com/web/nosegue</code> or <code>nosegue.chriskrycho.com</code> at some point; we'll see. For the moment, I just want something quick and easy for lots of miscellaneous-ish things that don't fit in any of these four major blogs. Also, to experiment with <strong>tumblr</strong>. (Also: to have an excuse to play with fonts for fifteen minutes when I should have been <a href="https://www.google.com/search?q=scan+handwriting+to+svg&oq=scan+handwriting+to+svg">figuring out how to convert handwriting to SVG or PNG</a> for a website I'm working on.)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>935</wp:post_id>
		<wp:post_date>2012-12-22 14:50:04</wp:post_date>
		<wp:post_date_gmt>2012-12-22 20:50:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tumblr-ing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_tag" nicename="miscellanies"><![CDATA[miscellanies]]></category>
		<category domain="post_tag" nicename="no-segue"><![CDATA[No Segue]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="post_tag" nicename="tumblr"><![CDATA[tumblr]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[I'm now tumblr-ing at nosegue.tumblr.com. I may move that to chriskrycho.com/web/nosegue or nosegue.chriskrycho.com at some point; we'll see…]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>A complaint I&#039;ve made before</title>
		<link>http://2012-2013.chriskrycho.com/web/a-complaint-ive-made-before/</link>
		<pubDate>Fri, 28 Dec 2012 14:35:40 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=941</guid>
		<description></description>
		<content:encoded><![CDATA[Writing over at No Segue:

<blockquote>I want to use Google+. I really do. The UI is far better than that of Facebook; there are a lot of advantages in the conversation model over either Facebook or Twitter; and the overall approach is just one I like better.

There’s just one hiccup—one I’ve written about before: I can’t get it into my workflow.</blockquote>

<p class="right"><a href="http://nosegue.tumblr.com/post/39038200398/google-plus">No Segue: "Still waiting for Google+"&rarr;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>941</wp:post_id>
		<wp:post_date>2012-12-28 08:35:40</wp:post_date>
		<wp:post_date_gmt>2012-12-28 14:35:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-complaint-ive-made-before</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="api"><![CDATA[API]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="category" nicename="links"><![CDATA[Links]]></category>
		<category domain="post_tag" nicename="no-segue"><![CDATA[No Segue]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[smartypants]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Don&#039;t Confuse Your Semantics</title>
		<link>http://2012-2013.chriskrycho.com/web/dont-confuse-your-semantics/</link>
		<pubDate>Tue, 08 Jan 2013 17:03:39 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=954</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was reading an article on <a href="http://www.foreignpolicy.com/">Foreign Policy</a>, and encountered a lovely little design decision that I thought I'd highlight as something <em>not</em> to do. Their visual cuing for links sets a different color for the text (quite normal) and bolds it (not so normal). This latter change, in my view, breaks the user's expectations on semantics in some really unfortunate ways.</p>
<p>Here's what I mean: we expect <strong>bold</strong> text to indicate increased importance, and with a few decades of experience we expect altered color to indicate a link. The problem here is that both are in play. You can occasionally get away with breaking the user's expectations, but in this case the result is that every time there's a link I interpreted the text as being emphasized. It wasn't; it was just bolded because it was a link.</p>
<p>The lesson here is simple: keep your semantics clean and distinct. If you have a reason to override the user's normal expectations, that's okay, but you should have a <em>very</em> good reason for it. The rest of the time, don't use <strong>bold</strong> when you really mean <a href="">link</a>. Similarly, you shouldn't normally use color or underlines for emphasis; those have established semantic meaning on the web; when you use them to other purposes it's just confusing.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>954</wp:post_id>
		<wp:post_date>2013-01-08 11:03:39</wp:post_date>
		<wp:post_date_gmt>2013-01-08 17:03:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-confuse-your-semantics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="best-practices"><![CDATA[best practices]]></category>
		<category domain="post_tag" nicename="links-2"><![CDATA[links]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="semantics"><![CDATA[semantics]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[smartypants]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Keep your semantics clean and distinct. You can override the user's normal expectations, but you should have a very good reason for it.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bitbucket</title>
		<link>http://2012-2013.chriskrycho.com/web/bitbucket/</link>
		<pubDate>Mon, 04 Feb 2013 13:00:14 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=962</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently started using <a href="http://bitbucket.org">Bitbucket</a> for just about all my software repositories. I like <a href="http://github.com">GitHub</a>, too, but Bitbucket has support for both Mercurial and Git, and I prefer the former (even if the latter has a bit broader usage in the software community).</p>

<p>You can find my public project(s) <a href="http://bitbucket.org/chriskrycho">at Bitbucket itself</a> or (identically) on a CNAME mirror of the site <a href="http://bitbucket.chriskrycho.com">here at chriskrycho.com</a> - a lovely feature that both GitHub and Bitbucket support.</p>

<p>One software development effort I&#8217;m involved with is actually testing Bitbucket for all its source repositories. If you&#8217;re on a small team, it&#8217;s a <em>very</em> good resource, as it you can have unlimited repositories for free if you have five or fewer people on the team, and for $10 a month for 10 people on the team. If your team is large enough that you can have a dedicated IP person, it&#8217;s probably less effective - but it&#8217;s hard to beat that for small teams without a dedicated IT employee.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>962</wp:post_id>
		<wp:post_date>2013-02-04 07:00:14</wp:post_date>
		<wp:post_date_gmt>2013-02-04 13:00:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bitbucket</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bitbucket"><![CDATA[Bitbucket]]></category>
		<category domain="post_tag" nicename="it"><![CDATA[IT]]></category>
		<category domain="post_tag" nicename="mercurial"><![CDATA[Mercurial]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="software-development"><![CDATA[software development]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[bitbucket]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[I recently started using Bitbucket for just about all my software repositories. I like GitHub, too, but Bitbucket has support for both Mercurial and Git.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Stupid Facebook</title>
		<link>http://2012-2013.chriskrycho.com/web/stupid-facebook/</link>
		<pubDate>Sun, 03 Feb 2013 21:43:14 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=968</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today, I went to send a message to one of my wife&#8217;s friends, with whom I&#8217;m <em>not</em> friends on Facebook, and found the following message awaiting me, where footnotes correspond to Facebook&#8217;s explanations:</p>

<blockquote>
<p>You aren&#8217;t connected to <so-and-so> on Facebook, so your message would normally get filtered to his Other folder. You can:</p>

<ul class="tight" style="margin-bottom: 0; padding-bottom: 0">
<li>Send this message to his Inbox for $1.00</li>
<li>Just send this message to his Other folder</li>
</ul>
</blockquote>

<p><!--more-->The popup text for the first option:</p>

<blockquote>
<p>Paying to reach someone you aren&#8217;t connected to helps confirm your message isn&#8217;t spam.</p>
</blockquote>

<p>The text on the linked page for the second option:</p>

<blockquote>
<em>What is the &#8220;Other&#8221; folder in my messages?</em>

<p>Your Other folder is where you&#8217;ll find messages and emails that have been filtered out of your inbox. You can change your filter preference right from your inbox.</p>

<p>To get to your Other folder, click Messages on the left side of the homepage. At the top left of your main messages view, click Other.</p>

<p>You can move a message to your Inbox by replying, or by opening the message and selecting Move to Inbox from the Actions menu.</p>
</blockquote>

<p>The long and short of it is, Facebook is now charging you money if you want to send a message to someone that they&#8217;ll actually <em>see</em>. I didn&#8217;t even know I <em>had</em> an Other folder; I&#8217;ve certainly never checked it, and - most importantly - as it doesn&#8217;t show up in my notifications, I probably never will! The same is almost certainly true of the person to whom I wished to send the message.</p>

<p>It&#8217;s a clever monetization strategy&#8230; sort of. The problem is, it&#8217;s one more thing pushing me away from using Facebook. You see, I joined Facebook to communicate with people. More and more, however, Facebook itself is making that difficult. I was never one of the Facebook naysayers that complained about site redesigns, etc. (though as a designer I did have a few choice words about the hilariously terrible layout of Timeline). I am, however, increasingly dissatisfied with the utility Facebook provides.</p>

<p>The truth is, I use Facebook less and less for any actual interactions with friends. Instead, I use it primarily as a site to share things that said friends may be interested to read (or to see what they have shared that I may be interested to read). A slightly more friend-oriented version of Twitter or RSS, in other words.</p>

<p>This change will only exacerbate that tendency. If I can&#8217;t send someone a message that he or she is likely to see, I&#8217;m less likely to use Facebook at all. Plain and simple.</p>

<p>Facebook undoubtedly has to make money. The IPO didn&#8217;t go so well for them, and the company&#8217;s early months as a publicly traded company haven&#8217;t exactly been promising. Advertising revenue has never been the home run that everyone in the early 2000&#8217;s though it would prove to be. Everyone is looking for non-advertising means of monetization. The problem Facebook faces here, though, is simple: I can probably find this fellow&#8217;s email address. And then I don&#8217;t need Facebook at all. I doubt I&#8217;m the only one.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>968</wp:post_id>
		<wp:post_date>2013-02-03 15:43:14</wp:post_date>
		<wp:post_date_gmt>2013-02-03 21:43:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stupid-facebook</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="economics"><![CDATA[economics]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[Facebook]]></category>
		<category domain="post_tag" nicename="monetization"><![CDATA[monetization]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[82]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Facebook]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The long and short of it is, Facebook is now charging you money if you want to send a message to someone that he'll actually see.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Two (absurd) anti-patterns</title>
		<link>http://2012-2013.chriskrycho.com/web/two-absurd-anti-patterns/</link>
		<pubDate>Tue, 12 Feb 2013 14:00:41 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=982</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A pair of anti-patterns I&#8217;ve run into recently in my software development work, both of which are absolutely <em>awful</em>, though in completely different (and quite distinct) ways. I thought I'd share <em>The Empty If</em> and <em>Wash, Rinse, Repeat</em>, just so the world can share a bit of my pain. <!--more--></p>

<h3>The Empty &#8220;if&#8221;</h3>

<p>This is the smaller and more trivial of the two, but I see it <em>frequently</em> in certain parts of the code base I&#8217;m working on.</p>

<pre lang="c">if (someVar == 0 && someOtherVar == 0) {
    // do nothing
} else {
    someFunction(someVar, someOtherVar);
    // ... lots of other things
}
</pre>

<p>Of course, as anyone who&#8217;s spent any time thinking about this can see, there&#8217;s a <em>much</em> more elegant solution:</p>

<pre lang="c">if (someVar != 0 || someOtherVar != 0) {
    someFunction(someVar, someOtherVar);
    // ... lots of other things
}
</pre>

<p>In fact, you can even go a step further! Without losing a hint of clarity, you can write it like this:<a href="#fn1" name="fnref1" class="footnoteRef"><sup>1</sup></a></p>

<pre lang="c">if (someVar || someOtherVar) {
    someFunction(someVar, someOtherVar);
    // ... lots of other things
}
</pre>

<p>Why this pattern is so common, I have <em>no</em> idea. But common it is.</p>

<p>The takeaway: think about your logic setup so you don&#8217;t end up with empty blocks. Gladly, most compilers these days (and any I&#8217;m using!) are smart enough that those things usually get optimized away. As I&#8217;ve <a href="/web/good-programming-in-3-simple-rules" title="Good Programming in 3 Simple Rules">said before</a>, program for people, not computers.</p>

<h3>Wash, Rinse, Repeat</h3>

<p>I was working on one set of related programs recently, each of which performs a similar task. Most of the code hasn&#8217;t been touched in quite some time&#8212;anywhere from a year to, in a few cases, a decade or more&#8212;so it needed to be rebuilt with our current toolchain. I took the opportunity to clean up the code a little&#8212;no functional changes, but running an auto-formatter over it to match current code style, and then cleaning up deprecated code that had been commented out, etc.</p>

<p>As I worked through this set of about a dozen executables, I soon discovered that they had been constructed as follows:</p>

<ol class="tight">
<li>Find a program that does something similar to what we want to do with this program.</li>
<li>Copy the contents of that program over in a new source file wholesale.</li>
<li>Make a couple changes so that it reads and writes different files on the file system and accounts for some small differences in the formatting of those files.</li>
<li>Build.</li>
<li>Release.</li>
</ol>

<p>Note that, across these dozen or so programs, each of which was approximately 250&#8211;300 lines long when I was done cleaning it up, at least fully <em>one half</em> of the code was duplicated. As a result, there are roughly 1400 lines of extra code to maintain, that could all be extracted into a common module&#8212;probably in a library&#8212;that all of these other pieces could link against. Indeed, where possible in other parts of this software package, I&#8217;ve made precisely that move.</p>

<p>The takeaway here is fairly simple. <em>Don&#8217;t use copy and paste.</em> (I&#8217;ve said this <a href="/web/good-programming-in-3-simple-rules" title="Good Programming in 3 Simple Rules">before</a>, too.) If, as a programmer, you find yourself using copy and paste, you should take a step back and reevaluate your approach; there is almost certainly a better&#8212;as in, more maintainable, less work for everyone in the medium and certainly in the long term&#8212;way of doing whatever it is you&#8217;re doing. Extract common behavior into common functions. <em>Don&#8217;t repeat yourself.</em></p>

<hr/>

<section class="footnotes">
<ol>
<li id="fn1">Thanks to <a href="https://twitter.com/calcnerd256">Montana Rowe</a> for <a href="https://twitter.com/calcnerd256/status/301343884892594176">flagging</a> a silly mistake I'd made here. <a href="#fnref1">↩</a></li>
</ol>
</section>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date>2013-02-12 09:00:41</wp:post_date>
		<wp:post_date_gmt>2013-02-12 14:00:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>two-absurd-anti-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="dry"><![CDATA[DRY]]></category>
		<category domain="post_tag" nicename="maintenance"><![CDATA[maintenance]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="worst-practices"><![CDATA[worst practices]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[anti-patterns]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A pair of anti-patterns I've run into recently in my software development work, both of which are absolutely awful, though in completely different ways.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1566</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>150.195.9.160</wp:comment_author_IP>
			<wp:comment_date>2013-02-12 15:44:53</wp:comment_date>
			<wp:comment_date_gmt>2013-02-12 20:44:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, yes, I suppose not everyone possesses the passion for learning and for doing things excellently. I totally understand how that would be frustrating for you too. When I talk of feeling giddy, I mean more when I was writing my own code and found ways of doing it better. Compensating for the same mistake of someone else many times can certainly become tedious.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360701893.1226069927215576171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1565</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-02-12 15:08:28</wp:comment_date>
			<wp:comment_date_gmt>2013-02-12 20:08:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, you see, that's the problem, actually: my predecessor was, erm, distinctly <em>not</em> a professional programmer (though he did it for a long time, he never wanted to learn how to do it well... so he never did it well). And it's painful. I get the same satisfaction, but it starts to grate after the 300th time.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1564</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360699708.0390179157257080078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1563</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-02-12 13:48:30</wp:comment_date>
			<wp:comment_date_gmt>2013-02-12 18:48:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's true. However, for my purposes (that is: all the language I'm working in, e.g. C, C++, Javascript, PHP, and Python) it does the trick. It's particularly Pythonic:

<pre lang="python">if someVar or someOtherVar:
    someFunction(someVar, someOtherVar)
    # ... lots of other things
</pre>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1562</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360694910.334579944610595703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1564</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>150.195.9.160</wp:comment_author_IP>
			<wp:comment_date>2013-02-12 15:07:08</wp:comment_date>
			<wp:comment_date_gmt>2013-02-12 20:07:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not really a programmer, but I know enough programming to feel your pain. I'm a little suprised you see this so much in professional code, these are rookie methods that should be eliminated from one's repertoire once a better way is learned. Personally, I always got a giddy feeling whenever I found a way to simplify/condense/streamline things like you did here.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360699628.5020520687103271484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1562</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david@krycho.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.krycho.net</wp:comment_author_url>
			<wp:comment_author_IP>63.238.47.2</wp:comment_author_IP>
			<wp:comment_date>2013-02-12 13:45:43</wp:comment_date>
			<wp:comment_date_gmt>2013-02-12 18:45:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your final example shown below only works in a language like C/C++ where the language interprets someVar/someOtherVar being zero as false:

<pre lang="c">if (someVar || someOtherVar) {
    someFunction(someVar, someOtherVar);
    // ... lots of other things
}</pre>

Meaning in a language like java, that is not a valid evaluation with int type, so you would have to use your example which is more explicit and in some ways more readable for clarity:

<pre lang="java">if (someVar != 0 || someOtherVar != 0) {
    someFunction(someVar, someOtherVar);
    // ... lots of other things
}</pre>

:-D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360694743.60550594329833984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Four more anti-patterns</title>
		<link>http://2012-2013.chriskrycho.com/web/four-more-anti-patterns/</link>
		<pubDate>Mon, 18 Feb 2013 14:00:34 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1005</guid>
		<description></description>
		<content:encoded><![CDATA[Another set of absolutely lovely gems we found this week: an empty <code>for</code>, the almost-impossible <code>if</code>, <code>continue</code> just because, and source that doesn't match the executable. Oh my!

<h3>The empty <code>for</code></h3>

I'd seen this before, but we found it again while trying to diagnose an (unrelated) infinite loop bug in our source (more on that below):<!--more-->

<pre lang="c">for (;;) {
   // lots of things
   if (someCondition) {
      break;
   }
}</pre>

Not sure why a <code>while</code> loop wouldn't have sufficed... Wait, it <em>does</em>---that's what I replaced it with! My solution looked roughly like this:

<pre lang="c">bool doneSearching = false;
while (!doneSearching) {
   // lots of things
   if (someCondition) {
      doneSearching = true;
   }
}
</pre>

Of course, as usual, that's a good deal less obscure and contrived than the original. (The first time I saw the original, my eyes about bugged out. It's not something I'd ever considered doing, especially since there is no reason to <em>ever</em> do it that way.)

<h3>The almost-impossible <code>if</code></h3>

In the same section of code, we discovered this fun guy:

<pre lang="c">if (h < 0.1 * h)
   h *= 0.1</pre>

I have no idea what that is supposed to accomplish; the only time it would ever work is if <code>h</code> is negative---and you couldn't pick a less clear way to pull that off without some serious effort. But since we have no idea what the code is trying to do---there are no comments, and it's implementing an undocumented and unremembered algorithm---we've left it as is.

<h3>Say <code>continue</code> just because</h3>

Another module in the same program has the following program flow:

<pre lang="c">int i;
for (i = 0; i < someNum; i++) {
   // bunches of things
   if (someCondition) {
      // a few things
      continue;
   } else {
      // a few other things
   }
}</pre>

That's it. For some reason, the previous developer decided he needed to make sure the <code>for</code> loop continued executing immediately after the <code>if</code> statement finished. Of course, it does that anyway. Perhaps it was left after other code that used to follow the conditional block was (re)moved; who knows? In any case, it made for an amusing example.

<h3>Working executable, broken source</h3>

The single most frustrating "anti-pattern" we ran into this week was finding two separate executables that clearly work differently than our current source does. This probably sounds crazy, and it may not even make sense, so allow me to elaborate.

In the first case we found, there is a version of the program used in house that works basically as expected. As with any piece of production software, it has some bugs, but for the most part it runs normally and gives the desired results. When we built it again this week in preparation for making some changes, we discovered to our horror that it gets caught in an infinite loop. Given that the version used internally works as expected, this was a shock, to say the least. Apparently, at some point someone started changing the program but never finished. Fixing it will be... fun.

The second example is a launcher program that spools off a set of other related executables in order to accomplish various tasks. Beyond the first-order frustration that it can only be build in <a href="http://en.wikipedia.org/wiki/Microsoft_Visual_Studio#Visual_Studio_6.0_.281998.29">Visual Studio 6.0</a> (from <em>June 1998</em>, and yes that is almost 15 years ago), the list of programs to spool off is out of date and inaccurate. We don't know how this came to be, either.

In both cases, we'll get past it; we have the know-how, and while it might be painful, we can gather enough information to fix things. But it hammers home again the value of writing code carefully and maintainably.

Or, as a friend of mine put it recently:

<blockquote>Always code as if the person who ends up maintaining your code is a violent psychopath who knows where you live.</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1005</wp:post_id>
		<wp:post_date>2013-02-18 09:00:34</wp:post_date>
		<wp:post_date_gmt>2013-02-18 14:00:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>four-more-anti-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="worst-practices"><![CDATA[worst practices]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[An empty for statement, the almost-impossible conditional, a continue statement just because, and source that doesn't match the executable.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_pj@pjking.net</wp:meta_key>
			<wp:meta_value><![CDATA[2013-02-18 13:08:45|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1616</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-02-18 13:14:23</wp:comment_date>
			<wp:comment_date_gmt>2013-02-18 18:14:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Indeed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1615</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361211263.0753629207611083984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1615</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>pj@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>204.84.163.12</wp:comment_author_IP>
			<wp:comment_date>2013-02-18 13:08:45</wp:comment_date>
			<wp:comment_date_gmt>2013-02-18 18:08:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For your while loop example, would it not make sense to change it to:
<code>
while (!someCondition) {
    // lots of things
}
</code>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361210925.814260005950927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1617</wp:comment_id>
			<wp:comment_author><![CDATA[PJ King]]></wp:comment_author>
			<wp:comment_author_email>pj@pjking.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.pjking.net</wp:comment_author_url>
			<wp:comment_author_IP>204.84.163.12</wp:comment_author_IP>
			<wp:comment_date>2013-02-18 13:55:30</wp:comment_date>
			<wp:comment_date_gmt>2013-02-18 18:55:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Indeed, it would not?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361213730.56256008148193359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Launch an editor with a list of files containing a string</title>
		<link>http://2012-2013.chriskrycho.com/web/launch-an-editor-with-a-list-of-files-containing-a-string/</link>
		<pubDate>Tue, 19 Feb 2013 13:15:25 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1018</guid>
		<description></description>
		<content:encoded><![CDATA[This one's here for my own reference as much as anything, because I <em>will</em> want to do this again and I'd rather not have to go dig it up.

If you want to launch an editor with a list of files matching a specific pattern from any Unix or Linux terminal, the quickest and simplest way I've found to do it as follows:

<pre lang="bash">find directory [-name modifiers] -exec grep -l pattern | xargs editor</pre>

So, for example, I just wanted to use <a href="http://www.sublimetext.com/">Sublime Text 2</a> open every Fortran 95 file in a directory that writes to disk, so I ran the following:

<pre lang="bash">find . -name "*.f95" -exec grep -l 'write(' {} + | xargs subl</pre>

<!--more-->For folks relatively new to the command line, I'll break that down:

<h4>find</h4>
<code>find . -name "*.f95" -exec ... {} +</code> launches the <code>find</code> program, tells it start in the current directory (<code>.</code>) and to find all files with a name ending in <code>.f95</code>. It then uses the results as the basis for the next command with the <code>-exec</code> flag---you could also use <code>xargs</code> as we will later, but it's not safe to do so unless you know the file won't have any spaces in it. The <code>{} +</code> actually passes the results of the <code>find</code> command as the arguments to the command specified by <code>-exec</code>, in this case <code>grep</code>.

<h4>grep</h4>
<code>grep -l 'write('</code> searches through a set of files---in this case, those handed to the command by <code>find</code> looking for the pattern <code>write(</code>. The <code>-l</code> flag indicates that the files should simply be listed, instead of the normal behavior, which is printing the actual contents of the line where the text was found to the screen.

<h4>xargs</h4>
<code>xargs</code> takes the list of files generated by the <code>grep</code> command and uses them as arguments to the next command. This is safe (unlike doing the same would be for <code>find</code>) because <code>grep -l</code> returns its file list with directory structures attached (e.g. <code>./myfile.f95</code>), so there's no ambiguity as to how space or tab characters in the name should be interpreted.

<h4>subl</h4>
<code>subl</code> is just the command line string to launch the Sublime Text editor; it takes file names as arguments, which is why it works this way. (Most sensibly written text-editing apps do; even my new favorite writing application <a href="http://bywordapp.com/">Byword</a> can be launched from the OS X command line with the command <code>open -a Byword.app</code> and will take file names as arguments.) You could just as easily do this with old standby editors like <strong>vim</strong> or <strong>Emacs</strong>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1018</wp:post_id>
		<wp:post_date>2013-02-19 08:15:25</wp:post_date>
		<wp:post_date_gmt>2013-02-19 13:15:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>launch-an-editor-with-a-list-of-files-containing-a-string</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="byword"><![CDATA[Byword]]></category>
		<category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
		<category domain="post_tag" nicename="editor"><![CDATA[editor]]></category>
		<category domain="post_tag" nicename="find"><![CDATA[find]]></category>
		<category domain="post_tag" nicename="grep"><![CDATA[grep]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="sublime-text-2"><![CDATA[Sublime Text 2]]></category>
		<category domain="post_tag" nicename="xargs"><![CDATA[xargs]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The quickest and simplest to launch an editor with a list of files matching a specific pattern from any Unix or Linux terminal.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Why I Love Markdown</title>
		<link>http://2012-2013.chriskrycho.com/web/why-i-love-markdown/</link>
		<pubDate>Sun, 03 Mar 2013 01:07:04 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1025</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For about the last two months, I&#8217;ve steady been moving toward doing all my writing in <a href="http://daringfireball.net/projects/markdown/" title="Markdown Info and Syntax @ DaringFireball">Markdown</a>. Truth be told, I&#8217;ve been moving that way slowly off and on before that, having been looking for a simple syntax like it for quite some time. I&#8217;d spent some time writing in <a href="http://textile.sitemonks.com/" title="Home page of Textile">Textile</a>&#8212;a number of my posts for <a href="http://www.pillarontherock.com/">Pillar on the Rock</a> were composed with it, and I&#8217;ve even used it on this site in the past with a (now-largely defunct and therefore unlinked) plugin. Textile is great in a lot of ways &#8211; if you&#8217;re looking for a syntax that maps directly to HTML. (In fact, if that&#8217;s what you&#8217;re looking for, Textile is much better than Markdown.)</p>

<p>Then, over the last six months or so, I&#8217;ve been using Markdown here and there. <!--more--> It&#8217;s the standard markup language for <a href="https://github.com/">GitHub</a> and <a href="https://bitbucket.org/">Bitbucket</a>. Especially as I&#8217;ve been using the latter more heavily &#8211; both <a href="/web/bitbucket">for myself</a> and for various projects with my consulting work &#8211; increasing my familiarity with Markdown just made sense.</p>

<p>The project itself has been on my radar for a long while. I&#8217;ve been a semi-regular reader of <a href="http://daringfireball.net/">Daring Fireball</a> for a year or more, and I&#8217;ve also watched with some interest as a number of prominent minimalist writing environments launched with native support for the language &#8211; notably <a href="http://www.iawriter.com/mac/" title="iA Writer for Mac">iA Writer</a> and <a href="http://bywordapp.com/">Byword</a>. All of this finally persuaded me to sit down and try writing with it. And I <em>loved</em> it.</p>

<p>Like I said, I was familiar with the concept of a markup language of this variety, having written quite a bit in Textile. But what Gruber got right in his design of Markdown is the fact that it works as plain text. (Look <a href="http://dl.chriskrycho.com/why-i-love-markdown.md">here</a> to see the plain text version of this post.) Textile doesn&#8217;t. I mean, it reads okay if you know what&#8217;s going on, but if you don&#8217;t, it&#8217;s just ugly. Markdown doesn&#8217;t have that problem, which is part of what makes it a great choice for Readme files (which is precisely how both Github and Bitbucket use it): you can read it perfectly well as a plain text file, <em>and</em> it renders to HTML elegantly.</p>

<p>So I started using it. And had lots of <a href="https://groups.google.com/forum/?fromgroups=#!topic/writeroomapp/GqBs6X1d8g0">bugs</a> with my <a href="http://www.hogbaysoftware.com/products/writeroom">then-preferred</a> minimalist writing environment. It was annoying. I tested out <a href="http://bywordapp.com/">Byword</a>. And it was all over. My growing interest turned into full-blown addiction. The kind that makes me proselytize; my poor friends had to put up with a week or more of rants about how glorious it is. I nagged at <a href="http://jaimiekrycho.com/">Jaimie</a> until she tried both Markdown and Byword, as well. (She&#8217;s addicted, too.)</p>

<p>Markdown is simple enough to learn in a few minutes, clean and elegant enough to be readable no matter your context, and darn near everywhere. Almost every time I see a new app announced, it quietly (or loudly) proclaims its support. It&#8217;s becoming the defacto markup language of the Internet, at least among the slightly geekier types who know markup languages. Throw in a tool like <a href="http://johnmacfarlane.net/pandoc/">Pandoc</a> that lets you convert to just about any <em>other</em> markup you can think of (including, surprisingly enough, docx files for Microsoft Word), and you&#8217;re good to go &#8211; but you don&#8217;t really need even that; there are plenty of good apps for each platform that happily take your Markdown input and generate HTML for you if you like.</p>

<p>I love it. Give it a shot; you probably will too.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1025</wp:post_id>
		<wp:post_date>2013-03-02 20:07:04</wp:post_date>
		<wp:post_date_gmt>2013-03-03 01:07:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-i-love-markdown</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bitbucket"><![CDATA[Bitbucket]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[GitHub]]></category>
		<category domain="post_tag" nicename="markdown"><![CDATA[Markdown]]></category>
		<category domain="post_tag" nicename="markup-languages"><![CDATA[markup languages]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="textile"><![CDATA[Textile]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<category domain="post_tag" nicename="writing"><![CDATA[writing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[86]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Markdown]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Markdown is simple enough to learn in a few minutes, clean and elegant enough to be readable no matter your context, and darn near everywhere.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Kindle Custom Fonts Paperwhite info</title>
		<link>http://2012-2013.chriskrycho.com/web/kindle-custom-fonts-paperwhite-info/</link>
		<pubDate>Sun, 03 Mar 2013 13:00:16 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1030</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick note that I've updated my <a href="/web/custom-fonts-on-kindle">original post</a> on custom Kindle fonts with info for the Touch and Paperwhite (at least if you have current firmware).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1030</wp:post_id>
		<wp:post_date>2013-03-03 08:00:16</wp:post_date>
		<wp:post_date_gmt>2013-03-03 13:00:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>kindle-custom-fonts-paperwhite-info</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="kindle"><![CDATA[Kindle]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="updates"><![CDATA[updates]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>A boat anchor</title>
		<link>http://2012-2013.chriskrycho.com/web/a-boat-anchor/</link>
		<pubDate>Thu, 21 Mar 2013 13:47:31 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1037</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote class="quote">[C]ompared to Java code, XML is agile and flexible. Compared to Python code, XML is a boat anchor, a ball and chain.</blockquote>
<p class="attribution">---PJE on Programming, <a href="http://dirtsimple.org/2004/12/python-is-not-java.html">"Python is not Java"</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1037</wp:post_id>
		<wp:post_date>2013-03-21 09:47:31</wp:post_date>
		<wp:post_date_gmt>2013-03-21 13:47:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-boat-anchor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_format" nicename="post-format-quote"><![CDATA[Quote]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="quotes"><![CDATA[Quotes]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2734</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-04-21 21:58:34</wp:comment_date>
			<wp:comment_date_gmt>2013-04-22 01:58:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>This is a <em>prime</em> example of exactly the sort of thing that upgrades to Wordpress should <em>not</em> do: override your basic implementation of existing functionality. I shouldn't have to recode my theme files manually for this.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366595914.404160022735595703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Current plans</title>
		<link>http://2012-2013.chriskrycho.com/web/current-plans/</link>
		<pubDate>Sun, 05 May 2013 20:40:23 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1044</guid>
		<description></description>
		<content:encoded><![CDATA[Things currently on my near-term radar, web development-wise:

<ul>
<li>Finish up a web site that I'm doing pro bono for a friend. This one's been on the back burner since we <a href="/family/from-north-carolina">moved</a>, but I'd like to actually get it knocked out at the beginning of the summer. <!--more--></li>
<li>Get a site build in the <a href="http://www.pylonsproject.org/">Pyramid</a> web framework. Just because I can; there's really nothing more to it than simply curiosity; I've never built anything in a Python web framework and I want to. I doubt the site will be public, as at the moment I don't even have a host that would support running it. (I also don't have a site in mind to use for it. This really is just a toy project for my own interest.)</li>
<li>Build my own <a href="https://github.com/skx/static-site-generators#static-site-generators">static site generator</a>. A bit of a crazy idea, to be sure, but none of the ones I've looked at quite support all the pieces of my personal blogging/site paradigm -- at least, not easily, and not in a way that's straightforward to set up and maintain continuing with my current blog. There are a few advantages to writing my own:

<ul>
<li>It'll do everything I want to it. Because I'm writing it.</li>
<li>It won't have a lot of extra pieces floating around that I <em>don't</em> need, because I'm writing it. (Those pieces are undoubtedly great for other folks; I just don't need them.)</li>
<li>As with Pyramid, it will increase my own familiarity with various Python tools.

<ul>
<li>Pyramid uses <a href="http://www.makotemplates.org/">Mako</a> (and Chameleon, but I'm not interested in that one at present) templates out of the box. I'll probably build whatever I build using <a href="http://jinja.pocoo.org/">Jinja2</a> initially, unless I've already fallen completely in love with Mako, in which case I'll just stick with that. In any case, my familiarity with Python templating languages will have increased substantially.</li>
<li>I'll have some experience with pulling and handling the content from the WordPress database, probably using some of the Python tools for interacting with the database and/or XML content. This will be valuable professionally on both the WordPress and Python fronts.</li>
</ul></li>
<li>It'll simplify my actual <em>writing</em> workflow dramatically. (More on this below.)</li>
<li>It'll get me out of a dependency on PHP. This is always a good plan, because <a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/">PHP is the worst</a>.</li>
<li>It'll get me out of a dependency on WordPress. WordPress is great for what it is, but I don't really need the hand-holding or a lot of its power, and I get plenty of time with it working on other projects, so it's not like I need my own site to keep me fresh on it.</li>
<li>These last two points together result in my not actually needing PHP or indeed <em>anything but HTML</em> supported by my webserver. If I decided to host everything locally, I could do that. This also minimizes the need for specialized caching setups, etc. -- if I ever get <a href="http://fireballed.org/">Fireballed</a> (probably not by Gruber, but by somebody), well, most servers do just fine handing out HTML pages; it's the constant regeneration of page content by PHP that gets you in trouble and requires you to have caching set up on any major WordPress site. This is, from my current standpoint at least, an unalloyed good: by and large, if the web server isn't on fire, you can probably get to my content.</li>
<li>A non-trivial corollary to that: my site is no longer vulnerable to all the <a href="http://www.webmonkey.com/2013/04/massive-wordpress-attack-targets-weak-admin-passwords/">nasty attacks</a> on WordPress (and every other database-driven, dynamically generated CMS). It's just HTML.</li>
</ul></li>
</ul>

<h3>Workflow improvements</h3>

As promised, some comments on how building a static site generator will improve my workflow. At present, my workflow is something like this:

<ol>
<li>Create a post in Markdown using Byword. I have folders set up for each of my blogs (as well as for other projects) on my hard drive. I do this for three reasons.

<ol>
<li>I would <em>hate</em> to lose all my content because of a server crash. I like my <a href="http://www.stablehost.com/">host</a>, and I make backups, but bad things happen.</li>
<li>I like the organization it provides, and like having all my content available in plain text.</li>
<li>I like being able to use <a href="http://mercurial.selenic.com/" title="Mercurial, of course!">version control</a> on my content; all my writing is additionally backed up by getting pushed to Bitbucket regularly. This post, too.</li>
</ol></li>
<li>Export the content -- either after exporting it via Byword's handy export HTML functionality, or copying over the Markdown directly.</li>
<li>Switch over to Chrome and log in to the WordPress administration page for whichever blog I'm posting to, and paste the content in. Depending on whether I exported HTML or just kept the Markdown, I need to enable or disable Markdown processing for that post. (I try to be consistent, so now that I have the <a href="http://wordpress.org/extend/plugins/markdown-on-save/">Markdown on Save plugin</a>, I just copy over the Markdown.)</li>
<li>Publish the post.</li>
</ol>

This isn't particularly onerous. Where it gets much worse is when I have to edit anything, because if I want to keep my local copy in sync with the version actually live on the web, I have to make sure I copy over any changes I made. Before I had the Markdown on Save plugin installed, this was especially painful: the changes had to come back over <em>manually</em>: no copy-paste for me. It's a bit better now, but still obnoxious.

By contrast, my new workflow (once I finish the generator) will look something like this:

<ol>
<li>Write the content in its own specific folder on my hard drive (just like I do now).</li>
<li>Run a single command line script that will generate the finished file and push it to the web server.</li>
</ol>

That's it. All done. Moreover, if I want to edit the content, I just change it in place and rerun the command line call. This reduces pain points all along the way for me. It makes it easy -- trivial, even -- to write, edit and publish my content anywhere that I have internet access, even really <em>terrible</em> internet access. It matches my actual writing workflow much better. It even makes it trivial to make sure the version controlled content matches what's on the internet! (Yes, a nerdy concern if ever there was one.)

So that'll be a fun summer project, and when I'm done, there'll be a public repository up on Bitbucket that people will be free to clone and fork as they desire. (As an acquaintance noted, that probably won't happen much if at all: people are <a href="https://alpha.app.net/fifthposition/post/5165233">opinionated</a> about these sorts of things. Case in point: here I am writing one of my own, despite the fact that others exist.) So here's to the summer!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1044</wp:post_id>
		<wp:post_date>2013-05-05 16:40:23</wp:post_date>
		<wp:post_date_gmt>2013-05-05 20:40:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>current-plans</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="database"><![CDATA[database]]></category>
		<category domain="post_tag" nicename="jinja2"><![CDATA[Jinja2]]></category>
		<category domain="post_tag" nicename="make"><![CDATA[Make]]></category>
		<category domain="post_tag" nicename="markdown"><![CDATA[Markdown]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="pyramid"><![CDATA[Pyramid]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="static-site-generator"><![CDATA[static site generator]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<category domain="post_tag" nicename="writing"><![CDATA[writing]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[My plans for the summer: build a static site generator, play around with Pyramid, finish a website for a friend.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-05-05 20:40:23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Markdown and Academic Writing</title>
		<link>http://2012-2013.chriskrycho.com/web/markdown-and-academic-writing/</link>
		<pubDate>Fri, 17 May 2013 03:49:56 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1056</guid>
		<description></description>
		<content:encoded><![CDATA[Markdown took over my writing life this semester, as I've <a href="/web/why-i-love-markdown" title="Why I Love Markdown">mentioned</a>. I took nearly all my class notes in Markdown (after a brief interval of using Evernote and an even briefer pass with Microsoft Word---neither of them quite worked for me, especially as my addiction grew). The only hiccup with my growing delight in the combination of <a href="http://daringfireball.net/projects/markdown/">Markdown</a> and <a href="http://bywordapp.com/">Byword</a> was the challenge of writing papers in them. There was little question for me that it was worth the few additional wrinkles it entailed, however: a nice clean writing environment and the obviousness of Markdown (not to mention the revision-history-- and version-control--friendly nature of plain text) inclined me <em>strongly</em> toward using it.

For main paper content---all those lovely paragraphs I hammered out---Markdown was sublime. The trick for my papers this semester, though, was something core to any academic writing: footnotes. <!--more-->The problem isn't Markdown; just about every version out there (except the original) has support for a simple footnote syntax:

<pre><code>Writing along and now we need a footnote.[^1] Then we go merrily along on our way again.

[^1]: Here's the content for that footnote. Simple enough---obvious, even.
</code></pre>

No, the real problem is <em>keeping track</em> of those footnotes. My  habit for blog posts and even class notes was to simply put the footnotes at the bottom of the piece. That makes sense for those kinds of content: it's easy to keep track of the order of the notes, as one generally isn't massively rearranging blog posts, much less class notes. So I'd simply go in order: <code>[^1]</code>, <code>[^2]</code>, and so on.

Then I wrote my <a href="/theology/contra-mundum-athanasius" title="Contra Mundum: A Biographical Sketch of Athanasius of Alexandria">first major academic paper</a> using Markdown and Byword. Wrangling the footnotes was painful, to say the least. In fact, at one point I switched the order of some of the pieces of the text, and would have had footnotes out of order if, thankfully, the two involved hadn't been referencing the same author on the same page. In any case, I knew I had to come up with a better system when tackling my <a href="/theology/head-coverings-an-exegesis-of-1-corinthians-11_2-16" title="Head Coverings! An Exegesis of 1 Corinthians 11:2--16">second major paper</a>, which promised to entail a much higher number of footnotes, given the greater complexity of the content.

The system I devised worked spectacularly well, so I thought I'd share it in case anyone else is interested in using Markdown for academic writing.

Since footnotes are essentially just another type of link, the text in them can be arbitrary. The text is simply replaced by a numeral---footnotes are always numbers or symbols, and in academic writing, they're nearly always numbers because one quickly runs out of symbols. So Markdown handles this sensibly. Also, the order of the footnotes simply matches the order they appear in the text (even if you have them out of order where you define the footnote content). Thus:<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>

<pre><code>In which I make a fool of myself.[^hippies] It's not exactly like that's *hard*.[^frogs]

[^frogs]: Because, you see, I have a lot of practice.

[^hippies]: Why in the *world* would anyone ever put their footnotes out of order? Well, one wouldn't---at least, not on purpose.
</code></pre>

The resulting output will look like this:

<blockquote>
  In which I make a fool of myself.<sup>1</sup> It's not exactly like that's <em>hard</em>.<sup>2</sup>
</blockquote>

<hr/>

<blockquote>
  <sup>1</sup>Why in the <em>world</em> would anyone ever put their footnotes out of order? Well, one wouldn't---at least, not on purpose.
  
  <sup>2</sup>Because, you see, I have a lot of practice.
</blockquote>

The order has flipped, and the letters have been replaced by numerals, just as one would hope. I put this to good use when working on my paper. As with any well-constructed academic paper, I formulated my argument and made a detailed outline up front. Although the structure of the paper flexed and changed a bit as I went along, this gave me the basic parameters within which I was working at all times. At any given point, I was working in a distinction marked off by at least one top-level (<em>Introduction</em> or <em>Analysis</em> or <em>Conclusion</em>) and often by a subhead. Furthermore, I was always in a paragraph. I simply combined these elements to make up the marker for any given footnote.

My footnote text formula was simple: I put together the first letter of each section followed by the paragraph number (each separated by dashes), followed by the footnote number (actually a letter) for that paragraph. Thus, if I was writing the third paragraph of Section II of the Analysis part, the first footnote would have been "numbered" <code>[^A-II-3a]</code>.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> The dashes are useful because they made it clear that I was working on <em>Section 2, Paragraph 3</em>, not <em>Analysis, Paragraph 23</em>. Further, I kept the footnotes immediately next to the paragraph with which they belonged, making it easy to find them and move them as well. Thus, if and when I moved pieces around, I usually only had to change a few numbers related to that footnote---most frequently, just switching the paragraph numbers.

While this was certainly a bit more work than the automatic footnote generation one gets with Microsoft Word, it quickly became a smooth process. Sensible use of find and replace operations made the switches easy enough, and if it took me a few extra minutes to do those elements than it would have in Word, it took me a great deal less time in general because I work so much more quickly in Byword with Markdown than I do in Word.

I hope some people will find the approach I developed useful for their own writing!

<hr />

<h3>Addendum: Extended Example</h3>

I thought it might be useful to provide a slightly longer example to demonstrate what the foonoting looked like in practice. As a point of amusement (as well as illustrating one of the rather intriguing behaviors I laid out earlier), note that footnote <code>A-III-5a</code> comes after <code>A-III-5b</code> in the text; I switched the sentence order at some point during the editing, but never bothered changing the footnote order because I knew Markdown would generate the output correctly.

<pre><code>As if anticipating the ways this passage would be abused, Paul quickly moves to restrict its interpretation in the second sub-chiasm (verses 11--12): neither are women independent of men, nor men of women. Just as woman was originally formed from man, now all men are born of women. Thus, although woman was created from and for man, he cannot claim any superiority on that basis: she has become his source just as he was hers. Even more importantly, men and women are mutually dependent "in the Lord"---language that is common throughout Paul's epistles whenever he is calling believers to unity (cf. Ephesians 2:13--21, Philippians 2:1--2, Galatians 3:28). The ontological relationship between the sexes that God established in creation is to be preserved, but characterized by mutual dependence and unity in Christ---not by domineering or abuse.[^A-III-4a]

[^A-III-4a]: Egalitarian and complementarian commentators are united on this point: see e.g. Belleville, 231; Fee, 522--524; Robertson and Plummer, 234; Lockwood, 375--376.

Each sub-chiasm is relatively clear on its own, but the relationships between the sub-chiasms, and between each of them and the turn in verse 10, are less immediately obvious. Indeed, the primary challenge in interpreting this section---and, arguably, of interpreting the entire passage---is understanding verse 10. Translated somewhat woodenly, the sentence reads, "For this reason, a woman ought to have authority on/over her head, because of the angels" (author's translation). The language of the first sub-chasm suggests that Paul might mean be using "authority" (ἐξουσία) metonymously, despite the linguistic oddity of this move.[^A-III-5b]. If so, the passage reads, "a woman ought to have a symbol of authority on her head."[^A-III-5a] On the other hand, Paul's language in the following sentence ("Nevertheless, in the Lord woman is not independent of man") doubly suggests that he means what the text more naturally says: "a woman ought to have authority over her [own] head."[^A-III-5c] First, the use of "nevertheless" sets the second sub-chiasm in contrast to the turn. Second, the fact that Paul begins by emphasizing that woman is not independent of man (rather than vice versa) suggests that it is her authority, not the man's, that is in view.[^A-III-5d]

[^A-III-5a]: So the ASV, ESV, HCSB, NET, NIV 1984, NASB, NKJV, NRSV. Others go even further: NLT, for example, has "a woman should wear a covering on her head to show she is under authority."

[^A-III-5b]: Fee takes the unique nature of this would-be construction, unparalleled in any other Greek usage, as the basis for dismissing it out of hand (519 n. 23)---apparently ignoring his own suggestion, mere pages later, that "*exousia* was one of the Corinthians' own words.... Very likely that is the reason for this choice of words, which otherwise appears to be so unusual" (521), which satisfactorily explains Paul's otherwise odd linguistic choice.

[^A-III-5c]: Fee, 520.

[^A-III-5d]: Fee, 522--523.
</code></pre>

The resulting output:

<blockquote>
  As if anticipating the ways this passage would be abused, Paul quickly moves to restrict its interpretation in the second sub-chiasm (verses 11--12): neither are women independent of men, nor men of women. Just as woman was originally formed from man, now all men are born of women. Thus, although woman was created from and for man, he cannot claim any superiority on that basis: she has become his source just as he was hers. Even more importantly, men and women are mutually dependent "in the Lord"---language that is common throughout Paul's epistles whenever he is calling believers to unity (cf. Ephesians 2:13--21, Philippians 2:1--2, Galatians 3:28). The ontological relationship between the sexes that God established in creation is to be preserved, but characterized by mutual dependence and unity in Christ---not by domineering or abuse.<sup>1</sup>
  
  Each sub-chiasm is relatively clear on its own, but the relationships between the sub-chiasms, and between each of them and the turn in verse 10, are less immediately obvious. Indeed, the primary challenge in interpreting this section---and, arguably, of interpreting the entire passage---is understanding verse 10. Translated somewhat woodenly, the sentence reads, "For this reason, a woman ought to have authority on/over her head, because of the angels" (author's translation). The language of the first sub-chasm suggests that Paul might mean be using "authority" (ἐξουσία) metonymously, despite the linguistic oddity of this move.<sup>2</sup>. If so, the passage reads, "a woman ought to have a symbol of authority on her head."<sup>3</sup> On the other hand, Paul's language in the following sentence ("Nevertheless, in the Lord woman is not independent of man") doubly suggests that he means what the text more naturally says: "a woman ought to have authority over her [own] head."<sup>4</sup> First, the use of "nevertheless" sets the second sub-chiasm in contrast to the turn. Second, the fact that Paul begins by emphasizing that woman is not independent of man (rather than vice versa) suggests that it is her authority, not the man's, that is in view.<sup>5</sup>
</blockquote>

<hr/>

<blockquote>
  <ol>
  <li><p>Egalitarian and complementarian commentators are united on this point: see e.g. Belleville, 231; Fee, 522--524; Robertson and Plummer, 234; Lockwood, 375--376.</li></p></li>
  <li><p>Fee takes the unique nature of this would-be construction, unparalleled in any other Greek usage, as the basis for dismissing it out of hand (519 n. 23)---apparently ignoring his own suggestion, mere pages later, that "<em>exousia</em> was one of the Corinthians' own words.... Very likely that is the reason for this choice of words, which otherwise appears to be so unusual" (521), which satisfactorily explains Paul's otherwise odd linguistic choice.</li></p></li>
  <li><p>So the ASV, ESV, HCSB, NET, NIV 1984, NASB, NKJV, NRSV. Others go even further: NLT, for example, has "a woman should wear a covering on her head to show she is under authority."</p></li>
  <li><p>Fee, 520.</p></li>
  <li><p>Fee, 522--523.</p></li>
  </ol>
</blockquote>

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Note the extra spacing between the footnotes. I'm not sure why, but footnotes behave differently than regular links, which can be stacked one after another. Footnotes have to be separated as separate paragraphs---probably because they are paragraph-like entities. Someday I'll look it up in the implementation to see why. But not today.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
Because of the relatively simple structure of my paper, I actually simplified this, dropping the top-level header and making a few other adjustments. But this is the gist of my approach, and it's the framework in which I intend to work going forward.

If you're curious, I made this footnote with a simple <code>[^2]</code>. <em>Boring</em>.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1056</wp:post_id>
		<wp:post_date>2013-05-16 23:49:56</wp:post_date>
		<wp:post_date_gmt>2013-05-17 03:49:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>markdown-and-academic-writing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[academic]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Writing academic papers with Markdown is great—with one wrinkle: you need a good system for handling footnotes. This one works pretty well.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-08-17 12:33:19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_filip.witek93@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-08-17 07:05:13|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_dawood.drennan@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-09-06 16:44:50|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6769</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>theology@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-09-06 19:22:22</wp:comment_date>
			<wp:comment_date_gmt>2013-09-06 23:22:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Excellent---glad to have been of some assistance!</p>

<p>Your best bet for converting to Word is using <a href="http://johnmacfarlane.net/pandoc/" rel="nofollow">pandoc</a>, which lets you export to .docx among a variety of other formats. (Since you're using it for academia, you may also be interested in looking at how it exports to LaTeX---very handy.) It's a command line tool, but even if you're not super comfortable there, it's pretty easy to use.</p>

<p>To use pandoc to generate a Word document (with nicely formatted footnotes, smart typography like curly quotes, em- and en-dashes, and so on), you can just run the command <code>pandoc &lt;input document(s)&gt; -S -o my_word_doc.docx</code> at the command line. As documented <a href="http://johnmacfarlane.net/pandoc/installing.html" rel="nofollow">here</a>, pandoc works on all major platforms, and the <a href="http://johnmacfarlane.net/pandoc/README.html" rel="nofollow">documentation</a> is <em>excellent</em> and very thorough.</p>

<p>A couple notes that you may find helpful:</p>

<ul>
<li>Make sure you add a couple blank lines at the bottom of each file if you combine multiple files; pandoc just combines them all before running its conversion, so without that white space the last line in one file with run right into the first line in the next file. This can cause all sorts of trouble!
For the same reason, if you do use separate documents (say, for chapters), you will need to make a top-level distinction in footnotes, similar to how I did in this post, for pandoc to distinguish between them successfully. If you have <code>[^A-1]</code> in two documents, it will grab the footnote text from the first one and use that for both pieces. Obviously not what you want.</li>
<li>I created a <a href="http://office.microsoft.com/en-us/word-help/make-changes-to-a-quick-style-set-HA010201147.aspx" rel="nofollow">Quick Style set</a> in Word so that I can generate a document and have it styled the way I want pretty much immediately. There is also an option with pandoc to supply a reference document, the styles of which will be applied to the document in question, <code>--reference-docx=&lt;path to reference doc&gt;</code>. There's a bug with that on Mac, but I believe it works correctly on Windows from what the pandoc developer told me.</li>
<li>You can also customize the templates for other kinds of output (like LaTeX templates, which is what I've used to generate PDFs like the one on <a href="http://2012-2013.chriskrycho.com/theology/will-of-god" rel="nofollow">this page</a>). That probably won't matter to you much at this stage, but it's nice to know.</li>
</ul>

<p>Let me know if there's any other questions I can answer, and Godspeed on your dissertation!</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6765</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378509909.0156600475311279296875;s:7:"message";s:50:"chriskrycho changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378509743.0875530242919921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6771</wp:comment_id>
			<wp:comment_author><![CDATA[Dawood]]></wp:comment_author>
			<wp:comment_author_email>dawood.drennan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.107.118.43</wp:comment_author_IP>
			<wp:comment_date>2013-09-06 20:31:27</wp:comment_date>
			<wp:comment_date_gmt>2013-09-07 00:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your quick response!

I've been playing around with Pandoc and MultiMarkdown for a little while now, and think it might actually be more useful for long documents to use the inline footnote function (although that does, of course, mess with word count targets and the like, which would need to be adjusted). If you've not come across it, you can just use <code>^[Inline footnote text here.]</code> directly where you want to enter the footnote in the body text, without anything else required.

I've tried this with some longish documents (conference papers), and it seems to work perfectly, although I haven't as yet tried linking multiple documents together in Pandoc.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6769</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378513887.3356609344482421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6773</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>theology@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-09-06 20:43:48</wp:comment_date>
			<wp:comment_date_gmt>2013-09-07 00:43:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, I had not noted that Pandoc supported that. Very handy, and yes, I think that especially for long documents that should be extremely helpful---not least because then you don't have to worry about managing the numbers yourself. I expect I may take advantage of that myself next time I'm writing a paper like this, so thanks for passing it along.

Now, if I can just get the folks at Byword to add support for it in their document previews, I'll be <em>set</em>.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6771</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378514628.5451509952545166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6765</wp:comment_id>
			<wp:comment_author><![CDATA[Dawood]]></wp:comment_author>
			<wp:comment_author_email>dawood.drennan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.107.118.43</wp:comment_author_IP>
			<wp:comment_date>2013-09-06 16:44:50</wp:comment_date>
			<wp:comment_date_gmt>2013-09-06 20:44:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That was an amazing post, and gives me hope that I could actually write my dissertation using Markdown! I currently do something similar to you for footnotes (although put them immediately after I've finished the paragraph they are found in so I don't forget!), and even use the Dropbox text editor to type on my phone whilst on the train to and from school. It's incredibly useful!

My problem, however, is how to transform the Markdown footnotes into proper Word footnotes. How did you manage to overcome this issue? I am using Windows (unfortunately it's what my school uses), and my supervisors etc. are stuck using Word and Office for their writing, so sending them things in pure Markdown will be unsuitable.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378500290.249023914337158203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6086</wp:comment_id>
			<wp:comment_author><![CDATA[Filip Witek]]></wp:comment_author>
			<wp:comment_author_email>filip.witek93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.31.165.125</wp:comment_author_IP>
			<wp:comment_date>2013-08-17 10:05:04</wp:comment_date>
			<wp:comment_date_gmt>2013-08-17 14:05:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I downloaded MaxTeX (http://www.tug.org/mactex/morepackages.html), which is a subset of TeX Live but still supports the Markdown to PDF conversion in Pandoc. Works perfectly fine!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6081</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376748304.6682360172271728515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6080</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-08-17 08:35:18</wp:comment_date>
			<wp:comment_date_gmt>2013-08-17 12:35:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Oh, and I should note that using <a href="http://johnmacfarlane.net/pandoc/" rel="nofollow">Pandoc</a>, you can export directly to Word and even use another document as a template so you can have the desired formatting from the get-go. Likewise with LaTeX/PDF, though I've yet to get that set up. I <em>highly</em> recommend Pandoc if you're going to be doing a lot of Markdown stuff.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6075</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376742918.9908249378204345703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6081</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-08-17 08:36:10</wp:comment_date>
			<wp:comment_date_gmt>2013-08-17 12:36:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Good luck! It's a beast; I'm downloading it myself right now. There's a reason they recommend Safari: it's a 2-GB download.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6079</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376742970.3664910793304443359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6079</wp:comment_id>
			<wp:comment_author><![CDATA[Filip Witek]]></wp:comment_author>
			<wp:comment_author_email>filip.witek93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.31.165.125</wp:comment_author_IP>
			<wp:comment_date>2013-08-17 08:33:38</wp:comment_date>
			<wp:comment_date_gmt>2013-08-17 12:33:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hm. I guess I'll download MacTeX package then. Thanks!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6077</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376742818.5964810848236083984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6077</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-08-17 08:15:14</wp:comment_date>
			<wp:comment_date_gmt>2013-08-17 12:15:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I cheated: I went via MS Word. I took the document I exported to Word and tweaked the styles a bit. The native PDF export functionality in OS X did the trick nicely for me, though I think I may have used the Adobe PDF conversion instead to reduce the file size with the embedded font file.</p>

<p>That said, I <em>think</em> the LaTeX tools in Pandoc would probably do it as well; I haven't tried yet.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6075</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376741714.7235519886016845703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6075</wp:comment_id>
			<wp:comment_author><![CDATA[Filip Witek]]></wp:comment_author>
			<wp:comment_author_email>filip.witek93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.31.165.125</wp:comment_author_IP>
			<wp:comment_date>2013-08-17 07:05:13</wp:comment_date>
			<wp:comment_date_gmt>2013-08-17 11:05:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Since I also tried writing my academic papers in Markdown, I'm very curious about how you managed to export your second major paper to PDF while perserving pagination-based attributes, such as footnotes printed at the end of each page. I have to submit my papers in PDF and so far, all I could do with Markdown documents was to simply export them to Rich Text Format and take care of the layout in Pages or Microsoft Word. Have you found a way to export Markdown documents to PDF while perserving the required aspects of layout of your academic papers?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376737513.27394390106201171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>YouTube Video Name trick</title>
		<link>http://2012-2013.chriskrycho.com/web/youtube-video-name-trick/</link>
		<pubDate>Sun, 19 May 2013 02:10:16 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1065</guid>
		<description></description>
		<content:encoded><![CDATA[I discovered a fascinating, brilliant trick you can use with any YouTube video name string while talking with <a href="http://stephencarradini.com">Stephen Carradini</a> yesterday. I shared a Doctor Who clip (<a href="http://www.youtube.com/watch?v=LakwV3P3qII&amp;name=DoctorWhoWibblyWobblySpeech">this one</a>, if you're curious), and it took him a bit to get around to watching it because the URL didn't exactly make it particularly clear what video I had sent him:

<pre><code>http://www.youtube.com/watch?v=LakwV3P3qII
</code></pre>

We started talking about how YouTube should tag the name onto the end of the link, so that people could actually tell what video they were going to see, and Stephen posted an example of how it could work:

<pre><code>http://www.youtube.com/watch?v=LakwV3P3qII_drwhoblink
</code></pre>

Lo and behold: <em>that link works</em>. I got curious and started poking around at different videos on YouTube and quickly discovered that you can append whatever text you want after the video ID; you'll end up at the base URL again. All of YouTube's link IDs are 10 character strings, with some mix of letters, numbers, and underscores allowed. Everything after the tenth character gets stripped. (<em>Almost</em> everything, that is...)

That's halfway to <a href="http://www.youtube.com/watch?v=rX2RKJIkwYw&amp;name=DoctorWho_Fantastic">fantastic</a> -- but only halfway because, as noted, you just get pushed down to that stripped URL. Thus, when I clicked on Stephen's link, it truncated back down to the original link I sent him. Fine and good for one person, but what if you wanted to re-share it? The link has been changed, so you'd have to go back to where I originally shared it with you, or you'd have to add it on yourself.

Knowing a whee little bit about how these things tend to work,<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> I wondered what happens if you use an <code>&amp;</code> to tell YouTube that you want to add something to the query you're sending it.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> As I suspected, YouTube hangs onto that. Most likely, there are other queries that include more than just the video name -- things like content source -- so those parts get left in. In our case, that means that we can add a string to the link and it will be there for others to use if they want to reshare the video themselves.

Anybody who curiously hovered over (or clicked to) the Doctor Who video I referenced at the start of the post went to this link:

<pre><code>http://www.youtube.com/watch?v=LakwV3P3qII&amp;name=DoctorWhoWibblyWobblySpeech
</code></pre>

It's like magic! You can see what the video is about, and even when you click the link, you still have the name of the video to share with all your friends!

And there ends your lesson in cool tricks with YouTube for the day, kids.

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
For the technically inclined (before you run away, note that footnote 2 is for those who are <em>not</em> technically inclined -- confusing, I know): it looks like it's probably a straightforward hashing algorithm designed to produce 10-character strings in whatever subset of ASCII the YouTube engineers settled on. Because of that, they can safely ignore everything after the tenth character: every single YouTube video has the same length ID. Your video could be named "Joe" or "John Jacob Jingleheimer Schmidt" and the result would be a ten-character string. This is quite smart: it prevents intersections between video names (<em>your</em> video named "Joe" ends up having a different string than <em>my</em> video named "Joe" because of how the hashing algorithm works), and it means that YouTube video links are never all that long.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
For the not-so-technically minded: in other words, the string at the end of the website tag is a question: Can I watch the video (<code>watch?v</code>) you know by <em>this</em> name (<code>={10 character string}</code>)? You can tell websites you want to ask another question at the same time by adding an ampersand character to it and extending the string.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1065</wp:post_id>
		<wp:post_date>2013-05-18 22:10:16</wp:post_date>
		<wp:post_date_gmt>2013-05-19 02:10:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>youtube-video-name-trick</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="link-structure"><![CDATA[link structure]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="queries"><![CDATA[queries]]></category>
		<category domain="post_tag" nicename="sharing"><![CDATA[sharing]]></category>
		<category domain="post_tag" nicename="social-media"><![CDATA[social media]]></category>
		<category domain="post_tag" nicename="tricks"><![CDATA[tricks]]></category>
		<category domain="post_tag" nicename="youtube"><![CDATA[YouTube]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[YouTube video name]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[By appending "&name=YourVideoTitle" to a YouTube video name when you share it, you can let others know what they're watching—in a reshareable way.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-05-19 02:10:16]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3369</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Dorbin]]></wp:comment_author>
			<wp:comment_author_email>hyperkinetic.eric@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>150.195.9.228</wp:comment_author_IP>
			<wp:comment_date>2013-05-20 12:14:36</wp:comment_date>
			<wp:comment_date_gmt>2013-05-20 16:14:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thats a nifty little trick, I'll have to use it.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369066476.321487903594970703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>step-stool.io</title>
		<link>http://2012-2013.chriskrycho.com/web/step-stool-io-status/</link>
		<pubDate>Sat, 25 May 2013 03:11:47 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1070</guid>
		<description></description>
		<content:encoded><![CDATA[Pro tip: keep an eye on <a href="http://step-stool.io">step-stool.io</a> over the next week. Fun things headed that direction in short order.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date>2013-05-24 23:11:47</wp:post_date>
		<wp:post_date_gmt>2013-05-25 03:11:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step-stool-io-status</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Status]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="step-stool"><![CDATA[Step Stool]]></category>
		<category domain="post_tag" nicename="step-stool-io"><![CDATA[step-stool.io]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-05-25 03:11:47]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[step-stool-io]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>step-stool.io</title>
		<link>http://2012-2013.chriskrycho.com/web/step-stool-io-2/</link>
		<pubDate>Sun, 26 May 2013 02:44:25 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1074</guid>
		<description></description>
		<content:encoded><![CDATA[As of a couple hours ago, my newest personal project has a website. <strong>Step Stool</strong>, the static site generator I'm writing in Python, now has a home at <a href="http://step-stool.io">step-stool.io</a>.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> If you visit the site, you'll see that, while it looks nice (at least: I think it does), there's not much to it and most of the links don't go anywhere. The link that <em>does</em> go somewhere tells you that the project for which the website exists doesn't actually have any functioning code,  yet.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>

<img src="http://step-stool.io/images/step-stool-512.png" alt="Step Stool" />

(That gorgeous logo? Designed by the absolutely brilliant <a href="http://www.krop.com/spidercam/">Cameron Morgan</a>.)

So why is it live? There are a few reasons. First, the whole point of the project is my having fun with programming. Web design may not be directly involved in finishing <strong>Step Stool</strong>, but it definitely scratches the <em>fun</em> itch just as effectively. Second, and more importantly, it's allowed me to get some time in with <em>other</em> technologies I've been interested in for a while - specifically, <a href="http://sass-lang.com/">SASS</a>. I've been frustrated with all the problems SASS solves in CSS for a while now, and I've known I wanted to just go ahead and learn it for a while. I just haven't had a project where it made sense - until now.<!--more-->

Third, I've never developed a whole project in public before. This whole thing is open source (I'm using the <a href="http://opensource.org/licenses/MIT">MIT License</a> because I think it's one of the most actually <em>free</em> licenses<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>), and you can watch the development as it happens on the <a href="http://bitbucket.org/chriskrycho/step-stool">Bitbucket repository</a>. Since I'm developing it that way, I decided I might as well let the website development be public, too - hilarious missteps in my use of SASS and so forth included for public amusement. I doubt anyone will particularly care, but if they do, it's here to see.

Fourth, and perhaps most importantly, it's motivation. Putting the site up helps me want to get this project done; it's a great big sign that says, "Somebody is working on this!"<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> Given the size of the web, of course, it's mostly a great big sign to <em>me</em>, but since that's the point, I trust it will do its job effectively.

Along similar lines, I'm actually writing the README file first. In fact, that is the only thing of any substance on the repository at present. For a project like this, I think <a href="http://tom.preston-werner.com/2010/08/23/readme-driven-development.html">README-driven development</a> is a perfect fit: it's one of the fastest ways to figure out what you want to do and how you want the pieces to fit together. It's sort of an Agile way of making some architecture and design decisions right up front. It also means that, when I'm done, I should actually have at least some documentation that is in reasonably good shape - the Achilles heel of most projects like this one, in my experience.

Going forward, I plan to finish the basic framework for the site in the next couple weeks, including adding some content for the "About" page. This includes making a substantially different layout for those content pages, for obvious reasons, as well as getting all the responsive pieces fitting together nicely so that the site will present decently on phones and tablets (and ginormous 27&Prime; monitors, for that matter). Along the way, I'm going to keep working on picking up some of the <em>other</em> new technologies I'm interested in learning. In particular, I intend to write any and all Javascript for this project in <a href="http://coffeescript.org/">CoffeeScript</a> and any animations/DOM manipulation/etc. will most likely be accomplished using <a href="http://zeptojs.com/">Zepto.js</a>, an library that is API-compatible with jQuery but much smaller.

Finally, once I have the static site generator completed, one of the first projects I'm going to undertake is rebuilding <a href="http://step-stool.io">step-stool.io</a> in Step Stool. Since I'll already have all the CSS, it should be straightforward, but it'll make a nice demonstration of the non-blog uses the tool will support. It isn't generated by Python <em>yet</em>... but it will be.

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Fun story: <code>.io</code> domains are <em>expensive</em>. This ended up being my birthday present from Jaimie this year. Yes, I'm that much of a nerd. But really: for a static site generator, I don't think you could possibly improve on <code>.io</code> for a domain.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
A <code>setup.py</code> file with nothing to set up doesn't count.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

<li id="fn:3">
Unlike the GPL, which is free only for a very bizarre definition of the word "free." But that's another post for another day.&#160;<a href="#fnref:3" rev="footnote">&#8617;</a>
</li>

<li id="fn:4">
The fact that I sunk my birthday present into it is a similarly encouraging bit.&#160;<a href="#fnref:4" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1074</wp:post_id>
		<wp:post_date>2013-05-25 22:44:25</wp:post_date>
		<wp:post_date_gmt>2013-05-26 02:44:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step-stool-io-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cameron-morgan"><![CDATA[Cameron Morgan]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[SASS]]></category>
		<category domain="post_tag" nicename="step-stool"><![CDATA[Step Stool]]></category>
		<category domain="post_tag" nicename="web-design"><![CDATA[web design]]></category>
		<category domain="post_tag" nicename="zepto-js"><![CDATA[zepto.js]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-05-26 02:48:29]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[step-stool-io]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Modular scales: fantastic, but don&#039;t overdo it</title>
		<link>http://2012-2013.chriskrycho.com/web/modular-scales-fantastic-but-dont-overdo-it/</link>
		<pubDate>Tue, 04 Jun 2013 04:15:31 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1090</guid>
		<description></description>
		<content:encoded><![CDATA[I'm a huge fan of the <a href="http://modularscale.com/">Modular Scale</a> tool Tim Brown put together a few years ago, and I've used it on a number of projects to help me set up good vertical and horizontal rhythms on a number of sites I've designed. As soon as I read Brown's <a href="http://alistapart.com/article/more-meaningful-typography" title="More Meaningful Typography">original article at A List Apart</a> (Off the top of my head, I know I used a scale on <a href="http://2012-2013.chriskrycho.com/">chriskrycho.com</a>, <a href="http://independentclauses.com/">independentclauses.com</a>, <a href="http://jaimiekrycho.com/">jaimiekrycho.com</a>, <a href="http://theinvitedbirth.com/">theinvitedbirth.com</a>, and <a href="http://step-stool.io/">step-stool.io</a> -- which is to say, every site I've done a full design on in the last two years. Again: I'm a fan.)

That said, the modular scale can get away from you pretty easily if you're not careful. I'm working on a couple different designs at the moment -- the one for <a href="http://step-stool.io/">Step Stool</a> and one for the simple, clean theme I'll be distributing <em>with</em> Step Stool for anyone who cares to download and use it. (Wouldn't that be fun -- to discover one of my designs on some random blog or site? I can see where WordPress theme designers get their kicks.) In both cases, the modular scales I've generated have been pretty robust.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> As a result, I ended up with a rather ridiculous SASS file with the modular scale embedded for both of them, with tons of sizes that I'll never use.

More importantly, though, most of those sizes I <em>should</em> never use. This struck me tonight as I was looking at the <a href="http://typeplate.com/">Typeplate framework</a>. One of the neat little SASS mixins they have defines a limited set of heading sizes -- just nine sizes total, in fact. By contrast, the modular scale tool will happily spit out a table with 36 different values on it. Let's be honest: if I use all 36 of those values, or even if I don't choose from among them discerningly, my site is going to be just as much of a mess as if I eyeballed it. (Probably more.)

The trick, then, is to use the <em>principles</em> of good typography with the <em>tools</em> available to make good choices about which sizes from the scale to use. (Limitations are often one of the most powerful tools in any creative process.) As the folks over at Typecast <a href="http://typecast.com/blog/contrast-through-scale">put it</a>:

<blockquote>
  Limiting your typographic scale can improve your typography considerably. And rather than arbitrarily plucking type sizes out of the air, ratios will ensure your intervals are consistent and your scale harmonious.
</blockquote>

The modular scale tool gives you the latter bit. Limiting the number of pieces from the scale, and choosing those elements sensibly? That, you have to do yourself.

<hr />

<h3>More reading</h3>

<ul>
<li><a href="http://alistapart.com/article/more-meaningful-typography" title="More Meaningful Typography">"More Meaningful Typography,"</a> Tim Brown, <em>A List Apart</em></li>
<li><a href="http://lamb.cc/typograph/">"Scale and Rhythm,"</a> Iain Lamb -- itself both an essay and a tool for demonstrating both scale and rhythm</li>
<li><a href="http://typecast.com/blog/contrast-through-scale">"Contrast Through Scale,"</a> Christopher Murphy, <em>Typecast</em></li>
</ul>

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
In case you're curious: <a href="http://modularscale.com/scale/?px1=18&amp;px2=128&amp;ra1=1.5&amp;ra2=0">the Step Stool scale</a> and the <a href="http://modularscale.com/scale/?px1=20&amp;px2=28&amp;ra1=1.5&amp;ra2=0">Clean theme scale</a>.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1090</wp:post_id>
		<wp:post_date>2013-06-04 00:15:31</wp:post_date>
		<wp:post_date_gmt>2013-06-04 04:15:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modular-scales-fantastic-but-dont-overdo-it</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="modular-scale"><![CDATA[modular scale]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[modular scales]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The trick is to use the principles of good typography to make good choices about which sizes from a modular scale to use—creativity springs from limitation.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-06-04 12:13:09]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_mail@ldexterldesign.co.uk</wp:meta_key>
			<wp:meta_value><![CDATA[2013-06-19 12:17:24|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4187</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-06-24 07:45:44</wp:comment_date>
			<wp:comment_date_gmt>2013-06-24 11:45:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Lewis, sorry about the long delay. Busy week! I actually try to use the scale for pretty much everything you listed; I even use the relations for setting percentages.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4090</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372074347.3514139652252197265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4201</wp:comment_id>
			<wp:comment_author><![CDATA[Lewis Dexter Litanzios]]></wp:comment_author>
			<wp:comment_author_email>mail@ldexterldesign.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.ldexterldesign.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP>10.54.60.36</wp:comment_author_IP>
			<wp:comment_date>2013-06-24 16:35:40</wp:comment_date>
			<wp:comment_date_gmt>2013-06-24 20:35:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for reply

Doesn't it go against your point in thie post though? I think the point you're really drawing on, beside modular scale, is basic use of typography ala http://www.markboulton.co.uk/journal/five-simple-steps-to-better-typography-part-4

Nevertheless would be interested to know your modular scale setup; which function are you using?

Yours hopefully,
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4187</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372106140.4448258876800537109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4514</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>web@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-07-02 20:53:06</wp:comment_date>
			<wp:comment_date_gmt>2013-07-03 00:53:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It certainly can. I don't hold myself to the scale rigorously, either; there are times when I think the scale just looks off a bit and eyeball it. My specific point in this post was not to end up with a gazillion sizes. When I want a nice huge padding at the top of a view, however (for example), a lot of times I'll go back to the scale and grab something in the range I'm looking for, because I know it will tend to help with the visual rhythm of the page in a small but meaningful way.

Tooling-wise, I basically just use the original <a href="http://modularscale.com" rel="nofollow">modular scale tool</a> Tim Brown put up around the time he posted that article, and embed the sizes I <em>do</em> want in my SASS. We'll see if I stick with that or come up with another solution at some point in the future.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4201</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372812786.274466037750244140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4531</wp:comment_id>
			<wp:comment_author><![CDATA[Lewis Dexter Litanzios]]></wp:comment_author>
			<wp:comment_author_email>mail@ldexterldesign.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.ldexterldesign.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP>213.133.64.253</wp:comment_author_IP>
			<wp:comment_date>2013-07-03 05:27:07</wp:comment_date>
			<wp:comment_date_gmt>2013-07-03 09:27:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

This may be prove https://twitter.com/search?q=modular%20from%3Aldexterldesign&amp;src=typd ?

Best regards,
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372843627.9367311000823974609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4090</wp:comment_id>
			<wp:comment_author><![CDATA[Lewis Dexter Litanzios]]></wp:comment_author>
			<wp:comment_author_email>mail@ldexterldesign.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.ldexterldesign.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP>213.133.64.253</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 12:17:24</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 16:17:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

Valid point you make

I'd be interested to know what properties you're using modular-scale output with (e.g. font-size, height, margin, padding, width etc.)

Yours hopefully,
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371658644.417790889739990234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15318</wp:comment_id>
			<wp:comment_author><![CDATA[VedqueltWeree]]></wp:comment_author>
			<wp:comment_author_email>septyouhuipu@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.77.0.92</wp:comment_author_IP>
			<wp:comment_date>2013-12-15 20:50:28</wp:comment_date>
			<wp:comment_date_gmt>2013-12-16 01:50:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[z6305

c17217

R10941
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387158629.542110919952392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>New Sites Live</title>
		<link>http://2012-2013.chriskrycho.com/web/new-sites-live/</link>
		<pubDate>Sun, 16 Jun 2013 00:23:53 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1100</guid>
		<description></description>
		<content:encoded><![CDATA[I launched a couple of sites today, both for my friend Sarah Warren:

<ul>
<li><a href="http://theaccidentalokie.com/">The Accidental Okie</a> -- her blog, based on an existing WordPress theme but with some substantial tweaks to typography, colors, backgrounds, etc.</li>
<li><a href="http://swoondesigns.net/">Swoon Designs</a> -- a site for her business selling custom invitations, stationery, and branding.</li>
</ul>

Sarah has been blogging as "<a href="http://theaccidentalokie.com/">The Accidental Okie</a>" for a couple years now, but she spent that whole time on WordPress.com using one of their upgrades for a hosted site on her own domain. I was unsurprised to hear she was outgrowing WordPress.com, though -- good themes are hard to come by and impossible to customize to the extent one would like, so most people who are serious about blogging end up moving to WordPress.org (if they stay with the platform). It made sense to do that and get her professional site launched at the same time.

The design for The Accidental Okie is just a tweak of an existing theme -- completely new background, header, typography, and color scheme, but someone else's work otherwise (and generally very good work indeed.)

The design for <a href="http://swoondesigns.net/">Swoon Designs</a> was a custom design that Sarah and I brainstormed up together after looking at a number of other sites she liked. It's built as a child theme of a popular framework theme, <a href="http://themeforest.net/item/reason-wp-smart-responsive-customizable/2274642">Reason 2.0</a>. That, frankly, is a mistake I won't make again. While the theme works well (and our final outcome was one with which we're both happy), it was a chore getting it to work. The original template designer ignored some fairly basic rules of good design, especially in his CSS, and it showed rather painfully in making a child theme. In the amount of time I spent on it, we could have built Sarah a theme from scratch (and avoided quite a few headaches that came with this setup).

The original is also monstrous as far as these things go -- some 36MB when compressed. By contrast, the compressed size of <em>all</em> the themes for <a href="http://chriskrycho.com">chriskrycho.com</a>, including all the child themes is about 394KB. Yes, that's two orders of magnitude different. Nothing screams bad design decisions like a theme that size.

This experience further persuaded me that, while I'll be happy to keep doing WordPress projects for friends from time to time,<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> I want to continue my move away from PHP and WordPress to other parts of the web. There is simply too much garbage in the PHP world, and I'm increasingly aware that one of the best ways to be getting better work is to get out of that world entirely. There are a lot of reasons for that -- not least the "approachability" factor in PHP, which means a <em>lot</em> of non-programmers are doing it, and especially in the WordPress theme area -- but moving further the way I already have been toward the Python community seems like a better plan every day. (Node.js is of course on my radar as well.) Things that require you to be a good programmer are better for getting work that pays well (as the market isn't flooded with people who don't know what they're doing but are willing to work for a fifth of a reasonable developer rate), and they almost always entail better kinds of work to be doing anyway.

Speaking of which... now would be the point when I stop writing and go hammer out some more work on <a href="http://step-stool.io">Step Stool</a>, which is coming along nicely (albeit more slowly than I hoped). And of course, I've resigned myself to the reality that this site will <em>certainly</em> be getting a fresh coat of paint along the way with that project. Can't pass up an opportunity to redesign the home page, right?

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Just to be incredibly clear: Sarah was a <em>great</em> client, and I have no qualms about working with her again in the future. Likewise, the work I've done <em>pro bono</em> for <a href="http://mereorthodoxy.com">Mere Orthodoxy</a> is just grand as far as I'm concerned, and I have another couple friends with similar projects potentially in the pipeline. But unless things get really desperate, the likelihood that I'll be taking PHP or WordPress jobs from random folks on the web is... low at best.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1100</wp:post_id>
		<wp:post_date>2013-06-15 20:23:53</wp:post_date>
		<wp:post_date_gmt>2013-06-16 00:23:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-sites-live</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="sarah-warren"><![CDATA[Sarah Warren]]></category>
		<category domain="post_tag" nicename="swoon-design"><![CDATA[Swoon Design]]></category>
		<category domain="post_tag" nicename="the-accidental-okie"><![CDATA[The Accidental Okie]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[On launching Swoon Designs and TheAccidentalOkie; and on the rapidly increasing urge to get away from PHP and to greener pastures.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-06-16 00:26:29]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>OS X: A Few Much-Needed Improvements</title>
		<link>http://2012-2013.chriskrycho.com/web/os-x-a-few-much-needed-improvements/</link>
		<pubDate>Sun, 23 Jun 2013 18:03:09 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1105</guid>
		<description></description>
		<content:encoded><![CDATA[A good friend of mine has been making the transition to Mac from Windows recently, and the experience has highlighted a couple of things that Apple really ought to do different and better with OS X:

<ol>
<li>Turn the Dashboard off by default.</li>
<li>Provide information about app installation and uninstallation.</li>
</ol>

<!--more-->

<h3>Turn the Dashboard off by default.</h3>

Apple hasn't been actively supporting Dashboard widgets for years now. The feature was launched with OS X 10.4 Tiger, way back in spring 2005. By the time 10.6 Snow Leopard came around, they were definitely a back-burner item, and the part of 2011-- the year 10.7 released -- saw Apple stop accepting Dashboard widget submissions entirely. It's thus been over two years since new Dashboard widgets were available, and the download site has been <a href="http://www.macrumors.com/2013/05/31/apples-dashboard-widget-download-site-for-os-x-broken/">broken</a> off and on. Dashboard widgets are clearly not a high priority for Apple.

Making it a default part of users' experience -- especially <em>new</em> users -- is just a bad idea. It leads to unnecessary confusion during the setup process, as users are likely to go looking for widgets only to find both that there aren't that many really quality ones, and that new ones are not being submitted. (Most small utilities that would have gone on the Dashboard at one point have since become menubar items -- a change which has some positives, but has also left my menubar increasingly cluttered.) Apple could, and should, leave the functionality in place for those users who rely on it,<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> but turn it off for new users and simply add an option in the Preferences Panel to enable it.

<h3>Teach people how application installation works.</h3>

App installation from non-App Store sources is <em>not</em> obvious. Most installer windows don't have words; some don't even have the standard arrow-to-Application Folder shortcut. The app will happily launch from within the <code>.dmg</code> file. (What's a <code>.dmg</code> file?) To a new OS X user, especially one coming from Windows, this is possibly the most confusing area of the OS. Windows users are accustomed to installation <em>procedures</em>, not "drag this wherever you want it and have a nice day." The simplicity is grand -- it's one of the little details that I love, and one of the niceties of being on a Unix-based system. It is, however, not <em>intuitive</em>. It may "just work," but it isn't <em>obvious</em>.

Likewise, Windows users expect application uninstallation to be substantially more complicated than it is. For at least 95% of the applications I've ever used on OS X, uninstallation simply consists of moving the app to the Trash. Again: this is <em>enormously</em> better than Windows' complicated Add/Remove programs scheme and the accompanying registry and DLL hells that have plagued Windows since time immemorial.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> The problem isn't the process; it's the fact that it's not obvious -- a simple explanation would go a long ways.

Unfortunately, neither installation nor uninstallation are covered by Apple's <a href="http://support.apple.com/kb/HT2514">transition materials</a> as far as I can tell, and in any case they remain opaque to <em>many</em> transitioning users of all stripes. My fairly tech-savvy-but-not-technical mom was confused by this when transitioning eight years ago, I was confused when I switched five years ago, and one of my best friends -- a professional software developer -- required an explanation this weekend. The system is great; the available information, not so much.

A small tutorial that is available on first setup of a computer would be enormously helpful in making these transitions. Allow the user to access it at the completion of the setup process if they wish, and make it available under Finder's Help menu, preferably as a distinct menu item (something like 'New user tutorials' would do the trick nicely).

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
I realized in the course of writing this article that <em>I</em> don't really need or use it, and accordingly <a href="https://discussions.apple.com/thread/4255523?start=0&amp;tstart=0">disabled</a> it entirely.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
Okay, so, just for the last fifteen, twenty and thirty years, respectively. Close enough, in computer terms, right? Or, in other words, since the heyday of <a href="http://en.wikipedia.org/wiki/AOL">AOL</a>, since the launch of <a href="http://en.wikipedia.org/wiki/Mosaic_%28web_browser%29">Mosaic</a>, and since a year after the original Apple Macintosh came out. Like I said: close enough.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1105</wp:post_id>
		<wp:post_date>2013-06-23 14:03:09</wp:post_date>
		<wp:post_date_gmt>2013-06-23 18:03:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>os-x-a-few-much-needed-improvements</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-06-23 18:03:09]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The Little Things: Why I&#039;m Done With Android</title>
		<link>http://2012-2013.chriskrycho.com/web/the-little-things-why-im-done-with-android/</link>
		<pubDate>Mon, 24 Jun 2013 12:00:13 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1108</guid>
		<description></description>
		<content:encoded><![CDATA[We were at the doctor's office for a checkup on our little girl late last week, and I have a Greek class coming up - a tough class for which I figured I'd spend some time studying and preparing while waiting for the doctor. Unfortunately, I just discovered yet another of the thousand little details Google doesn't think matter. I can't study Greek on my phone here because Google refuses to ship (or allow users to install) a typeface that includes the polytonic Greek character set on Android. The default system font, Roboto (a poor clone of Helvetica), has accents but no breathing marks. This means that at least half the words in classical and Koine Greek are simply missing letters on any web page, and for that matter any app that doesn't embed its own fonts.

This is not a make or break issue with the phone, but as my primary tool for mobile work in situations like this, it is quite frustrating. What is more frustrating is Google's absolute unresponsiveness about this. There are many ways the issue could be fixed, none of them particularly complex or time-consuming (unless the folks working on android have made some really silly decisions and coupled the font deeply in the OS, which I don't believe for a second). No, by all appearances the explanation for the still-open ticket is quite simple: <em>Google doesn't care</em>. <!--more-->

Google doesn't care, because Google isn't selling Android. In fact, they're <em>doubly</em> not selling Android. They don't sell the OS or any of the applications that come with it; they give Android away for free. The Nexus program not withstanding, they don't sell phones (or tablets); the Nexus devices are priced as break-even models.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> Google is selling something else entirely: user data.

Put another way, the reason Google doesn't care about fixing user issues like this is because Google isn't selling a product to those users; it is selling the users themselves. The niche concerns of a small group of people who care about typography and digital humanities aren't a large enough blip on their data-collecting radar to begin to matter. I have no doubt there are conscientious engineers at Google who would <em>love</em> to fix these kinds of issues, but the entity as a whole doesn't care about them, because I'm not their customer. Android doesn't have to delight anyone (much less niche users like me); it just has to be cheap enough and good enough for lots of people to use it and therefore for Google to have lots of data points with which it can drive its advertising machine.

While there <em>are</em> companies that are selling phones running Android - most notably, Samsung - none of them appeal to me. I've had (and won't have again) both HTC and Motorola now; LG perennially puts out stinkers; Samsung handsets simply don't appeal to me. Moreover, all of them insist on burdening the Android experience with their own layers of garbage - layers that slow down and clutter an interface that is too often laggy and cluttered as it is. (I have yet to run an Android phone for more than three or four months before it becomes increasingly laggy and buggy. This is annoying, to say the least.) The manufacturers are making the problem worse, not better.

The obvious alternative, an iPhone, is probably the direction I'll jump come my next upgrade. Windows Phone looks pretty solid in a lot of areas, but its application ecosystem makes the Play Market look like a thriving jungle of quality and innovation. The same is largely true of BlackBerry. (Both are better choices than Android in at least one way: the companies behind them are selling you a product, not selling <em>you</em>.) Things may change between now and next summer, but the smooth path between my Mac and the iPhone just makes that look much more sensible anyway. Toss in a company that, though it makes its missteps, cares enormously about design and getting the little details right - little details like full support for polytonic Greek characters from the very first release of the iPhone back in 2007 - and an iPhone suddenly looks very appealing indeed.

And so, while this one more annoyance isn't in and of itself a make-or-break issue with the phone, it <em>is</em> the tipping point for me. It hasn't been any one thing, and in fact there are still a number of things that I think Android does that I wish iOS did, at least in principle: widgets, for example. But then, I look at my home screen, and I have some apps there and a clock widget... nothing I'll miss when I switch. As it turns out, that summarizes my feelings toward Android perfectly: there is nothing I'll miss when I switch, and a lot that I will be happy to bid farewell. Especially: the cheap ripoff of Helvetica as a system font, the lack of really high-quality apps, the lousy hardware quality and cheap cameras, the steady and predictable degradation of OS and app performance over time, the lack of software updates, and (most of all) being the product instead of the customer.

And I'll be able to review my Greek vocabulary on the go.

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Yes, Google owns Motorola Mobility, so in one sense Google does sell phones. However, as anyone who owns a Motorola Android handset from the last couple years knows, the fact that the company is now owned by Google has made <em>zero</em> difference in the either the products Motorola is selling or their attitude toward OS upgrades. Google may own Motorola Mobility, but as far as its core business is concerned, it's largely irrelevant. That purchase, as was obvious at the time and is far more so now that everyone sees what Google has done with the company, had everything to do with patent litigation defense and nothing with interest in building a vertically integrated phone or tablet stack. That's fine; it's Google's call. But Google isn't selling phones.

The lack of OS upgrades remains one of the perenially frustrating issues with Android for me: there is no manufacturer on whom one can rely to consistently provide OS upgrades. To wit: my wife and I are both running "Droid Razr" variants (from Motorola, the company Google <em>owns</em>!), and neither of them is running 4.2 Jelly Bean yet. Hers (a "Razr M") may get it sometime this year; I doubt mine ever will. To the oft-repeated refrain, "Buy Nexus," I simply point to the Nexus 4, with its absurd lack of 4G support. That's simply not a purchase I was interested in come late 2012, and it certainly looks no more appealing today. Moreover, neither Google nor any Android manufacturer has the leverage to force carriers to allow upgrades, even on Nexus devices. See the fiasco with delayed updates to Nexus phones on Verizon, for example.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1108</wp:post_id>
		<wp:post_date>2013-06-24 08:00:13</wp:post_date>
		<wp:post_date_gmt>2013-06-24 12:00:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-little-things-why-im-done-with-android</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
		<category domain="post_tag" nicename="bugs"><![CDATA[bugs]]></category>
		<category domain="post_tag" nicename="delight"><![CDATA[delight]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[iOS]]></category>
		<category domain="post_tag" nicename="iphone"><![CDATA[iPhone]]></category>
		<category domain="post_tag" nicename="polytonic-greek"><![CDATA[polytonic Greek]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_quote_source_name</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_audio_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_format_video_embed</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Android]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[The Little Things: Why I'm Done With Android – Designgineering]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[I can't read polytonic Greek text on my phone. Google doesn't care, because Google isn't selling Android to me—Google is using Android to sell me.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-06-23 20:17:54]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_george@eurony1.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-08-09 12:15:33|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_fathergeo@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-09-09 04:15:52|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_rick@starbooksltd.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-10-01 22:56:52|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7322</wp:comment_id>
			<wp:comment_author><![CDATA[George]]></wp:comment_author>
			<wp:comment_author_email>fathergeo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>37.6.210.254</wp:comment_author_IP>
			<wp:comment_date>2013-09-21 15:17:07</wp:comment_date>
			<wp:comment_date_gmt>2013-09-21 19:17:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Also Quickoffice app can display polytonic greek fonts in word text on android 4.3!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379791027.9981830120086669921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4290</wp:comment_id>
			<wp:comment_author><![CDATA[Ahmed Fasih]]></wp:comment_author>
			<wp:comment_author_email>wuzzyview@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>128.244.11.5</wp:comment_author_IP>
			<wp:comment_date>2013-06-27 11:33:53</wp:comment_date>
			<wp:comment_date_gmt>2013-06-27 15:33:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Android doesn’t have to delight anyone; it just has to be cheap enough and good enough for lots of people to use it." In other words, 'worse is better' (see R. Gabriel, 'The Rise of 'Worse is Better'", from 1991!).
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372347233.780106067657470703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6955</wp:comment_id>
			<wp:comment_author><![CDATA[Bob Almond]]></wp:comment_author>
			<wp:comment_author_email>revbobuk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>92.26.138.216</wp:comment_author_IP>
			<wp:comment_date>2013-09-11 06:17:03</wp:comment_date>
			<wp:comment_date_gmt>2013-09-11 10:17:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not fixed in 4.3 for anything other than embedded fonts, as Chris says. My Nexus 7 won't display Greek properly, and the Bible app I use doesn't embed a font (can't for the life of me understand why!) so Koine Greek is unreadable in any of the NT texts.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6873</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378894623.442285060882568359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6958</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>theology@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-09-11 07:24:56</wp:comment_date>
			<wp:comment_date_gmt>2013-09-11 11:24:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for confirming that, Bob.

I recommend taking a look at the free Logos app, which <em>does</em> embed its fonts---and while they're not <em>particularly</em> elegant (I've seen much better) they at least get the job done. Unfortunately, they don't have the Nestle-Aland text, but they do have the SBL text (which will do in a pinch, even if it has some issues).
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6955</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378898697.4194660186767578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7740</wp:comment_id>
			<wp:comment_author><![CDATA[Rick Morgan]]></wp:comment_author>
			<wp:comment_author_email>rick@starbooksltd.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>75.146.176.93</wp:comment_author_IP>
			<wp:comment_date>2013-10-01 22:56:52</wp:comment_date>
			<wp:comment_date_gmt>2013-10-02 02:56:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my major complaint with Android as well. I use OliveTree bible software and it displays polytonic Greek just fine. When I try to read my koine Greek bible in Kindle, I see almost as many little boxes as I do actual Greek characters! Using a flash card maker gives the same frustrating results. Sad to say, I Stuff seems the only way to go to solve this problem.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380682612.8645060062408447265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6959</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>theology@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-09-11 07:25:38</wp:comment_date>
			<wp:comment_date_gmt>2013-09-11 11:25:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I should clarify: they don't have NA for <em>free</em>. They definitely have it available---you just have to pay for it. The SBL text is freely available via that app, though.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6955</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378898738.3711431026458740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4515</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>web@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-07-02 20:54:30</wp:comment_date>
			<wp:comment_date_gmt>2013-07-03 00:54:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great connection. And there are certainly a lot of areas of life for which I don't even mind that. Unfortunately for Android, the device with which I interact second most (after my laptop, which I use <em>constantly</em> courtesy of my line of work) doesn't fit in that category for me.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4290</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372812870.5662820339202880859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6873</wp:comment_id>
			<wp:comment_author><![CDATA[George]]></wp:comment_author>
			<wp:comment_author_email>fathergeo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.107.178.41</wp:comment_author_IP>
			<wp:comment_date>2013-09-09 04:15:52</wp:comment_date>
			<wp:comment_date_gmt>2013-09-09 08:15:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With android 4.3 and firefox 23 polytonic Greek characters shown up normal!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378714552.6383969783782958984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6877</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>theology@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-09-09 06:08:06</wp:comment_date>
			<wp:comment_date_gmt>2013-09-09 10:08:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>George,</p>

<ol><li>Good!</li>
<li>In what context? If it's on web pages (as is suggested by your reference to Firefox), then it already does that just fine if the site is supplying its own typeface, as I do on this site. I use polytonic Greek in a number of my <a href="/theology" rel="nofollow">theology</a> papers, and that works just fine, because the typeface is embedded. My <em>guess</em> is that's the same thing going on with you, but please do let me know.</li>
<li>Unfortunately, even if Google fixed the situation in 4.3, per one of my other points, that actually doesn't change my situation. I'd still have to buy a new phone to get those results, since there is no chance whatsoever that my phone will ever get that update. (Not even, sad to say, by root-and-ROM, as my model never got a lot of support from that community.)</li></ol>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6873</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378721286.3508150577545166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5744</wp:comment_id>
			<wp:comment_author><![CDATA[George (NYC)]]></wp:comment_author>
			<wp:comment_author_email>george@eurony1.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>207.167.42.98</wp:comment_author_IP>
			<wp:comment_date>2013-08-09 12:15:33</wp:comment_date>
			<wp:comment_date_gmt>2013-08-09 16:15:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Could not have said it better myself Chris. And now that Google broke their Navigator app (as far as I am concerned), getting an iPhone now makes way more sense to sync with my Mac than ever before. Will miss Swype and widgets among other things, but since Apple always adds features rather than takes them away —as Google is prone to do of late— it won't be too long before all those goodies get added to iOS. And the icing on the cake will be getting the most up to date iOS version when it becomes available. No more relying on hardware manufacturers who deem the plethora of countless devices they hastily shove out their doors to no longer be worthy of wasting any more of their time or resources. So Ciao Android, it's been real.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376064933.1206340789794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7674</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>web@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://2012-2013.chriskrycho.com/web</wp:comment_author_url>
			<wp:comment_author_IP>75.163.185.27</wp:comment_author_IP>
			<wp:comment_date>2013-09-29 10:32:05</wp:comment_date>
			<wp:comment_date_gmt>2013-09-29 14:32:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[George, again, that's only going to be when the typeface in question has support for it---and again, that hasn't changed; it's been true for many versions of Android, as it's functionality specific to the app, and not to the OS. (People still running 2.3 will see the same thing.) The problem is top-level support in the typeface for the OS.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7322</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380465125.5546329021453857421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Stop Being a Product</title>
		<link>http://2012-2013.chriskrycho.com/web/stop-being-a-product/</link>
		<pubDate>Wed, 14 Aug 2013 18:36:11 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1117</guid>
		<description></description>
		<content:encoded><![CDATA[<em>Or, Reflections Prompted by the One-Year Anniversary of App.net</em>

Yesterday, App.net turned a year old. Most of my friends in "real life" have never even heard of the social network/platform,<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> so the anniversary rightly went by unnoticed and unheralded. For me, however, the day that App.net went live last year was the start of a sea change in the way I approach the software I use -- a sea change that is still in progress in many ways. What changed? I decided I wanted to <a href="/web/the-little-things-why-im-done-with-android">stop being a product</a> and start being a customer.

It's worth reading the <a href="http://daltoncaldwell.com/an-audacious-proposal">original proposal</a> for App.net: a social networking service, for which at least some users <em>pay</em>. This was incredibly audacious for a social networking backbone (though, as App.net founder Dalton Caldwell noted, not <em>completely</em> unheard of in internet services: GitHub, Dropbox, and a number of others offer the same model). Twitter was making it clear that they were following Google and Facebook's models of selling customer info to advertisers, leaving developers and users of the ecosystem to the whims of whatever made the most sense for sales teams. Facebook's monetization plans were becoming increasingly annoying (ads in my News Feed? No, that really isn't why I'm here...). Google's data-mining was well known but increasingly starting to bother me. All of these had a common thread: they were free to use, on the premise that we don't mind being advertised to constantly and our data being sold to and analyzed by advertising companies. More and more, though, I <em>did</em> mind. The idea that I would pay for access to a social networking backbone would have seemed crazy at some point; no more.

The web was born and bred on free. In many ways, that has been a good thing. The democratizing effects of free access are well-documented, and people's ability to publish and read such a wide array of information has been a great boon to the causes of education and liberty. On the other hand, those trends have engendered an expectation that everything digital <em>ought</em> to be free, and this expectation has had a great many deleterious effects as well. We have seen mass piracy of music and video, cutthroat rates (often consisting of "exposure") for writing, and a flood of terrible content that always threatens to overwhelm the good content available. On balance, I think the web has been a good thing---but it has not been an unalloyed good, and in the last few years an increasing number of people have become dissatisfied with the status quo.

People deserve to be paid for their work, and at some point we have to figure out how to make that happen. Ads have proven insufficient to generate the revenue needed for sustainable business, but they have also incentivized content-providers to aim at generating the most hits, rather than providing the best content. This is not a new problem; the same issue drove a lot of the "yellow journalism" of the last century. The difference is that, coupled with the new, massive data and the disconnecting nature of the web (you don't read a single "paper" anymore, you read a bunch of articles from various places all over the web), advertisizers have had both the means and the motive to pursue practices that are increasingly proven corrosive to privacy and, in the long run, contrary to the best interests of the public.

The way out---and the way that an increasing number of voices have embraced, including those behind App.net---is to go back to paying for things. (Shocking, I know!) With App.net, Dropbox, GitHub, and many other web services, users pay for access to premium functionality. App.net does not sell my data to anyone; they sell the engineering backbone as a service to <em>me</em>, as well as to developers who want to use that backbone to create their own services. Likewise, Dropbox doesn't sell my data, they sell storage. GitHub doesn't sell my data, they sell version control hosting.

I <em>love</em> this idea. So much so that I'm increasingly pulling out of ad-supported services where I'm the product instead of the customer, and moving toward things I pay for. It makes sure the service's incentives are aligned with my best interests as a user, rather than orthogonally and possibly detrimentally to my desires. Not least, it makes sure the people building the service I'm using get paid. Those are good things. It costs more, to be sure, but that helps me think through what to use (and what to skip) more carefully, and that's a good thing, too.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>

Now, if we only someone could figure out a good way to do the same thing with music, writing, and video...

Oh, and App.net? It's the single best social network I've ever used---the quality of conversations I've had there is far, far better than that I've had anywhere else. You should <a href="join.app.net/from/gjgzrkvyhz" title="Join App.net for free">check it out</a>.

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
App.net is, strictly speaking, server infrastructure and an API---that is, a set of software tools that people can use to build services and the servers to run those services. It allows everything from <a href="https://alpha.app.net/global">Twitter-like</a> conversation streams to <a href="http://ohaiapp.net/">personal journaling apps</a> to <a href="http://patter-app.net/">chat rooms</a> or <a href="http://informalprotocol.com/2013/03/project-amy/">clients</a> to <a href="http://files-app.net/">file storage</a> to <a href="http://photo-app.net/">photo sharing</a>. It is not just a social network; it is a way to <em>build</em> social networks. Curious? You can <a href="join.app.net/from/gjgzrkvyhz" title="Join App.net for free">join for free</a>, and only upgrade to a paid account if it makes sense.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
Most of these services have free tiers, but---importantly---those free tiers are subsidized by the paying customers, not by ad sales.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1117</wp:post_id>
		<wp:post_date>2013-08-14 14:36:11</wp:post_date>
		<wp:post_date_gmt>2013-08-14 18:36:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stop-being-a-product</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="advertising"><![CDATA[advertising]]></category>
		<category domain="post_tag" nicename="app-net"><![CDATA[App.net]]></category>
		<category domain="post_tag" nicename="payment"><![CDATA[payment]]></category>
		<category domain="post_tag" nicename="piracy"><![CDATA[piracy]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[With App.net, Dropbox, GitHub, and many other web services, users pay for services, instead of being sold to advertisers. This is a good thing.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-08-14 18:37:50]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The Great Deglobalization</title>
		<link>http://2012-2013.chriskrycho.com/web/great-deglobalization/</link>
		<pubDate>Sat, 31 Aug 2013 22:06:32 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1126</guid>
		<description></description>
		<content:encoded><![CDATA[For nearly all of August, I have been helping a colleague work on a massive code refactoring project. The company I am consulting for relies on a decades-old (though quite robust) piece of engineering modeling software. The software was written in FORTRAN77 in the mid-to-late 1980s, as was common for such packages at the time. It is apparent that it was <em>not</em> written by competent software developers, however: the entire code-base smacks of fastest-way-to-get-it-to-work thinking. All of the code---all 4,000+ lines of it---came in a single file. Every variable in the program is global.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>

Yes, you read that right. <em>Every variable in the program is global.</em>

Since no one at the company is an expert in Fortran at this point---even a modern dialect like Fortran 95<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>---we have been translating the whole thing to Python in order to start re-working pieces of it. (We're using Python because that's the company's standard; we're reworking this piece of code for reasons long and uninteresting.) The formal translation step was completed in mid-July; since then we have been working on refactoring the project so that we can actually <em>change</em> things without breaking everything.

The trick, of course, is all those global variables. In order to be able to begin making any other changes, we have to eliminate the global state. Otherwise, a change in one module can (and often does) have unexpected effects elsewhere.

Our strategy has been simple: take things in small steps, albeit often very <em>time-consuming</em> small steps. In each of those steps we have aimed to make single, incremental change that makes things more explicit and safer. Often, this has simply meant passing and returning inordinate numbers of variables back and forth to functions, simply so that the behavior is explicit (not to say clear). At other times, this has meant doing <em>very bad things</em> that would be intolerable under any other circumstances, but were less bad than what we had before and allowed us to step forward toward our ultimate goals. The prime example---and one of which I'm fairly proud, though I hope never to have to use it again---is leveraging Python's property decorators to allow us to begin using struct-like objects for passing around large amounts of data before all the global state involved in said structs was eliminated.

Basically, we created a stopgap wrapper that made struct access result in changing global state. That way, functions could receive the struct and act on it, with the global state invisible to them: from any function's perspective, it is performing perfectly normal access/mutation operations on the class fields. Behind the scenes, we manipulated global state, until we were able to eliminate global dependencies for that variable entirely, at which point we replaced the quirky behavior with standard field initialization.

Here is the <em>awful</em> pattern my colleague and I used as part of that transition, followed by some explanation. (Do not attempt at home!)

<pre><code>class BasicallyAStruct():
    def __init__(self, some_field):
        global some_field_
        some_field_ = some_field

    @property
    def some_field(self):
        return some_field_

    @some_field.setter
    def some_field(self, value):
        global some_field_
        some_field = value
</code></pre>

Here's how it works. For starters, we renamed every global variable to end in an underscore (like <code>some_field_</code>) to make it easy to distinguish between global and local variables. Then, we created a class that is basically just a struct to hold data. (It can of course be expanded to be a full-up class with methods later if that makes sense.) In the constructor, we declare every global variable that the struct needs to reference, and then assign it the value passed to the constructor. Then we use Python's property decorators to specify the access and mutation behavior: instead of storing the value to a class property like normal, calling the setter or getter<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> actually returns or sets the value in the global variable. The result:

<pre><code>global some_field_  # set to some old value
my_struct = BasicallyAStruct(some_field_)  # create the struct

# Set
my_struct.some_field = new_value  # assign just like normal
print(some_field_)  # new_value

# Get
print(new_value == my_struct.some_field)  # True
</code></pre>

Once we get to a point where we've completely eliminated the global state, we change the class definition to look like a normal class definition, completely removing the <code>global</code> declaration and the <code>@property</code> and <code>@some_field.setter</code> decorators:

<pre><code>class BasicallyAStruct():
    def __init__(self, some_field):
        self.some_field = some_field
</code></pre>

From the functions using the struct, nothing has changed; they are already using standard class property access notation.

It has worked like a charm, and it demonstrates the power of decorators in a bit of an unusual situation. It is, of course, an <em>awful</em> use of decorators, to the extent that I would call it an abuse in general. If I ever found this in "final" code I would probably make a horrible noise in outrage; it's a stupid thing to do. It is, however, <em>less</em> stupid than keeping everything global, and it made for a good intermediate solution that allowed us to minimize changes at each step along the way and therefore minimized the potential number of places anything could break as we refactored.<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>

I'm happy to say that almost all of those global variables are gone, and the classes are all looking pretty much like normal classes now. And the calling functions never even noticed.

I'm incredibly happy with how that came out---and I hope never to do anything like it again.

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Experienced FORTRAN programmers will recognize the pattern: all the variables are declared in a common block at the top of every single function, except for a couple subroutines.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
A fun piece of trivia: my first software development project was all Fortran 95. Fortran was what the physics professor who helped a bunch of students get their projects off the ground knew, so Fortran is where I started. A bit strangely, that background has ended up being valuable to two of my three employers so far.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

<li id="fn:3">
Behind the scenes, Python's property access always calls getter and setter methods---which is why you can override them as we are here. It's a nifty bit of metaprogramming capability the language gives you.&#160;<a href="#fnref:3" rev="footnote">&#8617;</a>
</li>

<li id="fn:4">
This is actually a pretty good example of the principle of information hiding put to a non-standard use.&#160;<a href="#fnref:4" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1126</wp:post_id>
		<wp:post_date>2013-08-31 18:06:32</wp:post_date>
		<wp:post_date_gmt>2013-08-31 22:06:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>great-deglobalization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="decorators"><![CDATA[decorators]]></category>
		<category domain="post_tag" nicename="global-variables"><![CDATA[global variables]]></category>
		<category domain="post_tag" nicename="metaprogramming"><![CDATA[metaprogramming]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="refactoring"><![CDATA[refactoring]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Using python's property decorators to do something a little bit crazy with global variables as part of a massive refactoring. Do not attempt at home.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-08-31 22:06:32]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6527</wp:comment_id>
			<wp:comment_author><![CDATA[Jerrad Genson]]></wp:comment_author>
			<wp:comment_author_email>jerradgenson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.168.166.123</wp:comment_author_IP>
			<wp:comment_date>2013-08-31 20:30:58</wp:comment_date>
			<wp:comment_date_gmt>2013-09-01 00:30:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think you meant "object attributes" instead of "class fields". Though bizarrely, the properties in this pattern do actually behave more like fields than attributes, contrary to everything good and reasonable. Eventually they will be strictly attributes :-p
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377995458.3759028911590576171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6528</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>web@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-08-31 20:32:45</wp:comment_date>
			<wp:comment_date_gmt>2013-09-01 00:32:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quite right. I'll blame the confusion in terminology on the fact that I spent all afternoon working on said monstrous piece of code.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6527</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377995565.9395530223846435546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>iTunes Radio is a Gamechanger</title>
		<link>http://2012-2013.chriskrycho.com/web/itunes-radio-gamechanger/</link>
		<pubDate>Tue, 01 Oct 2013 00:50:03 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1133</guid>
		<description></description>
		<content:encoded><![CDATA[One of the new features Apple launched with iOS7 was iTunes Radio, available not only to iPhone and iPad users but also to anyone who uses iTunes on Windows or OS X. While the service got some attention back when it was announced alongside iOS7 early in the summer, it has received surprisingly little focus since then.

Surprisingly, I say, because I've been using it every day since it went public a week and a half ago, and it is without question the single best internet radio I've ever used. Not "tying with Pandora", not "a little better than Rdio", but head-and-shoulders above anything else in the field. Ten days and a few conversations with friends and acquaintances along, I'm convinced the service is a gamechanger for the music industry---and possibly a very good one.

<h2>It works</h2>

The number one reason I think iTunes Radio is going to change the game is because it just <em>works</em>. I have lots of friends who have had good luck with Pandora over the years, and a fair number of acquaintances who swear by Spotify for finding new music. Neither of them has ever worked for me at all. Part of this is my taste in music, which runs toward neoclassical and film scores---two areas in which all previous internet radio services' libraries have simply been shallow (and here I'm being generous). though Another part is that the algorithms have simply failed me: even in more mainstream music, it's always been a hit and miss experience, with the services often surfacing things that really didn't match the other music at all.

iTunes, by contrast, has not only provided quite a bit of good listening among artists and music I already knew I liked, but has also provided me with <em>new</em> selections I hadn't heard before, but loved. No exaggeration: I have discovered more new music that I want to buy and add to my library in the last ten days via iTunes Radio than in a year of Spotify use or a half decade on Pandora. Moreover, this experience has been repeated on stations ranging from contemporary classical to one built on Mumford &amp; Sons. The stations, with the tuning inputs I have supplied, have consistently surfaced music that was actually what I was looking for, and introduced me to artists I had not yet heard but really enjoyed.

iTunes Radio just <em>works</em> in a way that other services haven't for me. Friends and acquaintances with whom I have discussed it have had exactly the same experience. I am not sure what Apple is doing for their algorithm---<a href="http://stephencarradini.com">one friend</a> suggests they might be using groups that have toured together---but it is working, and working well. Add in the ability to tune a station to switch between "Hits", "Variety", and "Discovery", and iTunes Radio is just fantastic.

So the first half of the equation is the consumer-facing side of things: as it stands, I think iTunes Radio is the best service of its kind out there.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>

<h2>Purchasability</h2>

The other half of the equation is the impact iTunes Radio may have on musicians. The last decade has been an interesting time for the music industry: innovation in means of distribution has been enormous, and the number of artists putting music into the public space has exploded. However, the result has been that the bottom has fallen out of the industry. Top performers still make boatloads of money; everyone else is scrambling to find their feet.

Pandora and Spotify pay artists notoriously low rates---a point that artists have made time and again, and which I will therefore not belabor. Airplay on terrestrial radio may be an order of magnitude harder to come by, but it pays at least that much better, too. In any case, it's beyond dispute at this point that for all but the biggest acts, Spotify will be an irrelevant source of revenue.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> To date, streaming services have been at best a way of getting ears on sounds, in the hope that those ears turn into purchasing---but they rarely do. Why buy, when you can listen endlessly?

As such, music producers---whether labels or individual artists---have always struggled with streaming options. They may provide exposure, but they rarely provide the income necessary to keep making more music. Pandora and others have offered options to purchase music one likes, but it has always been a little kludgy. Here, again, iTunes has it nailed.

Purchasing a song I like in iTunes Radio is <em>one click</em>. Adding it to a wish list to buy later, or showing the item in the iTunes Store, is <em>two</em> clicks. All the friction is gone. This is great for music consumers: it makes owning music we like trivial and immediate. This in turn means that it is also great for music producers: the chance that someone actually buys music they heard streaming goes up enormously when it is this easy.<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> Purchasability---conversion, in marketing terms---has always been the missing element in streaming solutions, and the reasons artists have been so suspicious. Here, it's front and center, simple and straightforward, and attractive. Like that artist? Buy her stuff, <em>right now</em>.

<h2>Conclusion: Gamechanger</h2>

So there you have it. iTunes Radio, although it has largely been overlooked by tech media in the last few weeks, is a gamechanger. In fact, it may be the biggest gamechanger in music we've seen in the last few years, because unlike the myriad other streaming services we've seen, it actually offers the promise of revenue to artists, while providing real value to consumers. I expect that the next few months will see iTunes Radio become increasingly popular as word of mouth spreads that it is just plain <em>better</em> than the alternatives. I also expect that as a result, people will starting buying more music again. That's a net benefit to everyone. (And if somebody can come out and compete with Apple on both terms, more power to them: that, too, will benefit everyone.)

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
Worth note that iTunes Radio isn't directly competing with Spotify, which offers streaming of arbitrary music as its main selling point. It <em>is</em> competing directly with Pandora, and with the much-hyped discovery elements of both Rdio and Spotify.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

<li id="fn:2">
I ran the numbers a while back on an artist whose music I had given <em>thousands</em> of plays. Said artist made more when I bought one two-disc album for about $18 than from all those thousands of plays combined.&#160;<a href="#fnref:2" rev="footnote">&#8617;</a>
</li>

<li id="fn:3">
All of this seems like an obvious way to use the iTunes platform---so much so that tech observers have been calling for it for some time. This in turn raises the question of why it has taken so long, especially given that the labels have been willing to make deals with platforms like Spotify or Google Play which presumably make them much less money. If I had to make a guess, it would be that the labels disliked being beholded to the <em>de facto</em> monopoly iTunes created in the 2000s, and had no interest in repeating that scenario.

At some point, however, the promise of actual revenue from streaming overwhelmed this hesitation, and the labels finally made a deal that was to Apple's satisfaction. Barring something surprising happening, and assuming artists recognize the value this offers them, I expect that the labels will once again find themselves in Apple's pocket---and they know it. That's a better outcome than going broke, though, and they know that, too.&#160;<a href="#fnref:3" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1133</wp:post_id>
		<wp:post_date>2013-09-30 20:50:03</wp:post_date>
		<wp:post_date_gmt>2013-10-01 00:50:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>itunes-radio-gamechanger</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="itunes"><![CDATA[iTunes]]></category>
		<category domain="post_tag" nicename="music"><![CDATA[music]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[iTunes Radio is a gamechanger for the music industry—for consumers and producers both. Why hasn't anyone noticed?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-10-01 00:50:03]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python—homebrew, virtualenv, and OS X Framework builds</title>
		<link>http://2012-2013.chriskrycho.com/web/python-homebrew-virtualenv-os-x-framework-builds/</link>
		<pubDate>Sat, 12 Oct 2013 01:37:41 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1137</guid>
		<description></description>
		<content:encoded><![CDATA[A few weeks ago, I accidentally clobbered my Python 3 installation on OS&nbsp;X. I had gotten pretty much everything set up again---or so I thought. To my chagrin, as I got working on a GUI development project this afternoon, I ended up working on getting Python virtual environments to play nicely with OS&nbsp;X's special Framework version of Python. (The fact that I'm using the homebrew version of Python complicates things even more.)

Moreover, this is not specific to wxPython: the same issues will crop up with <em>any</em> GUI development setup using Python. Since this was an inordinately painful process, and one I've gone through before, I resolved to write up what I did to get it working, so that I can avoid going through this painful process of exploration, Googling, and face-palming in the future.

Gladly, the solution is pretty simple, albeit a little ugly.

I already had <a href="https://bitbucket.org/dhellmann/virtualenvwrapper">virtualenvwrapper</a> installed, but if you don't, you can install it easily enough. (Note: use your <em>primary</em> system Python---the one you execute by typing <code>python</code> and nothing else. Things get confused and messy with <code>virtualenv</code> and <code>virtualenvwrapper</code> if you don't.)

<pre><code>$ pip install virtualenvwrapper
$ source /usr/local/bin/virtualenvwrapper.sh
</code></pre>

To install Python 3, I ran the following command, using <a href="http://brew.sh/">Homebrew</a> to get a <a href="http://stackoverflow.com/q/1444543">Framework</a> build of Python 3 on my system:

<pre><code>$ brew install python3 --framework
</code></pre>

Note that the command to install a Python 2 framework is the <em>same</em> other than the name of the brew (<code>python</code> versus <code>python3</code>).

Once you have virtualenvwrapper and a Framework Python installed, you can go ahead and create a virtual environment to use:

<pre><code>$ mkvirtualenv -p /usr/local/bin/python3 my_virtual_env
</code></pre>

Now things get a little funky. For reasons that are not yet entirely clear to me, the <code>virtualenv</code> tool (around which <code>virtualenvwrapper</code> and its corresponding <code>mkvirtualenv</code> call wrap) creates a non-Framework version of Python, even when you give it the path to a Framework Python.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> This is, to say the least, frustrating. However, there is a workaround: simply copy the executable you want to use over the one created in the virtual environment.

You may want to make a backup of the original first---I did.

<pre><code>$ cp ~/.virtualenvs/my_virtual_env/python3.3 ~/.virtual_envs/my_virtual_env/python3.3-backup
$ cp /usr/local/bin/python3 ~/.virtualenvs/my_virtual_env/bin
</code></pre>

That should do the trick. Obviously you'll still need to install wxPython (or whatever else) in the correct site packages directory. In my case, that simply involved one more step:

<pre><code>$ cp -r ~/Downloads/wx/* ~/.virtualenvs/my_virtual_env/lib/python3.3/site-packages
</code></pre>

<h2>Summary</h2>

To summarize, here is the full installation process on OS X:

<ol>
<li>Install virtualenvwrapper if you don't already have it

<pre><code>$ pip install virtualenvwrapper
$ source /usr/local/bin/virtualenvwrapper.sh
</code></pre></li>
<li>Install a Framework version of Python(3)

<pre><code>$ brew install python3 --framework
</code></pre></li>
<li>Create and then fix the virtual environment:

<pre><code>$ mkvirtualenv -p /usr/local/bin/python3.3 my_virtual_env
$ cp ~/.virtualenvs/my_virtual_env/python3.3 ~/.virtual_envs/my_virtual_env/python3.3-backup
$ cp /usr/local/bin/python3 ~/.virtualenvs/my_virtual_env/bin
</code></pre></li>
</ol>

<div class="footnotes">
<hr />
<ol>

<li id="fn:1">
I'm hoping to spend some time in November seeing if I can figure out why <code>virtualenv</code> does not create the right kind of Python executable. If I get that figured out, I will (1) post my findings here and (2) see if I can't get a patch in to remove this pain point for others in the future.&#160;<a href="#fnref:1" rev="footnote">&#8617;</a>
</li>

</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1137</wp:post_id>
		<wp:post_date>2013-10-11 21:37:41</wp:post_date>
		<wp:post_date_gmt>2013-10-12 01:37:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-homebrew-virtualenv-os-x-framework-builds</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[wpautop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-10-12 01:37:41]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_sboeser@physik.uni-bonn.de</wp:meta_key>
			<wp:meta_value><![CDATA[2013-10-17 14:44:05|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_stcr@_christopher.m.andrews@gmail.com</wp:meta_key>
			<wp:meta_value><![CDATA[2013-10-24 17:11:26|Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8347</wp:comment_id>
			<wp:comment_author><![CDATA[Sebastian]]></wp:comment_author>
			<wp:comment_author_email>sboeser@physik.uni-bonn.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.220.165.163</wp:comment_author_IP>
			<wp:comment_date>2013-10-17 14:44:05</wp:comment_date>
			<wp:comment_date_gmt>2013-10-17 18:44:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Chris,

can I ask why are installing the homebrew version of python at all. In my experience, what works very well is to install the Framework version from the DMG on python org, then setup your virtualenv with the --python= option. Fast and easy... no?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382035445.839107990264892578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8627</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>christopher.m.andrews@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>128.252.20.193</wp:comment_author_IP>
			<wp:comment_date>2013-10-24 17:11:25</wp:comment_date>
			<wp:comment_date_gmt>2013-10-24 21:11:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for posting. I was having trouble with this. There are some workarounds that involve bash scripts which will call the framework python rather than the python executable in the virtualenv directory. I prefer this method because it eliminates some potential confusion you may run into if things suddenly stop working despite the fact that your virtualenv is completely unchanged.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382649086.047790050506591796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8376</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>web@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://2012-2013.chriskrycho.com/web</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-10-18 09:04:58</wp:comment_date>
			<wp:comment_date_gmt>2013-10-18 13:04:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sebastian, you're right—that way <em>does</em> work just fine, and it's probably the way I would recommend to most folks. I like using homebrew in part because it allows me to keep everything up to date much more easily: getting the latest version of even Python is just as simple as running <code>brew update</code> and <code>brew upgrade</code>. (I just upgraded my gfortran install automatically that way, for example.)
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>8347</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382101498.9756400585174560546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14916</wp:comment_id>
			<wp:comment_author><![CDATA[Josh Baylin]]></wp:comment_author>
			<wp:comment_author_email>josh.baylin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://joshbaylin.com</wp:comment_author_url>
			<wp:comment_author_IP>70.89.168.123</wp:comment_author_IP>
			<wp:comment_date>2013-12-12 13:40:36</wp:comment_date>
			<wp:comment_date_gmt>2013-12-12 18:40:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you.  This was a source of much frustration.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386873637.8983910083770751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15073</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>24.211.154.50</wp:comment_author_IP>
			<wp:comment_date>2013-12-13 19:46:56</wp:comment_date>
			<wp:comment_date_gmt>2013-12-14 00:46:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>My pleasure. However, fair warning: I just discovered that if you do exactly this, <code>pip</code> will install things into your normal site-packages directory when running inside the virtualenv. I'm searching for a way around this now (I believe there is one; I just need to figure out what it is).</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>14916</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386982016.6703050136566162109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16469</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Krycho]]></wp:comment_author>
			<wp:comment_author_email>chris@chriskrycho.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriskrycho.com</wp:comment_author_url>
			<wp:comment_author_IP>76.182.59.35</wp:comment_author_IP>
			<wp:comment_date>2013-12-24 10:18:04</wp:comment_date>
			<wp:comment_date_gmt>2013-12-24 15:18:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Josh, another bit of follow-up. As noted in my previous comment, things get weird regarding site-packages if you follow the steps I outlined above. The right way to do this is (partially) documented <a href="http://virtualenv.readthedocs.org/en/latest/virtualenv.html#using-virtualenv-without-bin-python" rel="nofollow">in the virtualenv docs</a>. I'll actually be updating the post above sometime in the next week to reflect this. The short version is, you should use a custom call to the <code>activate_this.py</code> script for launching your program, and run that with the non-virtualenv-Python. It loads the packages installed in the virtual environment, but runs everything with the system (or Homebrew, or Macports, etc.) Python.</p>

<p>In my case, I created a helper script for my executable which includes the lines documented in the link above before executing the main program.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>14916</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387898285.64603710174560546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chriskrycho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Floating Point Math is Hard (i)</title>
		<link>http://2012-2013.chriskrycho.com/web/floating-point-math-hard/</link>
		<pubDate>Sat, 07 Dec 2013 01:21:34 +0000</pubDate>
		<dc:creator><![CDATA[chriskrycho]]></dc:creator>
		<guid isPermaLink="false">http://2012-2013.chriskrycho.com/web/?p=1146</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm working a piece of legacy software, and in performing a code review came
across what appeared to be some extraneous parentheses. I've renamed the terms
as generically as possible because my employer would prefer it that way, but we
have a calculation that in its original form looks like this, where every term
is a floating point value:</p>

<pre><code>calculated_value = a * (b * (c * d + e * f)) + g
</code></pre>

<p>Since multiplication is associative, the outermost set of parentheses <em>should</em>
be redundant. Thinking that would be the case, a coworker and I rewrote the
calculation so:</p>

<pre><code>calculated_value = a * b * (c * d + e * f) + g
</code></pre>

<p>This does <em>not</em> always return the same results, though. I have tested this on
both 2.7.4 and 3.3.1, and for a certain set of values, these two forms of the
calculation definitely return different results. Here is a small, complete
program that produces different results between the two forms of the calculation
on both 2.7.4 and 3.3.1:</p>

<pre><code># test.py
def with_parens(a, b, c, d, e, f, g):
    return (a * (b * (c * d + e * f)) + g)

def without_parens(a, b, c, d, e, f, g):
    return (a * b * (c * d + e * f) + g)

the_values = (1.1523070658790489, 1.7320508075688772, 0.14068856789641426, 0.5950026782638391, 0.028734293347820326, 21.523030539704976, 2.282302370324546)

result_with = with_parens(*the_values)
result_without = without_parens(*the_values)
print((result_with == result_without), result_with, result_without)
</code></pre>

The results:

<pre><code>» python test.py
(False, 3.68370978406535, 3.6837097840653494)

» python3 test.py
False 3.68370978406535 3.6837097840653494
</code></pre>

<p>It is fairly obvious that there is a precision difference here. I am familiar
with the ways that floating point math can be odd, but I would not expect the
loss of associativity to be one of them. And of course, it isn't. It just took me
this long in writing up what was originally going to be a post on
<a href="https://groups.google.com/forum/#!newtopic/comp.lang.python">comp.lang.python</a> to see it.</p>

<p>What is actually going on here is that Python respects order of operations (as
well it should!), and floating point math is imprecise. In the first case,
<code>a * b * (&lt;everything else&gt;)</code>, the <em>first</em> thing that happens is <code>a</code> is
multiplied by <code>b</code> and the result is then multiplied by everything else. In the 
second case, <code>a * (b * &lt;everything else&gt;)</code>, <code>b</code> is multiplied by everything else
and the result is multiplied by <code>a</code> at the end. Many times, this doesn't matter,
but sometimes there is a slight difference in the results because of the loss of
precision when performing floating point operations.</p>

<p>Lesson learned (<em>again</em>): floating point math is hard, and will trick you. What
happens here is <em>functionally</em> a loss of the <a href="http://en.wikipedia.org/wiki/Associative_property">associative property</a> of
multiplication. The two calculations are in a pure mathematical sense equivalent.
But floating point math is not the same as pure math. Not even close.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1146</wp:post_id>
		<wp:post_date>2013-12-06 20:21:34</wp:post_date>
		<wp:post_date_gmt>2013-12-07 01:21:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>floating-point-math-hard</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="floating-point-math"><![CDATA[floating-point math]]></category>
		<category domain="post_tag" nicename="order-of-operations"><![CDATA[order of operations]]></category>
		<category domain="category" nicename="posts"><![CDATA[Posts]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_format</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_tc_post_encoding</wp:meta_key>
			<wp:meta_value><![CDATA[wptexturize]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Order of operations matters with floating point numbers. It will bite you, eventually. It did me, today.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown_gmt</wp:meta_key>
			<wp:meta_value><![CDATA[2013-12-07 01:22:00]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_cws_is_markdown</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
